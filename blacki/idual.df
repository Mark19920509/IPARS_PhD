C  IDUAL.F - BLACK OIL MODEL DUAL APPROXIMATION MULTIBLOCK ROUTINES

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE IDUALS  ()
C  SUBROUTINE IDUALR  ()
C  SUBROUTINE ILODBUF (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
C        KL2,KEYOUT,NBLK,POIL,PWAT,DUNK,RELPRM,DEPTH,DPCSW,
C        NBUFDIM,BUFIF8)
C  SUBROUTINE IJRCAL (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C        KEYOUT,NBLK,POIL,PWAT,PGAS,DUNK,TLAMB,DEPTH,DGRO,TRNDAT,OIL,
C        SGAS,NBUFDIM,BUFIF8,COF,RESID)

C  CODE HISTORY:

C  JOHN WHEELER    12/8/99     ALPHA CODE
C  SUNIL G. THOMAS  9/--/09    MODS TO ALLOW EVMFEM-TRCHEM COUPLING
C  SUNIL G. THOMAS  9/--/09    MODS TO COMPUTE VELOCITY (FOR VECTOR VIS) 
C                              ON INTERFACES FOR EVMFEM

C*********************************************************************
      SUBROUTINE IDUALS ()
C*********************************************************************

C  Loads buffers for Jocabian and residual contributions for the dual
C  approximation block interface

C*********************************************************************
      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h'
      INCLUDE 'control.h'
      INCLUDE 'blkary.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'iarydat.h'

      INTEGER IA(14)
      LOGICAL ONCEONLY
      DATA ONCEONLY /.TRUE./,IA/14*0/

      EXTERNAL ILODBUF

      IF (NFACES.EQ.0) RETURN
      CALL TIMON(12)

      IF (ONCEONLY) THEN
         ONCEONLY=.FALSE.

         IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     &    ' ENTERING SUBROUTINE IDUALS, OLD TAG =',MSGTAG($IMODEL+1)

         IA(1)=13
         IA(2)=N_POIL
         IA(3)=N_PWAT
         IA(4)=N_PGAS
         IA(5)=N_DUNK
         IA(6)=N_TLAMB
         IA(7)=N_DEPTH
         IA(8)=N_DGRO
         IA(9)=N_TRNDAT
         IA(10)=N_SGAS
         IA(11)=N_OIL
         IA(12)=N_ROCK
         IA(13)=N_BUFDIM
         IA(14)=N_BUFIF
      ENDIF

C  PUT B BLOCK QUANTITIES IN INTERFACE BUFFERS

      CALL CALLWORK(ILODBUF,IA)

      CALL TIMOFF(12)

      END
C*********************************************************************
      SUBROUTINE IDUALR ()
C*********************************************************************

C  Computes Jocabian and residual contributions for the dual approximation
C  block interface

C*********************************************************************
      IMPLICIT NONE
$POWER      INCLUDE 'msjunk.h'
      INCLUDE 'control.h'
      INCLUDE 'blkary.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'iarydat.h'

      INTEGER IA(16)
      LOGICAL ONCEONLY
      DATA ONCEONLY /.TRUE./,IA/16*0/

      EXTERNAL IJRCAL

      IF (NFACES.EQ.0) RETURN
      CALL TIMON(12)

      IF (ONCEONLY) THEN
         ONCEONLY=.FALSE.

         IF (LEVELE.AND.BUGKEY(1)) WRITE (NFBUG,*)'PROC',MYPRC,
     &    ' ENTERING SUBROUTINE IDUALR, OLD TAG =',MSGTAG($IMODEL+1)

         IA(1)=15
         IA(2)=N_POIL
         IA(3)=N_PWAT
         IA(4)=N_PGAS
         IA(5)=N_DUNK
         IA(6)=N_VEL
         IA(7)=N_TLAMB
         IA(8)=N_DEPTH
         IA(9)=N_DGRO
         IA(10)=N_TRNDAT
         IA(11)=N_OIL
         IA(12)=N_SGAS
         IA(13)=N_BUFDIM
         IA(14)=N_BUFIF
         IA(15)=N_COF
         IA(16)=N_RESID
      ENDIF

C  COMPUTE JACOBIAN AND RESIDUAL CONTRIBUTIONS

      CALL CALLWORK(IJRCAL,IA)

      CALL TIMOFF(12)

      END
C*********************************************************************
      SUBROUTINE ILODBUF (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
     &           KL2,KEYOUT,NBLK,POIL,PWAT,PGAS,DUNK,TLAMB,DEPTH,DGRO,
     &           TRNDAT,SGAS,OIL,KROCK,NBUFDIM,BUFIF8)
C*********************************************************************

C  PUT B BLOCK QUANTITIES IN INTERFACE BUFFERS

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/BBL (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/BBL
C  DUNK(I,J,K,3) = GAS DENSITY, LB/BBL

C  TLAMB(I,J,K,1) = OIL LAMBDA, STBO/BBL (INPUT, REAL*8)
C  TLAMB(I,J,K,2) = WATER LAMBDA, STBO/BBL
C  TLAMB(I,J,K,3) = GAS LAMBDA, MSCF/BBL

C  DEPTH(I,J,K) = ELEMENT DEPTHS , FT (INPUT, REAL*8)

C  DGRO(I,J,K) = DISOLVED GAS-OIL RATIO (INPUT, REAL*8)

C  TRNDAT(I,J,K,) = MISC. PHYSICAL DATA (INPUT, REAL*4)
C                   (SEE IARYDAT.H FOR DEFINITIONS)

C  SGAS(I,J,K) = GAS SATURATION (INPUT, REAL*4)

C  OIL(I,J,K) = OIL CONCENTRATION (INPUT, REAL*8)

C  KROCK(I,J,K) = ROCK TYPE (INPUT, INTEGER)

C  NBUFDIM = FIRST DIMENSION OF BUFIF8(,) (INPUT, INTEGER)

C  BUFIF8(n,m) = INTERFACE BUFFERS (OUTPUT, REAL*8)

C*********************************************************************
      IMPLICIT NONE
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'rock.h'
      INCLUDE 'ifluid.h'
 
      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      REAL*8  POIL(IDIM,JDIM,KDIM),     DGRO(IDIM,JDIM,KDIM),
     &        DUNK(IDIM,JDIM,KDIM,3),   DEPTH(IDIM,JDIM,KDIM),
     &        PWAT(IDIM,JDIM,KDIM),     TLAMB(IDIM,JDIM,KDIM,3),
     &        BUFIF8(NBUFDIM,*),        PGAS(IDIM,JDIM,KDIM),
     &        OIL(IDIM,JDIM,KDIM)
      REAL*8 BO,SG,SW,PCOW,DPCOW,RPW,RPO,RPG,DKWSW,DKOSW,DKOSG,DKGSG
      REAL*4  TRNDAT(IDIM,JDIM,KDIM,*), SGAS(IDIM,JDIM,KDIM)
      INTEGER KROCK(IDIM,JDIM,KDIM)

      IF (NPAI(NBLK).EQ.0) RETURN

      DO 90 M=1,NPAI(NBLK)
      II1=IESNDI(M,NBLK)
      II2=II1+NESNDI(M,NBLK)-1
      NBT=NBSRI(M,NBLK)
C      NMT=MODBLK(NBT)
      NMT=FMODBLK(NBT)

      IF (NMT.EQ.$IMODEL) THEN

C  IMPLICIT BLACK-OIL MODEL TARGET

         DO 11 II=II1,II2
         K=KFESR(II)
         IA=IJKS(1,K)
         JA=IJKS(2,K)
         KA=IJKS(3,K)
         BUFIF8(II,1)=POIL(IA,JA,KA)
         BUFIF8(II,2)=PWAT(IA,JA,KA)
         BUFIF8(II,3)=PGAS(IA,JA,KA)
         BUFIF8(II,4)=TLAMB(IA,JA,KA,1)
         BUFIF8(II,5)=TLAMB(IA,JA,KA,2)
         BUFIF8(II,6)=TLAMB(IA,JA,KA,3)
         BUFIF8(II,7)=DUNK(IA,JA,KA,1)
         BUFIF8(II,8)=DUNK(IA,JA,KA,2)
         BUFIF8(II,9)=DUNK(IA,JA,KA,3)
         BUFIF8(II,10)=SGAS(IA,JA,KA)
         BUFIF8(II,11)=DEPTH(IA,JA,KA)
         BUFIF8(II,12)=DGRO(IA,JA,KA)
         BUFIF8(II,13)=OIL(IA,JA,KA)
         DO 11 LL=1,19
   11    BUFIF8(II,13+LL)=TRNDAT(IA,JA,KA,LL)

      ELSE

         IF (NMT.EQ.$HMODEL) THEN

C  IMPLICIT HYDROLOGY MODEL TARGET

            DO 55 II=II1,II2
            K=KFESR(II)
            IA=IJKS(1,K)
            JA=IJKS(2,K)
            KA=IJKS(3,K)

            BO=(OSTDEN+GSTDEN*DGRO(IA,JA,KA))/DUNK(IA,JA,KA,1)
            SG=SGAS(IA,JA,KA)
            SW=1.D0-OIL(IA,JA,KA)*BO-SG
            IF (SW.LT.0.D0) SW=0.D0
            KR=KROCK(IA,JA,KA)
            CALL LOOKUP(NPCOW(KR),SW,PCOW,DPCOW)
            IF (SG.GT.0.D0) THEN
               CALL RELPERM3(KR,SW,SG,RPW,RPG,RPO,DKWSW,DKOSW,
     &            DKOSG,DKGSG)
            ELSE
               CALL LOOKUP(NKOSW(KR),SW,RPO,DKOSW)
               CALL LOOKUP(NKWSW(KR),SW,RPW,DKWSW)
            ENDIF

            BUFIF8(II,1)=POIL(IA,JA,KA)
            BUFIF8(II,2)=PWAT(IA,JA,KA)
            BUFIF8(II,3)=RPO
            BUFIF8(II,4)=DKOSW
            BUFIF8(II,5)=RPW
            BUFIF8(II,6)=DKWSW
            BUFIF8(II,7)=DUNK(IA,JA,KA,1)*.178107585530824D0
            BUFIF8(II,8)=DUNK(IA,JA,KA,2)*.178107585530824D0
            BUFIF8(II,9)=DEPTH(IA,JA,KA)
   55       BUFIF8(II,10)=DPCOW

         ENDIF

         IF (NMT.EQ.$TMODEL) THEN

C  IMPLICIT SINGLE PHASE MODEL TARGET

            DO 61 II=II1,II2
            K=KFESR(II)
            IA=IJKS(1,K)
            JA=IJKS(2,K)
            KA=IJKS(3,K)
            BUFIF8(II,1)=PWAT(IA,JA,KA)
            BUFIF8(II,2)=DUNK(IA,JA,KA,2)*.178107585530824D0
   61       BUFIF8(II,3)=DEPTH(IA,JA,KA)

         ENDIF

      ENDIF

   90 CONTINUE

      END
C*********************************************************************
      SUBROUTINE IJRCAL (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &     KEYOUT,NBLK,POIL,PWAT,PGAS,DUNK,VEL,TLAMB,DEPTH,DGRO,TRNDAT,
     &     OIL,SGAS,NBUFDIM,BUFIF8,COF,RESID)
C*********************************************************************

C  COMPUTE JACOBIAN AND RESIDUAL CONTRIBUTIONS FOR THE HYDROLOGY MODEL

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/BBL (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/BBL (INPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/BBL (INPUT, REAL*8)

C  TLAMB(I,J,K,1) = OIL LAMBDA, STBO/BBL (INPUT, REAL*8)
C  TLAMB(I,J,K,2) = WATER LAMBDA, STBO/BBL
C  TLAMB(I,J,K,3) = GAS LAMBDA, MSCF/BBL

C  DEPTH(I,J,K) = ELEMENT DEPTHS, FT (INPUT, REAL*8)

C  DGRO(I,J,K) = DISOLVED GAS-OIL RATIO (INPUT, REAL*8)

C  TRNDAT(I,J,K,) = MISC. PHYSICAL DATA (INPUT, REAL*4)
C                   (SEE IARYDAT.H FOR DEFINITIONS)

C  OIL(I,J,K) = OIL STOCK TANK VOLUME / UNIT PORE VOLUME (INPUT, REAL*8)

C  SGAS(I,J,K) = GAS SATURATION (INPUT, REAL*4)

C  NBUFDIM = FIRST DIMENSION OF BUFIF8(,) (INPUT, INTEGER)

C  BUFIF8(n,m) = INTERFACE BUFFERS (OUTPUT, REAL*8)

C  COF(I,J,K,N,M,L) = JACOBIAN COEFFICIENTS (INPUT AND OUTPUT, REAL*4)

C  RESID(I,J,K,N)= RESIDUALS (INPUT AND OUTPUT, REAL*8)

C  OUTPUT:

C  VEL(I,J,K,1,L) = OIL VELOCITY, LB/SFT-DAY (INPUT, REAL*8)
C  VEL(I,J,K,2,L) = WATER VELOCITY, LB/SFT-DAY (INPUT, REAL*8)
C  VEL(I,J,K,3,L) = GAS VELOCITY, LB/SFT-DAY (INPUT, REAL*8)

C  COFINF(,1,1) = DERIVATIVE OF OIL Q     WRT OIL P
C                                    AiBl          Bl

C  COFINF(,1,2) = DERIVATIVE OF OIL Q     WRT OIL N
C                                    AiBl          Bl

C  COFINF(,1,3) = DERIVATIVE OF OIL Q     WRT GAS N
C                                    AiBl          Bl

C  COFINF(,2,1) = DERIVATIVE OF WATER Q     WRT OIL P
C                                      AiBl          Bl

C  COFINF(,2,2) = DERIVATIVE OF WATER Q     WRT OIL N
C                                      AiBl          Bl

C  COFINF(,2,3) = DERIVATIVE OF WATER Q     WRT GAS N
C                                      AiBl          Bl

C  COFINF(,3,1) = DERIVATIVE OF GAS Q     WRT OIL P
C                                    AiBl          Bl

C  COFINF(,3,2) = DERIVATIVE OF GAS Q     WRT OIL N
C                                    AiBl          Bl

C  COFINF(,3,3) = DERIVATIVE OF GAS Q     WRT GAS N
C                                    AiBl          Bl

C*********************************************************************
      IMPLICIT NONE
      INCLUDE 'control.h'
      INCLUDE 'sblkc.h'
      INCLUDE 'layout.h'
      INCLUDE 'ifluid.h'
      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      REAL*8  POIL(IDIM,JDIM,KDIM),     PGAS(IDIM,JDIM,KDIM),
     &        DUNK(IDIM,JDIM,KDIM,3),   VEL(IDIM,JDIM,KDIM,3,3), 
     &        RESID(IDIM,JDIM,KDIM,3),  TLAMB(IDIM,JDIM,KDIM,3), 
     &        PWAT(IDIM,JDIM,KDIM),     DEPTH(IDIM,JDIM,KDIM), 
     &        BUFIF8(NBUFDIM,*),        DGRO(IDIM,JDIM,KDIM),
     &        OIL(IDIM,JDIM,KDIM) 
      REAL*4  COF(IDIM,JDIM,KDIM,$NUMCOF,3,3),
     &        SGAS(IDIM,JDIM,KDIM),     TRNDAT(IDIM,JDIM,KDIM,*)
      REAL*8  G2,TVW,TVO,TVG,FSO,FSW,FSG,DEPA,DENOA,DENWA,DENGA,
     &        AFI,SQO,SQW,SQG,TCP,DD,FLUX,ALAM,DP,PL,RO,DENGB,
     &        DEN,ROB,FACO,PLB,COB,DLMODO,DLMODP,DLMODG,DLMWDO,
     &        DLMWDG,DDODO,DDODG,DPWDO,DPWDG
      LOGICAL GASOK
      DATA NBGOT/0/,NBGOM/15/

      IF (NIEBS(NBLK).EQ.0) RETURN

C  SET GRAVITY CONSTANT TO .5 g WITH UNITS PSI BBL / FT LB
C  CONVERT TRANSMISSABILITY CONSTANT TO BBL CP / PSI DAY

      G2=.08905379276541D0*GRAV
      TVW=.178107585530824D0*DELTIM/WATVIS
      TVO=.178107585530824D0*DELTIM/OILVIS
      TVG=.178107585530824D0*DELTIM/GASVIS
      NBGO=0
      FSO=0.D0
      FSW=0.D0
      FSG=0.D0

C  LOOP OVER A BLOCK INTERFACE ELEMENTS

      K1=IIEBS(NBLK)
      K2=K1+NIEBS(NBLK)-1
      DO 1 K=K1,K2
      J1=ICGES(K)
      J2=J1+NCGES(K)-1
      IA=IJKS(1,K)
      JA=IJKS(2,K)
      KA=IJKS(3,K)

      DEPA=DEPTH(IA,JA,KA)
      DENOA=DUNK(IA,JA,KA,1)
      DENWA=DUNK(IA,JA,KA,2)

C  SUM OVER THE B BLOCK INTERFACE ELEMENTS

      AFI=0.D0
      SQO=0.D0
      CA1O=0.D0
      CA2O=0.D0
      CA3O=0.D0
      CB1O=0.D0
      CB2O=0.D0
      CB3O=0.D0

      SQW=0.D0
      CA1W=0.D0
      CA2W=0.D0
      CA3W=0.D0
      CB1W=0.D0
      CB2W=0.D0
      CB3W=0.D0

      SQG=0.D0
      CA1G=0.D0
      CA2G=0.D0
      CA3G=0.D0
      CB1G=0.D0
      CB2G=0.D0
      CB3G=0.D0

      DO 2 J=J1,J2
      L= LIBUF(J)
C      NMS=MODBLK(JBLOCK(J))
      NMS=FMODBLK(JBLOCK(J))
      DD=DEPA-BUFIF8(L,11)
      SGASB=BUFIF8(L,10)

C  COMPUTE OIL AND DISOLVED GAS COUPLING

C     ROB < -1 ==> ADJACENT MODEL INCLUDES DISOLVED GAS IN OIL COMPONENT

      ROB=BUFIF8(L,12)
      PLB=BUFIF8(L,4)
      COB=BUFIF8(L,13)
      DLMODO=BUFIF8(L,14)
      DLMODP=BUFIF8(L,15)
      DLMODG=BUFIF8(L,16)
      DLMWDO=BUFIF8(L,17)
      DLMWDG=BUFIF8(L,19)
      DDODO=BUFIF8(L,21)
      DDODG=BUFIF8(L,22)
      DPWDO=BUFIF8(L,28)
      DPWDG=BUFIF8(L,29)
      IF (ROB.LT.-1.D0) THEN
         ROB=DGRO(IA,JA,KA)
         FACO=1.D0/(1.D0+ROB*GSTDEN/OSTDEN)
         PLB=FACO*PLB
         COB=FACO*COB
         DLMODP=FACO*DLMODP
         DLMWDO=DLMODO/FACO
         DDODO=DDODO/FACO
         DPWDO=DPWDO/FACO
         IF (ROB.GT.0.D0) THEN
            DLMODG=DLMODO/ROB
            DLMWDG=DLMWDO/ROB
            DDODG=DDODO/ROB
            DPWDG=DPWDO/ROB
         ENDIF
      ENDIF

      TCP=TVO*TFINS(J)
      DP=POIL(IA,JA,KA)-BUFIF8(L,1)-G2*(DENOA+BUFIF8(L,7))*DD
      DUM1=TCP*DP
      IF (DP.LT.0.D0) THEN

         ALAM=TCP*PLB
         FLUX=ALAM*DP
         RO=ROB
         DUM=ALAM*(DD*TRNDAT(IA,JA,KA,11)-1.)
         CA1O=CA1O+DUM
         CA1G=CA1G+ROB*DUM
         IF (SGAS(IA,JA,KA).EQ.0.) THEN
            DUM=ALAM*DD*TRNDAT(IA,JA,KA,8)
            CA2O=CA2O+DUM
            CA2G=CA2G+ROB*DUM
            DUM=ALAM*DD*TRNDAT(IA,JA,KA,9)
            CA3O=CA3O+DUM
            CA3G=CA3G+ROB*DUM
         ENDIF
         DB1O=ALAM*(DD*BUFIF8(L,24)+1.D0)-DUM1*DLMODP
         IF (SGASB.EQ.0.) THEN
            DB1G=ROB*DB1O
            DB2O=ALAM*DD*DDODO-DUM1*DLMODO
            DUM2=FLUX/COB
            DB2G=ROB*(DB2O-DUM2)
            DB3O=ALAM*DD*DDODG-DUM1*DLMODG
            DB3G=ROB*DB3O+DUM2
         ELSE
            DB1G=ROB*DB1O-FLUX*BUFIF8(L,26)
            DB2O=-DUM1*DLMODO
            DB2G=ROB*DB2O
            DB3O=-DUM1*DLMODG
            DB3G=ROB*DB3O
         ENDIF

      ELSE

         PL=TLAMB(IA,JA,KA,1)
         ALAM=TCP*PL
         RO=DGRO(IA,JA,KA)
         FLUX=ALAM*DP
         DUM=ALAM*(DD*TRNDAT(IA,JA,KA,11)-1.)-DUM1*TRNDAT(IA,JA,KA,2)
         CA1O=CA1O+DUM
         CA1G=CA1G+RO*DUM
         DB1O=ALAM*(DD*BUFIF8(L,24)+1.)
         DB1G=RO*DB1O
         IF (SGASB.EQ.0.) THEN
            DB2O=ALAM*DD*DDODO
            DB2G=RO*DB2O
            DB3O=ALAM*DD*DDODG
            DB3G=RO*DB3O
         ELSE
            DB2O=0.
            DB2G=0.
            DB3O=0.
            DB3G=0.
         ENDIF
         IF (SGAS(IA,JA,KA).EQ.0.) THEN
            DUM2=FLUX/OIL(IA,JA,KA)
            DUM=ALAM*DD*TRNDAT(IA,JA,KA,8)-DUM1*TRNDAT(IA,JA,KA,1)
            CA2O=CA2O+DUM
            CA2G=CA2G+RO*(DUM-DUM2)
            DUM=ALAM*DD*TRNDAT(IA,JA,KA,9)-DUM1*TRNDAT(IA,JA,KA,3)
            CA3O=CA3O+DUM
            CA3G=CA3G+RO*DUM+DUM2
         ELSE
            CA1G=CA1G-FLUX*TRNDAT(IA,JA,KA,13)
            DUM=DUM1*TRNDAT(IA,JA,KA,1)
            CA2O=CA2O-DUM
            CA2G=CA2G-RO*DUM
            DUM=DUM1*TRNDAT(IA,JA,KA,3)
            CA3O=CA3O-DUM
            CA3G=CA3G-RO*DUM
         ENDIF
            
      ENDIF
      CB1O=CB1O+DB1O
      CB2O=CB2O+DB2O
      CB3O=CB3O+DB3O
      COFINF(J,2,1)=DB1O
      COFINF(J,2,2)=DB2O
      COFINF(J,2,3)=DB3O
      SQO=SQO+FLUX
      IF (NMS.NE.MODACT
$TRCHEM     & .AND. MODACT.NE.FLOWMODEL
     &   ) FLUXOM(1)=FLUXOM(1)+FLUX
      FLUX=RO*FLUX

C  COMPUTE FREE GAS COUPLING

      GASOK=.TRUE.
      IF (SGAS(IA,JA,KA).EQ.0..AND.SGASB.EQ.0.) GO TO 3
      TCP=TVG*TFINS(J)
      DENGA=DUNK(IA,JA,KA,3)
      DENGB=BUFIF8(L,9)
      DEN=DENGA+DENGB
      IF (DENGA.EQ.0.D0.OR.DENGB.EQ.0.D0) DEN=2.D0*DEN
      DP=PGAS(IA,JA,KA)-BUFIF8(L,3)-G2*DEN*DD
      DUM1=TCP*DP
      IF (DP.LT.0.D0) THEN
         IF (SGASB.EQ.0.) GO TO 3
         PL=BUFIF8(L,6)
         IF (PL.NE.0.D0) GASOK=.FALSE.
         ALAM=TCP*PL
         CA1G=CA1G+ALAM*(DD*TRNDAT(IA,JA,KA,12)-TRNDAT(IA,JA,KA,17))
         CA2G=CA2G-ALAM*TRNDAT(IA,JA,KA,18)
         CA3G=CA3G-ALAM*TRNDAT(IA,JA,KA,19)
         DB1G=DB1G+ALAM*(DD*BUFIF8(L,25)+BUFIF8(L,30))
     &      -DUM1*BUFIF8(L,20)
         DB2G=DB2G-DUM1*DDODO+ALAM*BUFIF8(L,31)
         DB3G=DB3G-DUM1*DDODG+ALAM*BUFIF8(L,32)
      ELSE
         IF (SGAS(IA,JA,KA).EQ.0.) GO TO 3
         PL=TLAMB(IA,JA,KA,3)
         IF (PL.NE.0.D0) GASOK=.FALSE.
         ALAM=TCP*PL
         CA1G=CA1G+ALAM*(DD*TRNDAT(IA,JA,KA,12)-TRNDAT(IA,JA,KA,17))
     &      -DUM1*TRNDAT(IA,JA,KA,7)
         CA2G=CA2G-DUM1*TRNDAT(IA,JA,KA,8)-ALAM*TRNDAT(IA,JA,KA,18)
         CA3G=CA3G-DUM1*TRNDAT(IA,JA,KA,9)-ALAM*TRNDAT(IA,JA,KA,19)
         DB1G=DB1G+ALAM*(DD*BUFIF8(L,25)+BUFIF8(L,30))
         DB2G=DB2G+ALAM*BUFIF8(L,31)
         DB3G=DB3G+ALAM*BUFIF8(L,32)
      ENDIF
      FLUX=FLUX+TCP*PL*DP
    3 CB1G=CB1G+DB1G
      CB2G=CB2G+DB2G
      CB3G=CB3G+DB3G
      COFINF(J,3,1)=DB1G
      COFINF(J,3,2)=DB2G
      COFINF(J,3,3)=DB3G
      IF (GASOK) THEN
         COFINF(J,3,2)=DB2G-RO
         COFINF(J,3,3)=DB3G+1.
      ENDIF
      SQG=SQG+FLUX
      IF (NMS.NE.MODACT
$TRCHEM     & .AND. MODACT.NE.FLOWMODEL
     &   ) FLUXOM(3)=FLUXOM(3)+FLUX

C  COMPUTE WATER COUPLING

      TCP=TVW*TFINS(J)
      DP=PWAT(IA,JA,KA)-BUFIF8(L,2)-G2*DD*(DUNK(IA,JA,KA,2)+BUFIF8(L,8))
      DUM1=TCP*DP
      IF (DP.LT.0.D0) THEN
         PL=BUFIF8(L,5)
         ALAM=TCP*PL
         CA1W=CA1W+ALAM*(DD*TRNDAT(IA,JA,KA,10)-TRNDAT(IA,JA,KA,14))
         CA2W=CA2W-ALAM*TRNDAT(IA,JA,KA,15)
         CA3W=CA3W-ALAM*TRNDAT(IA,JA,KA,16)

         DB1W=ALAM*(DD*BUFIF8(L,23)+BUFIF8(L,27))
     &      -DUM1*BUFIF8(L,18)
         DB2W=ALAM*DPWDO-DUM1*DLMWDO
         DB3W=ALAM*DPWDG-DUM1*DLMWDG
      ELSE
         PL=TLAMB(IA,JA,KA,2)
         ALAM=TCP*PL
         CA1W=CA1W+ALAM*(DD*TRNDAT(IA,JA,KA,10)-TRNDAT(IA,JA,KA,14))
     &         -DUM1*TRNDAT(IA,JA,KA,5)
         CA2W=CA2W-DUM1*TRNDAT(IA,JA,KA,4)-ALAM*TRNDAT(IA,JA,KA,15)
         CA3W=CA3W-DUM1*TRNDAT(IA,JA,KA,6)-ALAM*TRNDAT(IA,JA,KA,16)
         DB1W=ALAM*(DD*BUFIF8(L,23)+BUFIF8(L,27))
         DB2W=ALAM*DPWDO
         DB3W=ALAM*DPWDG
      ENDIF
      CB1W=CB1W+DB1W
      CB2W=CB2W+DB2W
      CB3W=CB3W+DB3W
      COFINF(J,1,1)=DB1W
      COFINF(J,1,2)=DB2W
      COFINF(J,1,3)=DB3W
      FLUX=TCP*PL*DP
      SQW=SQW+FLUX
      AFI=AFI+AREAI(J)
      IF (NMS.NE.MODACT
$TRCHEM     & .AND. MODACT.NE.FLOWMODEL
     &   ) FLUXOM(2)=FLUXOM(2)+FLUX

    2 CONTINUE

C  STORE JACOBIAN COEFFICIENTS AND RESIDUALS
C  NOTE THAT ALL INTERFACE OFF-DIAGANOL COEFFICIENTS ARE CONSOLIDATED
C  IN ONE COEFFICIENT PER EQUATION 

      GO TO (11,12,13,14,15,16),KDIRS(J1)

   11 COF(IA,JA,KA,3,1,1)=CB1W
      COF(IA,JA,KA,3,1,2)=CB2W
      COF(IA,JA,KA,3,1,3)=CB3W
      COF(IA,JA,KA,3,2,1)=CB1O
      COF(IA,JA,KA,3,2,2)=CB2O
      COF(IA,JA,KA,3,2,3)=CB3O
      COF(IA,JA,KA,3,3,1)=CB1G
      COF(IA,JA,KA,3,3,2)=CB2G
      COF(IA,JA,KA,3,3,3)=CB3G
      VEL(IA+1,JA,KA,1,1)=SQO/AFI/DELTIM
      VEL(IA+1,JA,KA,2,1)=SQW/AFI/DELTIM
      VEL(IA+1,JA,KA,3,1)=SQG/AFI/DELTIM
      GO TO 17

   12 COF(IA,JA,KA,5,1,1)=CB1W
      COF(IA,JA,KA,5,1,2)=CB2W
      COF(IA,JA,KA,5,1,3)=CB3W
      COF(IA,JA,KA,5,2,1)=CB1O
      COF(IA,JA,KA,5,2,2)=CB2O
      COF(IA,JA,KA,5,2,3)=CB3O
      COF(IA,JA,KA,5,3,1)=CB1G
      COF(IA,JA,KA,5,3,2)=CB2G
      COF(IA,JA,KA,5,3,3)=CB3G
      VEL(IA,JA+1,KA,1,2)=SQO/AFI/DELTIM
      VEL(IA,JA+1,KA,2,2)=SQW/AFI/DELTIM
      VEL(IA,JA+1,KA,3,2)=SQG/AFI/DELTIM
      GO TO 17

   13 COF(IA,JA,KA,7,1,1)=CB1W
      COF(IA,JA,KA,7,1,2)=CB2W
      COF(IA,JA,KA,7,1,3)=CB3W
      COF(IA,JA,KA,7,2,1)=CB1O
      COF(IA,JA,KA,7,2,2)=CB2O
      COF(IA,JA,KA,7,2,3)=CB3O
      COF(IA,JA,KA,7,3,1)=CB1G
      COF(IA,JA,KA,7,3,2)=CB2G
      COF(IA,JA,KA,7,3,3)=CB3G
      VEL(IA,JA,KA+1,1,3)=SQO/AFI/DELTIM
      VEL(IA,JA,KA+1,2,3)=SQW/AFI/DELTIM
      VEL(IA,JA,KA+1,3,3)=SQG/AFI/DELTIM
      GO TO 17

   14 COF(IA,JA,KA,2,1,1)=CB1W
      COF(IA,JA,KA,2,1,2)=CB2W
      COF(IA,JA,KA,2,1,3)=CB3W
      COF(IA,JA,KA,2,2,1)=CB1O
      COF(IA,JA,KA,2,2,2)=CB2O
      COF(IA,JA,KA,2,2,3)=CB3O
      COF(IA,JA,KA,2,3,1)=CB1G
      COF(IA,JA,KA,2,3,2)=CB2G
      COF(IA,JA,KA,2,3,3)=CB3G
      VEL(IA,JA,KA,1,1)=-SQO/AFI/DELTIM
      VEL(IA,JA,KA,2,1)=-SQW/AFI/DELTIM
      VEL(IA,JA,KA,3,1)=-SQG/AFI/DELTIM
      GO TO 17

   15 COF(IA,JA,KA,4,1,1)=CB1W
      COF(IA,JA,KA,4,1,2)=CB2W
      COF(IA,JA,KA,4,1,3)=CB3W
      COF(IA,JA,KA,4,2,1)=CB1O
      COF(IA,JA,KA,4,2,2)=CB2O
      COF(IA,JA,KA,4,2,3)=CB3O
      COF(IA,JA,KA,4,3,1)=CB1G
      COF(IA,JA,KA,4,3,2)=CB2G
      COF(IA,JA,KA,4,3,3)=CB3G
      VEL(IA,JA,KA,1,2)=-SQO/AFI/DELTIM
      VEL(IA,JA,KA,2,2)=-SQW/AFI/DELTIM
      VEL(IA,JA,KA,3,2)=-SQG/AFI/DELTIM
      GO TO 17

   16 COF(IA,JA,KA,6,1,1)=CB1W
      COF(IA,JA,KA,6,1,2)=CB2W
      COF(IA,JA,KA,6,1,3)=CB3W
      COF(IA,JA,KA,6,2,1)=CB1O
      COF(IA,JA,KA,6,2,2)=CB2O
      COF(IA,JA,KA,6,2,3)=CB3O
      COF(IA,JA,KA,6,3,1)=CB1G
      COF(IA,JA,KA,6,3,2)=CB2G
      COF(IA,JA,KA,6,3,3)=CB3G
      VEL(IA,JA,KA,1,3)=-SQO/AFI/DELTIM
      VEL(IA,JA,KA,2,3)=-SQW/AFI/DELTIM
      VEL(IA,JA,KA,3,3)=-SQG/AFI/DELTIM

   17 COF(IA,JA,KA,1,1,1)=COF(IA,JA,KA,1,1,1)+CA1W
      COF(IA,JA,KA,1,1,2)=COF(IA,JA,KA,1,1,2)+CA2W
      COF(IA,JA,KA,1,1,3)=COF(IA,JA,KA,1,1,3)+CA3W
      COF(IA,JA,KA,1,2,1)=COF(IA,JA,KA,1,2,1)+CA1O
      COF(IA,JA,KA,1,2,2)=COF(IA,JA,KA,1,2,2)+CA2O
      COF(IA,JA,KA,1,2,3)=COF(IA,JA,KA,1,2,3)+CA3O
      COF(IA,JA,KA,1,3,1)=COF(IA,JA,KA,1,3,1)+CA1G
      COF(IA,JA,KA,1,3,2)=COF(IA,JA,KA,1,3,2)+CA2G
      COF(IA,JA,KA,1,3,3)=COF(IA,JA,KA,1,3,3)+CA3G

      IF (BUGKEY(4)) THEN
         FSO=FSO+SQO
         FSW=FSW+SQW
         FSG=FSG+SQG
         IF (NBGO.LT.NBGOM) THEN
            WRITE (NFBUG,18) NBLK,IA,JA,KA,SQO,SQW,SQG
            NBGO=NBGO+1
         ENDIF
      ENDIF
   18 FORMAT(' FACE: BLOCK,I,J,K =',4I4,' RO =',G14.7,' RW =',G14.7/
     &   ' RG =',G14.7)

      RESID(IA,JA,KA,1)=RESID(IA,JA,KA,1)+SQW
      RESID(IA,JA,KA,2)=RESID(IA,JA,KA,2)+SQO
    1 RESID(IA,JA,KA,3)=RESID(IA,JA,KA,3)+SQG

      IF (BUGKEY(4)) THEN
         WRITE (NFBUG,19) NBLK,FSO,FSW,FSG,
     &      (FSO*OSTDEN+FSG*GSTDEN),FSW*WSTDEN
         NBGOT=NBGOT+NBGO
         IF (NBGOT.GT.150) NBGOM=-1
      ENDIF
   19 FORMAT(' FACE FLUX SUMS: BLOCK =',I3,' QO =',G16.9,' QW =',G16.9/
     &   ' QG =',G16.9,' QO+G[LB] =',G16.9,' QW[LB] =',G16.9)

      END
