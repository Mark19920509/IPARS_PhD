C  ISPRB3.F - TRANSPORT EVALUATION FOR DIAGONAL TENSOR PERMEABILITY
C  BLACK OIL IMPLICIT MODEL

C  ROUTINES IN THIS MODULE:
C
C  SUBROUTINE CALLISPRB3( NAMEROUTINE, JTRAN )
C  SUBROUTINE ISPRB3X (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                      KEYOUT,NBLK,TCOFX,DEPTH,POIL,PWAT,PGAS,DUNK,
C                      TRNDAT,COF,SEPARABLE)
C  SUBROUTINE ISPRB3Y (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                      KEYOUT,NBLK,TCOFY,DEPTH,POIL,PWAT,PGAS,DUNK,
C                      TRNDAT,COF,SEPARABLE)
C  SUBROUTINE ISPRB3Z (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                      KEYOUT,NBLK,TCOFZ,DEPTH,POIL,PWAT,PGAS,DUNK,
C                      TRNDAT,COF,SEPARABLE)

C  CODE HISTORY:

C  JOHN WHEELER     8/01/97    INITIAL VERSION

C  QIN LU   9/04/97   ADDED GAS PHASE AND Y,Z DIRECTIONS 
C  QIN LU   9/18/97   CHANGE INDEPENDENT VARIABLES (No,Pw,Ng) TO  
C                     (Pw,No,Ng) FOR THE SOLVER
C  QIN LU   9/03/98   DON'T NEED TO SEPARATE 2-PHASE AND 3-PHASE IN 
C                     FORMULAS ANY MORE
C  YURI VASSILEVSKI 2/23/00    ADD STORING PRESSURE BLOCK IN SEPARABLE

C*********************************************************************
      SUBROUTINE CALLISPRB3( NAMEROUTINE, JTRAN )
C*********************************************************************
      EXTERNAL NAMEROUTINE
      INTEGER  JTRAN(*)

      INCLUDE 'sol.h'
      INCLUDE 'sprhandle.h'

      IF (PREC.EQ.10.or.PREC.EQ.11.or.PREC.EQ.12) THEN
          N_RESIDCOPY = JTRAN(10)
          JTRAN(10)=N_SEPARABLE
          CALL CALLWORK(NAMEROUTINE,JTRAN)
          JTRAN(10)=N_RESIDCOPY
      END IF

      RETURN
      END

C*********************************************************************
      SUBROUTINE ISPRB3X (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                   KEYOUT,NBLK,TCOFX,DEPTH,POIL,PWAT,PGAS,DUNK,
     &                   TRNDAT,COF,SEPARABLE,TLAMB)
C*********************************************************************

C  Black oil model x transport for diagonal tensor permeability

C  TCOFX(I,J,K) = X TRANSMISSABILITY CONSTANT, CU-FT CP / PSI DAY
C                 (INPUT, REAL*8)

C  DEPTH(I,J,K) = ELEMENT CENTER DEPTH, FT (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/CU-FT (INPUT, REAL*8)

C  TLAMB(I,J,K,1) ==> OIL LAMBDA
C  TLAMB(I,J,K,2) ==> WATER LAMBDA
C  TLAMB(I,J,K,3) ==> GAS LAMBDA

C  TRNDAT(I,J,K,1) = DERIVATIVE OF OIL LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,2) = DERIVATIVE OF OIL LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,3) = DERIVATIVE OF OIL LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,4) = DERIVATIVE OF WATER LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,5) = DERIVATIVE OF WATER LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,6) = DERIVATIVE OF WATER LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,7) = DERIVATIVE OF GAS LAMBDA WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,8) = DERIVATIVE OF GAS LAMBDA WRT OIL CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT OIL CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,9) = DERIVATIVE OF GAS LAMBDA WRT GAS CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT GAS CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,10) = DERIVATIVE OF WATER DENSITY WRT WATER PRESSURE
C  TRNDAT(I,J,K,11) = DERIVATIVE OF OIL DENSITY WRT OIL PRESSURE
C  TRNDAT(I,J,K,12) = DERIVATIVE OF GAS DENSITY WRT GAS PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,13) = DERIVATIVE OF Ro WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,14) = DERIVATIVE OF WATER PRESSURE WRT OIL PRESSURE
C  TRNDAT(I,J,K,15) = DERIVATIVE OF WATER PRESSURE WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,16) = DERIVATIVE OF WATER PRESSURE WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,17) = DERIVATIVE OF GAS PRESSURE WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,18) = DERIVATIVE OF GAS PRESSURE WRT OIL CONCENTRATION (3 PHASE)
C  TRNDAT(I,J,K,19) = DERIVATIVE OF GAS PRESSURE WRT GAS CONCENTRATION (3 PHASE)

C  COF(I,J,K,N,L,M) = JACOBIAN COEFFICIENTS (INPUT AND OUTPUT, REAL*4)

C  SEPARABLE(*) = WORK ARRAY FOR SEPARABLE PRECONDITIONER; STORES FIRST
C                 3*(IDIM+JDIM+KDIM) ELEMENTS HERE
C*********************************************************************
      Implicit Real*8(A-H,O-Z) 
      INCLUDE 'control.h'
      INCLUDE 'layout.h'

      INCLUDE 'ifluid.h'
      INCLUDE 'sprb.h'

      REAL*8 SEPARABLE(*)
      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 TCOFX(IDIM,JDIM,KDIM),       DEPTH(IDIM,JDIM,KDIM),
     &       POIL(IDIM,JDIM,KDIM),        PWAT(IDIM,JDIM,KDIM),        
     &       PGAS(IDIM,JDIM,KDIM),        DUNK(IDIM,JDIM,KDIM,3),
     &       TLAMB(IDIM,JDIM,KDIM,3),     TRNDAT(IDIM,JDIM,KDIM,19)
      REAL*4 COF(IDIM,JDIM,KDIM,7,3,3)
      REAL*8 DP,RO,SRO,ALAM,FLUX,DD,G2
      REAL*8 C11,C12,C13,C21,C22,C23,C11G,C12G,C13G,C21G,C22G,C23G
      LOGICAL GASZ,GASM

c Indices of the trace lines
      call BLKOFF(NBLK,NXO,NYO,NZO,ierr)
      Itrace = ILINEINDX(NBLK) - NXO
      Jtrace = JLINEINDX(NBLK) - NYO
      Ktrace = KLINEINDX(NBLK) - NZO
      IF (heter) THEN
       DO 11 I = 1, 3*IDIM*JDIM
         SEPARABLE(I) = 0.0D0
 11    CONTINUE
      ELSE
       DO 12 I = 1, 3*IDIM
         SEPARABLE(I) = 0.0D0
 12    CONTINUE
      END IF

      G2=.5D0*GRAV
      IL2P=IL2+1
      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2P

      IF (TCOFX(I,J,K).EQ.0.D0) GO TO 1

      DD=(DEPTH(I,J,K)-DEPTH(I-1,J,K))*G2
      IF (DUNK(I,J,K,3).EQ.0.D0) THEN
         GASZ=.FALSE.
      ELSE
         GASZ=.TRUE.
      ENDIF
      IF (DUNK(I-1,J,K,3).EQ.0.D0) THEN
         GASM=.FALSE.
      ELSE
         GASM=.TRUE.
      ENDIF
    

C  WATER EQUATION, X TRANSPORT AT I - 1/2

      DP=PWAT(I,J,K)-PWAT(I-1,J,K)-DD*(DUNK(I,J,K,2)+DUNK(I-1,J,K,2))
      DP=DP*TCOFX(I,J,K)
      IF (DP.LT.0.D0) THEN
         ALAM=TCOFX(I,J,K)*TLAMB(I-1,J,K,2)
         C11=0.
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)
         C13=0.
         C21=-DP*TRNDAT(I-1,J,K,4)
         C22=ALAM*(DD*TRNDAT(I-1,J,K,10)+1.D0)-DP*TRNDAT(I-1,J,K,5)
         C23=-DP*TRNDAT(I-1,J,K,6)
      ELSE
         ALAM=TCOFX(I,J,K)*TLAMB(I,J,K,2)
         C11=-DP*TRNDAT(I,J,K,4)
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)-DP*TRNDAT(I,J,K,5)
         C13=-DP*TRNDAT(I,J,K,6)
         C21=0.
         C22=ALAM*(DD*TRNDAT(I-1,J,K,10)+1.D0)
         C23=0.
      ENDIF
      FLUX=ALAM*DP/TCOFX(I,J,K)
C the SEPARABLE needs two dimensional traces
      IF (heter) THEN

       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (K.eq.Ktrace) THEN
             II = I + (J-1)*IDIM 
             SEPARABLE(II+IDIM*JDIM)=SEPARABLE(II+IDIM*JDIM)+C12
             SEPARABLE(II)=C22
         END IF
       ENDIF
       IF (KEYOUT(I-1,J,K).GT.0) THEN
         IF (K.eq.Ktrace) THEN
             II = I - 1 + (J-1)*IDIM 
             SEPARABLE(II+IDIM*JDIM)=SEPARABLE(II+IDIM*JDIM)-C22
             SEPARABLE(II+2*IDIM*JDIM)=-C12
         END IF
       ENDIF

C the SEPARABLE needs one dimensional traces
      ELSE

       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (J.eq.Jtrace.and.K.eq.Ktrace) THEN
             II = I 
             SEPARABLE(II+IDIM)=SEPARABLE(II+IDIM)+C12
             SEPARABLE(II)=C22
         END IF
       ENDIF
       IF (KEYOUT(I-1,J,K).GT.0) THEN
         IF (J.eq.Jtrace.and.K.eq.Ktrace) THEN
             II = I - 1  
             SEPARABLE(II+IDIM)=SEPARABLE(II+IDIM)-C22
             SEPARABLE(II+2*IDIM)=-C12
         END IF
       ENDIF
    
      ENDIF
c end if heterogenous


    1 CONTINUE
      END


C*********************************************************************
      SUBROUTINE ISPRB3Y (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                   KEYOUT,NBLK,TCOFY,DEPTH,POIL,PWAT,PGAS,DUNK,
     &                   TRNDAT,COF,SEPARABLE,TLAMB)
C*********************************************************************

C  Black oil model y transport for diagonal tensor permeability

C  TCOFY(I,J,K) = Y TRANSMISSABILITY CONSTANT, CU-FT CP / PSI DAY
C                 (INPUT, REAL*8)

C  DEPTH(I,J,K) = ELEMENT CENTER DEPTH, FT (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/CU-FT (INPUT, REAL*8)

C  TLAMB(I,J,K,1) ==> OIL LAMBDA
C  TLAMB(I,J,K,2) ==> WATER LAMBDA
C  TLAMB(I,J,K,3) ==> GAS LAMBDA

C  TRNDAT(I,J,K,1) = DERIVATIVE OF OIL LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,2) = DERIVATIVE OF OIL LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,3) = DERIVATIVE OF OIL LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,4) = DERIVATIVE OF WATER LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,5) = DERIVATIVE OF WATER LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,6) = DERIVATIVE OF WATER LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,7) = DERIVATIVE OF GAS LAMBDA WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,8) = DERIVATIVE OF GAS LAMBDA WRT OIL CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT OIL CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,9) = DERIVATIVE OF GAS LAMBDA WRT GAS CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT GAS CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,10) = DERIVATIVE OF WATER DENSITY WRT WATER PRESSURE
C  TRNDAT(I,J,K,11) = DERIVATIVE OF OIL DENSITY WRT OIL PRESSURE
C  TRNDAT(I,J,K,12) = DERIVATIVE OF GAS DENSITY WRT GAS PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,13) = DERIVATIVE OF Ro WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,14) = DERIVATIVE OF WATER PRESSURE WRT OIL PRESSURE
C  TRNDAT(I,J,K,15) = DERIVATIVE OF WATER PRESSURE WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,16) = DERIVATIVE OF WATER PRESSURE WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,17) = DERIVATIVE OF GAS PRESSURE WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,18) = DERIVATIVE OF GAS PRESSURE WRT OIL CONCENTRATION (3 PHASE)
C  TRNDAT(I,J,K,19) = DERIVATIVE OF GAS PRESSURE WRT GAS CONCENTRATION (3 PHASE)

C  COF(I,J,K,N,L,M) = JACOBIAN COEFFICIENTS (INPUT AND OUTPUT, REAL*4)

C  SEPARABLE(*) = WORK ARRAY FOR SEPARABLE PRECONDITIONER; STORES FIRST
C                 3*(IDIM+JDIM+KDIM) ELEMENTS HERE
C*********************************************************************
      Implicit Real*8(A-H,O-Z) 
      INCLUDE 'control.h'
      INCLUDE 'layout.h'

      INCLUDE 'ifluid.h'
      INCLUDE 'sprb.h'

      REAL*8 SEPARABLE(*)
      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 TCOFY(IDIM,JDIM,KDIM),       DEPTH(IDIM,JDIM,KDIM),
     &       POIL(IDIM,JDIM,KDIM),        PWAT(IDIM,JDIM,KDIM),        
     &       PGAS(IDIM,JDIM,KDIM),        DUNK(IDIM,JDIM,KDIM,3),
     &       TLAMB(IDIM,JDIM,KDIM,3),     TRNDAT(IDIM,JDIM,KDIM,19)
      REAL*4 COF(IDIM,JDIM,KDIM,7,3,3)
      REAL*8 DP,RO,SRO,ALAM,FLUX,DD,G2
      REAL*8 C11,C12,C13,C21,C22,C23,C11G,C12G,C13G,C21G,C22G,C23G
      LOGICAL GASZ,GASM
c Indexes of the trace lines
      call BLKOFF(NBLK,NXO,NYO,NZO,ierr)
      Itrace = ILINEINDX(NBLK) - NXO
      Jtrace = JLINEINDX(NBLK) - NYO
      Ktrace = KLINEINDX(NBLK) - NZO
      IF (heter) THEN
       DO 11 J = 1, 3*JDIM*IDIM
         SEPARABLE(3*IDIM*JDIM+J) = 0.0D0
 11    CONTINUE
      ELSE
       DO 12 J = 1, 3*JDIM
         SEPARABLE(3*IDIM+J) = 0.0D0
 12    CONTINUE
      END IF

      G2=.5D0*GRAV
      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2P=JL2V(K)+1
      DO 1 J=JL1,JL2P
      DO 1 I=IL1,IL2

      IF (TCOFY(I,J,K).EQ.0.D0) GO TO 1

      DD=(DEPTH(I,J,K)-DEPTH(I,J-1,K))*G2
      IF (DUNK(I,J,K,3).EQ.0.D0) THEN
         GASZ=.FALSE.
      ELSE
         GASZ=.TRUE.
      ENDIF
      IF (DUNK(I,J-1,K,3).EQ.0.D0) THEN
         GASM=.FALSE.
      ELSE
         GASM=.TRUE.
      ENDIF
    

C  WATER EQUATION, Y TRANSPORT AT J - 1/2

      DP=PWAT(I,J,K)-PWAT(I,J-1,K)-DD*(DUNK(I,J,K,2)+DUNK(I,J-1,K,2))
      DP=DP*TCOFY(I,J,K)
      IF (DP.LT.0.D0) THEN
         ALAM=TCOFY(I,J,K)*TLAMB(I,J-1,K,2)
         C11=0.
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)
         C13=0.
         C21=-DP*TRNDAT(I,J-1,K,4)
         C22=ALAM*(DD*TRNDAT(I,J-1,K,10)+1.D0)-DP*TRNDAT(I,J-1,K,5)
         C23=-DP*TRNDAT(I,J-1,K,6)
      ELSE
         ALAM=TCOFY(I,J,K)*TLAMB(I,J,K,2)
         C11=-DP*TRNDAT(I,J,K,5)
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)-DP*TRNDAT(I,J,K,5)
         C13=-DP*TRNDAT(I,J,K,6)
         C21=0.
         C22=ALAM*(DD*TRNDAT(I,J-1,K,10)+1.D0)
         C23=0.
      ENDIF
      FLUX=ALAM*DP/TCOFY(I,J,K)
C the SEPARABLE needs two dimensional traces
      IF (heter) THEN
       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (K.eq.Ktrace) THEN
             JJ = I + (J-1)*IDIM
             SEPARABLE(4*IDIM*JDIM+JJ)=
     &       SEPARABLE(4*IDIM*JDIM+JJ)+C12
             SEPARABLE(3*IDIM*JDIM+JJ)=C22
         END IF
       ENDIF
       IF (KEYOUT(I,J-1,K).GT.0) THEN
         IF (K.eq.Ktrace) THEN
             JJ = I + (J-2)*IDIM
             SEPARABLE(4*IDIM*JDIM+JJ)=
     &       SEPARABLE(4*IDIM*JDIM+JJ)-C22
             SEPARABLE(5*IDIM*JDIM+JJ)=-C12
         END IF
       ENDIF

      ELSE
C the SEPARABLE needs one dimensional traces
       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (I.eq.Itrace.and.K.eq.Ktrace) THEN
             JJ = J 
             SEPARABLE(3*IDIM+JDIM+JJ)=
     &       SEPARABLE(3*IDIM+JDIM+JJ)+C12
             SEPARABLE(3*IDIM+JJ)=C22
         END IF
       ENDIF
       IF (KEYOUT(I,J-1,K).GT.0) THEN
         IF (I.eq.Itrace.and.K.eq.Ktrace) THEN
             JJ = J - 1 
             SEPARABLE(3*IDIM+JDIM+JJ)=
     &       SEPARABLE(3*IDIM+JDIM+JJ)-C22
             SEPARABLE(3*IDIM+2*JDIM+JJ)=-C12
         END IF
       ENDIF
    
      ENDIF
c end if heterogenous

    1 CONTINUE
      END



C*********************************************************************
      SUBROUTINE ISPRB3Z (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                   KEYOUT,NBLK,TCOFZ,DEPTH,POIL,PWAT,PGAS,DUNK,
     &                   TRNDAT,COF,SEPARABLE,TLAMB)
C*********************************************************************

C  Black oil model z transport for diagonal tensor permeability

C  TCOFZ(I,J,K) = Z TRANSMISSABILITY CONSTANT, CU-FT CP / PSI DAY
C                 (INPUT, REAL*8)

C  DEPTH(I,J,K) = ELEMENT CENTER DEPTH, FT (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/CU-FT (INPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/CU-FT (INPUT, REAL*8)

C  TLAMB(I,J,K,1) ==> OIL LAMBDA
C  TLAMB(I,J,K,2) ==> WATER LAMBDA
C  TLAMB(I,J,K,3) ==> GAS LAMBDA

C  TRNDAT(I,J,K,1) = DERIVATIVE OF OIL LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,2) = DERIVATIVE OF OIL LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,3) = DERIVATIVE OF OIL LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,4) = DERIVATIVE OF WATER LAMBDA WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,5) = DERIVATIVE OF WATER LAMBDA WRT OIL PRESSURE
C  TRNDAT(I,J,K,6) = DERIVATIVE OF WATER LAMBDA WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,7) = DERIVATIVE OF GAS LAMBDA WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,8) = DERIVATIVE OF GAS LAMBDA WRT OIL CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT OIL CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,9) = DERIVATIVE OF GAS LAMBDA WRT GAS CONCENTRATION (3 PHASE)
C                  = DERIVATIVE OF OIL DENSITY WRT GAS CONCENTRATION (2 PHASE)
C  TRNDAT(I,J,K,10) = DERIVATIVE OF WATER DENSITY WRT WATER PRESSURE
C  TRNDAT(I,J,K,11) = DERIVATIVE OF OIL DENSITY WRT OIL PRESSURE
C  TRNDAT(I,J,K,12) = DERIVATIVE OF GAS DENSITY WRT GAS PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,13) = DERIVATIVE OF Ro WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,14) = DERIVATIVE OF WATER PRESSURE WRT OIL PRESSURE
C  TRNDAT(I,J,K,15) = DERIVATIVE OF WATER PRESSURE WRT OIL CONCENTRATION
C  TRNDAT(I,J,K,16) = DERIVATIVE OF WATER PRESSURE WRT GAS CONCENTRATION
C  TRNDAT(I,J,K,17) = DERIVATIVE OF GAS PRESSURE WRT OIL PRESSURE (3 PHASE)
C  TRNDAT(I,J,K,18) = DERIVATIVE OF GAS PRESSURE WRT OIL CONCENTRATION (3 PHASE)
C  TRNDAT(I,J,K,19) = DERIVATIVE OF GAS PRESSURE WRT GAS CONCENTRATION (3 PHASE)

C  COF(I,J,K,N,L,M) = JACOBIAN COEFFICIENTS (INPUT AND OUTPUT, REAL*4)

C  SEPARABLE(*) = WORK ARRAY FOR SEPARABLE PRECONDITIONER; STORES FIRST
C                 3*(IDIM+JDIM+KDIM) ELEMENTS HERE
C*********************************************************************
      Implicit Real*8(A-H,O-Z) 
      INCLUDE 'control.h'
      INCLUDE 'layout.h'

      INCLUDE 'ifluid.h'
      INCLUDE 'sprb.h'

      REAL*8 SEPARABLE(*)
      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 TCOFZ(IDIM,JDIM,KDIM),       DEPTH(IDIM,JDIM,KDIM),
     &       POIL(IDIM,JDIM,KDIM),        PWAT(IDIM,JDIM,KDIM),        
     &       PGAS(IDIM,JDIM,KDIM),        DUNK(IDIM,JDIM,KDIM,3),
     &       TLAMB(IDIM,JDIM,KDIM,3),     TRNDAT(IDIM,JDIM,KDIM,19)
      REAL*4 COF(IDIM,JDIM,KDIM,7,3,3)
      REAL*8 DP,RO,SRO,ALAM,FLUX,DD,G2
      REAL*8 C11,C12,C13,C21,C22,C23,C11G,C12G,C13G,C21G,C22G,C23G
      LOGICAL GASZ,GASM
c Indexes of the trace lines
      call BLKOFF(NBLK,NXO,NYO,NZO,ierr)
      Itrace = ILINEINDX(NBLK) - NXO
      Jtrace = JLINEINDX(NBLK) - NYO
      Ktrace = KLINEINDX(NBLK) - NZO
      IF (heter) THEN
       DO 11 K = 1, 3*KDIM
         SEPARABLE(6*IDIM*JDIM+K) = 0.0D0
 11    CONTINUE
      ELSE
       DO 12 K = 1, 3*KDIM
         SEPARABLE(3*IDIM+3*JDIM+K) = 0.0D0
 12    CONTINUE
      END IF

      G2=.5D0*GRAV
      KL2P=KL2+1
      DO 1 K=KL1,KL2P
      IF ( K .eq. KL1 ) then
         JL1=JL1V(K)
         JL2=JL2V(K)
      ELSE IF (K.LT.KL2P) THEN
         JL1=min( JL1V(K-1) , JL1V(K) )
         JL2=max( JL2V(K-1) , JL2V(K) )
      ELSE
         JL1=JL1V(KL2)
         JL2=JL2V(KL2)
      ENDIF
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2

      IF (TCOFZ(I,J,K).EQ.0.D0) GO TO 1

      DD=(DEPTH(I,J,K)-DEPTH(I,J,K-1))*G2
      IF (DUNK(I,J,K,3).EQ.0.D0) THEN
         GASZ=.FALSE.
      ELSE
         GASZ=.TRUE.
      ENDIF
      IF (DUNK(I,J,K-1,3).EQ.0.D0) THEN
         GASM=.FALSE.
      ELSE
         GASM=.TRUE.
      ENDIF
    
C  WATER EQUATION, Z TRANSPORT AT K - 1/2

      DP=PWAT(I,J,K)-PWAT(I,J,K-1)-DD*(DUNK(I,J,K,2)+DUNK(I,J,K-1,2))
      DP=DP*TCOFZ(I,J,K)
      IF (DP.LT.0.D0) THEN
         ALAM=TCOFZ(I,J,K)*TLAMB(I,J,K-1,2)
         C11=0.
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)
         C13=0.
         C21=-DP*TRNDAT(I,J,K-1,4)
         C22=ALAM*(DD*TRNDAT(I,J,K-1,10)+1.D0)-DP*TRNDAT(I,J,K-1,5)
         C23=-DP*TRNDAT(I,J,K-1,6)
      ELSE
         ALAM=TCOFZ(I,J,K)*TLAMB(I,J,K,2)
         C11=-DP*TRNDAT(I,J,K,4)
         C12=ALAM*(DD*TRNDAT(I,J,K,10)-1.D0)-DP*TRNDAT(I,J,K,5)
         C13=-DP*TRNDAT(I,J,K,6)
         C21=0.
         C22=ALAM*(DD*TRNDAT(I,J,K-1,10)+1.D0)
         C23=0.
      ENDIF
      FLUX=ALAM*DP/TCOFZ(I,J,K)
C the SEPARABLE needs two dimensional traces
      IF (heter) THEN
       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (I.eq.Itrace.and.J.eq.Jtrace) THEN
             SEPARABLE(6*IDIM*JDIM+KDIM+K)=
     &       SEPARABLE(6*IDIM*JDIM+KDIM+K)+C12
             SEPARABLE(6*IDIM*JDIM+K)=C22
         END IF
       ENDIF
       IF (KEYOUT(I,J,K-1).GT.0) THEN
         IF (I.eq.Itrace.and.J.eq.Jtrace) THEN
             SEPARABLE(6*IDIM*JDIM+KDIM+K-1)=
     &       SEPARABLE(6*IDIM*JDIM+KDIM+K-1)-C22
             SEPARABLE(6*IDIM*JDIM+2*KDIM+K-1)=-C12
         END IF
       ENDIF

C the SEPARABLE needs one dimensional traces
      ELSE
       IF (KEYOUT(I,J,K).GT.0) THEN
         IF (I.eq.Itrace.and.J.eq.Jtrace) THEN
             SEPARABLE(3*IDIM+3*JDIM+KDIM+K)=
     &       SEPARABLE(3*IDIM+3*JDIM+KDIM+K)+C12
             SEPARABLE(3*IDIM+3*JDIM+K)=C22
         END IF
       ENDIF
       IF (KEYOUT(I,J,K-1).GT.0) THEN
         IF (I.eq.Itrace.and.J.eq.Jtrace) THEN
             SEPARABLE(3*IDIM+3*JDIM+KDIM+K-1)=
     &       SEPARABLE(3*IDIM+3*JDIM+KDIM+K-1)-C22
             SEPARABLE(3*IDIM+3*JDIM+2*KDIM+K-1)=-C12
         END IF
       ENDIF
      ENDIF
c end if heterogenous
    
    1 CONTINUE
      END


