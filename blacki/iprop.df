C  IPROP.F - EVALUATE PHYSICAL PROPERTIES AND MISC. TASKS

C  ROUTINES IN THIS MODULE:

C  SUBROUTINE IPROP(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                   KEYOUT,NBLK,POR,POIL,PWAT,PGAS,OIL,GAS,TRNDAT,
C                   DUNK,COF,RESID,KROCK,SGAS,DGRO,TLAMB,SGASN,
C                   POILN,OILN,GASN,WATN)

C  SUBROUTINE IUPSOL (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                     KEYOUT,NBLK,POIL,OIL,GAS,STEP,SGAS,DGRO)
 
C  SUBROUTINE IBUGOUT (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                      KEYOUT,NBLK,POR,PWAT,POIL,PGAS,OIL,GAS,DUNK,
C                      COF,RESID,KROCK,TCOFX,TCOFY,TCOFZ,TLAMB,TRNDAT)

C  SUBROUTINE IMAXRESID (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
C                        KEYOUT,NBLK,RESID)

C  SUBROUTINE BOUNSAT (PO,RO,RSO,DRSO,BO,DBODP,DBODR)

C  SUBROUTINE BOCONST (COMIN,P1,P2)

C  CODE HISTORY:

c  see history prior to 1/20/99 in istep.df

C  MPeszynska     1/25/99   The file istep.df reached critical mass;
C                           moved the properties code from istep.df and all
C                           the flash calculations to IFLASH.df, changed the
C                           use of flash to only deliver saturations, added
C                           POSTFLASH() and removed the non-modular MBlock code

C  Qin Lu         1/27/99   Corrected the formulation for Bo to ensure positive
C                           oil compressibility at two-phase region

C  John Wheeler   9/29/99   Revise Bo calculation, switch from Pw to Po as
C                           a primary variable, and eliminate unnecessary
C                           arrays. Add constrained Newtonian iteration.

C  John Wheeler   8/22/00   Add routine to fix min oil compressibility

C  John Wheeler   5/17/01   Remove approximations in the Jacobian

C*********************************************************************
      SUBROUTINE IPROP(IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                KEYOUT,NBLK,POR,POIL,PWAT,PGAS,OIL,GAS,TRNDAT,
     &                DUNK,COF,RESID,KROCK,SGAS,DGRO,TLAMB,SGASN,
     &                POILN,OILN,GASN,WATN,RHO)
C*********************************************************************
 
C  ROUTINE EVALUATES CURRENT PHYSICAL CONDITIONS AND ACCUMILATION
C  TERMS IN COEFFICIENTS AND RESIDUALS.  THIS IS A WORK ROUTINE.

C  POR(I,J,K)  = PORE VOLUME (INPUT, REAL*4)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (OUTPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (OUTPUT, REAL*8)

C  OIL(I,J,K) = OIL STOCK TANK VOLUME / UNIT PORE VOLUME (INPUT, REAL*8)

C  GAS(I,J,K) = GAS STOCK TANK VOLUME / UNIT PORE VOLUME (INPUT, REAL*8)

C  TRNDAT(I,J,K,) = GRID-ELEMENT ARRAY FOR TRANSMISSABILITY DATA (REAL*4)
C                   (SEE IARYDAT.H FOR DEFINITIONS)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/BBL (OUTPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/BBL (OUTPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/BBL (OUTPUT, REAL*8)

C  COF(I,J,K,L,M,N) = JACOBIAN COEFFICIENTS (OUTPUT, REAL*4)

C  RESID(I,J,K) = RESIDUALS (OUTPUT, REAL*8)

C  KROCK(I,J,K) = ROCK TYPE (INPUT, INTEGER)

C  SGAS(I,J,K) = GAS SATURATION, (INPUT AND OUTPUT, REAL*4)

C  DGRO(I,J,K) = DISOLVED GAS-OIL RATIO, (OUTPUT, REAL*8)

C  TLAMB(I,J,K,1) = OIL LAMBDA (OUTPUT, REAL*8)
C  TLAMB(I,J,K,2) = WATER LAMBDA
C  TLAMB(I,J,K,3) = GAS LAMBDA

C  SGASN(I,J,K) = GAS SATURATION AT BEGINNING OF TIME STEP (OUTPUT, REAL*4)

C  POILN(I,J,K) = OIL PRESSURE AT BEGINNING OF TIME STEP (OUTPUT, REAL*8)

C  OILN(I,J,K) = OIL CONTENT AT BEGINNING OF TIME STEP, STBO/BBL
C                (OUTPUT, REAL*8)

C  GASN(I,J,K) = GAS CONTENT AT BEGINNING OF TIME STEP, MSCF/BBL
C                (OUTPUT, REAL*8)

C  WATN(I,J,K) = WATER CONTENT AT BEGINNING OF TIME STEP, STBO/BBL
C                (OUTPUT, REAL*8)

C***********************************************************************
      INCLUDE 'control.h'
      INCLUDE 'rock.h'
      INCLUDE 'ifluid.h'
      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),KEYOUT(IDIM,JDIM,KDIM)
      INTEGER KROCK(IDIM,JDIM,KDIM)
      REAL*4 COF(IDIM,JDIM,KDIM,$NUMCOF,3,3)
      REAL*4 POR(IDIM,JDIM,KDIM),         SGAS(IDIM,JDIM,KDIM)
      REAL*4 TRNDAT(IDIM,JDIM,KDIM,*),    SGASN(IDIM,JDIM,KDIM)
      REAL*8 POIL(IDIM,JDIM,KDIM),        PWAT(IDIM,JDIM,KDIM)
      REAL*8 PGAS(IDIM,JDIM,KDIM),        OIL(IDIM,JDIM,KDIM)
      REAL*8 GAS(IDIM,JDIM,KDIM),         WATN(IDIM,JDIM,KDIM)
      REAL*8 DUNK(IDIM,JDIM,KDIM,3),      RESID(IDIM,JDIM,KDIM,3)
      REAL*8 DGRO(IDIM,JDIM,KDIM),        TLAMB(IDIM,JDIM,KDIM,3)
      REAL*8 POILN(IDIM,JDIM,KDIM)
      REAL*8 OILN(IDIM,JDIM,KDIM),        GASN(IDIM,JDIM,KDIM),
     &       RHO(IDIM,JDIM,KDIM,3)

      REAL*8 PW,PO,PG,OL,GA,RBW,DRBW,BSO,DBSO,RSO,DRSO,DROK,PORV,PORVN,
     &     RO,DBODG,DBODO,BO,WT,DSWDO,DSWDG,DSWDP,PCOW,PCGO,DPCGO,
     &     SG,SO,SW,TLO,TLW,TLG,DPCOW,DKOSW,DKOSG,DKWSW,DKGSG,RELO,
     &     RELW,RELG,DSGDP,RHOO,RHOG,RBG,RBO,DBG,BG,DSGDG,DSGDO,DBODP,
     &     FSG,DFSG,DSG,DUM1,DUM2,SGTOL,DBODR,RHOW,SGMIN,DPWDP,DPGDP

      DATA SGTOL/1.D-7/

      SGMIN=.01D0*CVTOL
      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2

      IF (KEYOUT(I,J,K).NE.1) GO TO 1

      PO=POIL(I,J,K)
      OL=OIL(I,J,K)
      GA=GAS(I,J,K)
      SGS=SGAS(I,J,K)
      KR=KROCK(I,J,K)
      PORV=(1.D0+ROKCMP*PO)*POR(I,J,K)
      DROK=ROKCMP*POR(I,J,K)

C  TEST NUMBER OF PHASES

      CALL LOOKUP(NRSO,PO,RSO,DRSO)
      IF (GA.GT.RSO*OL) GO TO 2

C  TWO PHASES (OIL AND WATER)

    7 RO=GA/OL
      DGRO(I,J,K)=RO
      CALL BOUNSAT(PO,RO,RSO,DRSO,BO,DBODP,DBODR)
      DBODG=DBODR/OL
      DBODO=-RO*DBODG
      RBO=1.D0/BO
      RHOO=(OSTDEN+RO*GSTDEN)*RBO
      DDODG=RBO*(GSTDEN-RHOO*DBODR)/OL
      DUNK(I,J,K,1)=RHOO
      RHO(I,J,K,1)=RHOO
      SO=OL*BO
      SG=0.D0
      SGAS(I,J,K)=0.D0
CZZZ BETTER FREE GAS FLOW TO AN ELEMENT WITH NO FREE GAS
C     PGAS(I,J,K)=POIL(I,J,K)+PCGO0(KR)
      IF (RSO.GT.0.D0) THEN
         PGAS(I,J,K)=POIL(I,J,K)+PCGO0(KR)*RO/RSO
      ELSE
         PGAS(I,J,K)=POIL(I,J,K)+PCGO0(KR)
      ENDIF
      CALL LOOKUP(NBG,PGAS(I,J,K),BG,DBG)
      RHOG=GSTDEN/BG
      DUNK(I,J,K,3)=RHOG
      RHO(I,J,K,3)=RHOG
      SW=1.D0-SO
      DSWDP=-OL*DBODP
      DSWDO=RO*DBODR-BO
      DSWDG=-DBODR
      CALL LOOKUP(NPCOW(KR),SW,PCOW,DPCOW)
      PW=PO-PCOW
      PWAT(I,J,K)=PW
      CALL LOOKUP(NRBW,PW,RBW,DRBW)
      RHOW=WSTDEN*RBW
      WT=RBW*SW
      DUNK(I,J,K,2)=RHOW
      RHO(I,J,K,2)=RHOW

      CALL LOOKUP(NKOSW(KR),SW,RELO,DKOSW)
      CALL LOOKUP(NKWSW(KR),SW,RELW,DKWSW)
      TLO=RELO*RBO
      TLAMB(I,J,K,1)=TLO
      TLW=RELW*RBW
      TLAMB(I,J,K,2)=TLW
      TLAMB(I,J,K,3)=0.D0

C  TRNDAT(I,J,K,1) = DERIVATIVE OF OIL LAMBDA WRT OIL CONCENTRATION
      TRNDAT(I,J,K,1) = RBO*(DKOSW*DSWDO-TLO*DBODO)
C  TRNDAT(I,J,K,2) = DERIVATIVE OF OIL LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,2) = RBO*(DKOSW*DSWDP-TLO*DBODP)
C  TRNDAT(I,J,K,3) = DERIVATIVE OF OIL LAMBDA WRT GAS CONCENTRATION
      TRNDAT(I,J,K,3) = RBO*(DKOSW*DSWDG-TLO*DBODG)
C  TRNDAT(I,J,K,4) = DERIVATIVE OF WATER LAMBDA WRT OIL CONCENTRATION
      TRNDAT(I,J,K,4) = RBW*DKWSW*DSWDO
C  TRNDAT(I,J,K,5) = DERIVATIVE OF WATER LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,5) = RBW*DKWSW*DSWDP+RELW*DRBW
C  TRNDAT(I,J,K,6) = DERIVATIVE OF WATER LAMBDA WRT GAS CONCENTRATION
      TRNDAT(I,J,K,6) = RBW*DKWSW*DSWDG
C  TRNDAT(I,J,K,7) = DERIVATIVE OF GAS LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,7) = 0.
C  TRNDAT(I,J,K,8) = DERIVATIVE OF OIL DENSITY WRT OIL CONCENTRATION
C     TRNDAT(I,J,K,8) = -RBO*DDODG   ! GXLCRR 12/05/02
      TRNDAT(I,J,K,8) = -RO*DDODG    
C  TRNDAT(I,J,K,9) = DERIVATIVE OF OIL DENSITY WRT GAS CONCENTRATION
      TRNDAT(I,J,K,9) = DDODG
C  TRNDAT(I,J,K,10) = DERIVATIVE OF WATER DENSITY WRT WATER PRESSURE
      TRNDAT(I,J,K,10) = WSTDEN*DRBW
C  TRNDAT(I,J,K,11) = DERIVATIVE OF OIL DENSITY WRT OIL PRESSURE
      TRNDAT(I,J,K,11) = -RHOO*RBO*DBODP
C  TRNDAT(I,J,K,12) = DERIVATIVE OF GAS DENSITY WRT GAS PRESSURE
      TRNDAT(I,J,K,12) = -RHOG*DBG/BG
C  TRNDAT(I,J,K,13) = DERIVATIVE OF Ro WRT OIL PRESSURE
      TRNDAT(I,J,K,13) = 0.D0
C  TRNDAT(I,J,K,14) = DERIVATIVE OF WATER PRESSURE WRT OIL PRESSURE
      TRNDAT(I,J,K,14) = 1.-DPCOW*DSWDP
C  TRNDAT(I,J,K,15) = DERIVATIVE OF WATER PRESSURE WRT OIL CONCENTRATION
      TRNDAT(I,J,K,15) = -DPCOW*DSWDO
C  TRNDAT(I,J,K,16) = DERIVATIVE OF WATER PRESSURE WRT GAS CONCENTRATION
      TRNDAT(I,J,K,16) = DPCOW*DBODR

      GO TO 6

C  THREE PHASES

    2 DGRO(I,J,K)=RSO
      CALL LOOKUP(NBSO,PO,BSO,DBSO)
      RBO=1.D0/BSO
      RHOO=(OSTDEN+RSO*GSTDEN)*RBO
      DUNK(I,J,K,1)=RHOO
      RHO(I,J,K,1)=RHOO
      SO=BSO*OL

C     DETERMINE SG BY NEWTONIAN ITERATION

      DUM1=GA-RSO*OL
      DUM2=1.D0-SO
      SG=SGS
      IF (SG.LE..0001D0) SG=.0001D0
      NASO=0
      DO 3 IG=1,15
      CALL LOOKUP(NPCGO(KR),1.D0-SG,PCGO,DPCGO)
      PG=PO+PCGO
      CALL LOOKUP(NBG,PG,BG,DBG)
      FSG=SG-DUM1*BG
      IF (DABS(FSG).LT.SGTOL) GO TO 4
      DFSG=1.D0+DUM1*DBG*DPCGO
      DSG=-FSG/DFSG
      IF (DABS(DSG).GT..03D0) DSG=SIGN(.03D0,DSG)
      IF (DSG.LT.-.8D0*SG) DSG=-.8D0*SG
      IF (DSG.GT..8D0*(DUM2-SG)) THEN
         NASO=NASO+1
         IF (NASO.GT.2) GO TO 4
         DSG=.8D0*(DUM2-SG)
      ELSE
         NASO=0
      ENDIF
    3 SG=SG+DSG
      NERRC=NERRC+1
      IF (LEVELC) THEN
         WRITE (NFOUT,5) SGS,SG,DSG
      ELSE
         WRITE (*,5) SGS,SG,DSG
      ENDIF
    5 FORMAT (/' ERROR # 3006; Sg ITERATION FAILED: Sg0=',G13.6,
     &   ' Sgk=',G13.6,' dSg=',G13.6)
      RETURN

    4 IF (SG.LT.SGMIN) GO TO 7
      SGAS(I,J,K)=SG
      PGAS(I,J,K)=PG

      RBG=1.D0/BG
      RHOG=GSTDEN*RBG
      DUNK(I,J,K,3)=RHOG
      RHO(I,J,K,3)=RHOG
      SW=1.D0-SO-SG
      CALL LOOKUP(NPCOW(KR),SW,PCOW,DPCOW)
      PW=PO-PCOW
      PWAT(I,J,K)=PW
      CALL LOOKUP(NRBW,PW,RBW,DRBW)
      RHOW=WSTDEN*RBW
      WT=RBW*SW
      DUNK(I,J,K,2)=RHOW
      RHO(I,J,K,2)=RHOW
      DSGDP=(GA-RSO*OL)*DBG-BG*OL*DRSO
      DSGDO=-BG*RSO
      DSGDG=BG
      DSWDP=-DSGDP-OL*DBSO
      DSWDO=-DSGDO-BSO
      DSWDG=-DSGDG
      DPWDP=1.D0-DPCOW*DSWDP
      DPGDP=1.D0-DPCGO*DSGDP

      CALL RELPERM3(KR,SW,SG,RELW,RELG,RELO,DKWSW,DKOSW,DKOSG,DKGSG)
      TLO=RELO*RBO
      TLAMB(I,J,K,1)=TLO
      TLW=RELW*RBW
      TLAMB(I,J,K,2)=TLW
      TLG=RELG*RBG
      TLAMB(I,J,K,3)=TLG

C  TRNDAT(I,J,K,1) = DERIVATIVE OF OIL LAMBDA WRT OIL CONCENTRATION
      TRNDAT(I,J,K,1) = RBO*(DKOSW*DSWDO+DKOSG*DSGDO)
C  TRNDAT(I,J,K,2) = DERIVATIVE OF OIL LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,2) = RBO*(DKOSW*DSWDP+DKOSG*DSGDP-TLO*DBSO)
C  TRNDAT(I,J,K,3) = DERIVATIVE OF OIL LAMBDA WRT GAS CONCENTRATION
      TRNDAT(I,J,K,3) = RBO*(DKOSW*DSWDG+DKOSG*DSGDG)
C  TRNDAT(I,J,K,4) = DERIVATIVE OF WATER LAMBDA WRT OIL CONCENTRATION
      TRNDAT(I,J,K,4) = RBW*DKWSW*DSWDO
C  TRNDAT(I,J,K,5) = DERIVATIVE OF WATER LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,5) = RBW*DKWSW*DSWDP+RELW*DRBW*DPWDP
C  TRNDAT(I,J,K,6) = DERIVATIVE OF WATER LAMBDA WRT GAS CONCENTRATION
      TRNDAT(I,J,K,6) = RBW*DKWSW*DSWDG
C  TRNDAT(I,J,K,7) = DERIVATIVE OF GAS LAMBDA WRT OIL PRESSURE
      TRNDAT(I,J,K,7) = RBG*(DKGSG*DSGDP-TLG*DBG*DPGDP)
C  TRNDAT(I,J,K,8) = DERIVATIVE OF GAS LAMBDA WRT OIL CONCENTRATION
      TRNDAT(I,J,K,8) = RBG*DKGSG*DSGDO
C  TRNDAT(I,J,K,9) = DERIVATIVE OF GAS LAMBDA WRT GAS CONCENTRATION
      TRNDAT(I,J,K,9) = RBG*DKGSG*DSGDG
C  TRNDAT(I,J,K,10) = DERIVATIVE OF WATER DENSITY WRT WATER PRESSURE
      TRNDAT(I,J,K,10) = WSTDEN*DRBW
C  TRNDAT(I,J,K,11) = DERIVATIVE OF OIL DENSITY WRT OIL PRESSURE
      TRNDAT(I,J,K,11) = RBO*(GSTDEN*DRSO-RHOO*DBSO)
C  TRNDAT(I,J,K,12) = DERIVATIVE OF GAS DENSITY WRT GAS PRESSURE
C     TRNDAT(I,J,K,12) = -RBG*GSTDEN*DBG     CZZZ ERROR CORRECTED 5/17/01, JAW
      TRNDAT(I,J,K,12) = -RBG*RHOG*DBG
C  TRNDAT(I,J,K,13) = DERIVATIVE OF Ro WRT OIL PRESSURE
      TRNDAT(I,J,K,13) = DRSO
C  TRNDAT(I,J,K,14) = DERIVATIVE OF WATER PRESSURE WRT OIL PRESSURE
      TRNDAT(I,J,K,14) = 1.-DPCOW*DSWDP
C  TRNDAT(I,J,K,15) = DERIVATIVE OF WATER PRESSURE WRT OIL CONCENTRATION
      TRNDAT(I,J,K,15) = -DPCOW*DSWDO
C  TRNDAT(I,J,K,16) = DERIVATIVE OF WATER PRESSURE WRT GAS CONCENTRATION
      TRNDAT(I,J,K,16) = -DPCOW*DSWDG
C  TRNDAT(I,J,K,17) = DERIVATIVE OF GAS PRESSURE WRT OIL PRESSURE (3 PHASE)
C     TRNDAT(I,J,K,17) = 1.+DPCGO*DSGDP   !GXLCRR 12/06/02
      TRNDAT(I,J,K,17) = 1.-DPCGO*DSGDP
C  TRNDAT(I,J,K,18) = DERIVATIVE OF GAS PRESSURE WRT OIL CONCENTRATION (3 PHASE)
C     TRNDAT(I,J,K,18) = DPCGO*DSGDO   CZZZ ERROR CORRECTED 5/17/01, JAW
      TRNDAT(I,J,K,18) = -DPCGO*DSGDO
C  TRNDAT(I,J,K,19) = DERIVATIVE OF GAS PRESSURE WRT GAS CONCENTRATION
C     TRNDAT(I,J,K,19) = DPCGO*DSGDG   CZZZ ERROR CORRECTED 5/17/01, JAW
      TRNDAT(I,J,K,19) = -DPCGO*DSGDG

C  TWO AND THREE PHASES

    6 COF(I,J,K,1,1,1)=-DROK*WT-PORV*(RBW*DSWDP+SW*DRBW)
      COF(I,J,K,1,1,2)=-PORV*RBW*DSWDO
      COF(I,J,K,1,1,3)=-PORV*RBW*DSWDG
      COF(I,J,K,1,2,1)=-DROK*OL
      COF(I,J,K,1,2,2)=-PORV
      COF(I,J,K,1,2,3)=0.D0
      COF(I,J,K,1,3,1)=-DROK*GA
      COF(I,J,K,1,3,2)=0.D0
      COF(I,J,K,1,3,3)=-PORV

      IF (NEWT.EQ.1) THEN
         POILN(I,J,K)=PO
         OILN(I,J,K)=OL
         GASN(I,J,K)=GA
         WATN(I,J,K)=WT
         SGASN(I,J,K)=SGS
         RESID(I,J,K,1)=0.D0
         RESID(I,J,K,2)=0.D0
         RESID(I,J,K,3)=0.D0
      ELSE
         PORVN=(1.D0+ROKCMP*POILN(I,J,K))*POR(I,J,K)
         RESID(I,J,K,1)=PORV*WT-PORVN*WATN(I,J,K)
         RESID(I,J,K,2)=PORV*OL-PORVN*OILN(I,J,K)
         RESID(I,J,K,3)=PORV*GA-PORVN*GASN(I,J,K)
      ENDIF

      CURRENT(1)=CURRENT(1)+PORV*OL
      CURRENT(2)=CURRENT(2)+PORV*WT
      CURRENT(3)=CURRENT(3)+PORV*GA

    1 CONTINUE

      END

C*********************************************************************
      SUBROUTINE IUPSOL1 (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
     &                 KL2,KEYOUT,NBLK,POIL,OIL,GAS,STEP,SGAS,DGRO)
C*********************************************************************
C  ROUTINE COMPUTES NEWTONIAN CONSTRAINT.  THIS IS A WORK ROUTINE.

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT AND OUTPUT, REAL*8)
C  OIL(I,J,K) = OIL CONCENTRATION, STBO/BBL (INPUT AND OUTPUT, REAL*8)
C  GAS(I,J,K) = GAS CONCENTRATION, MSCF/BBL (INPUT AND OUTPUT, REAL*8)

C  STEP(I,J,K,1) = CHANGE IN WATER PRESSURE, PSI (INPUT, REAL*8)
C  STEP(I,J,K,2) = CHANGE IN OIL CONCENTRATION, STBO/BBL (INPUT, REAL*8)
C  STEP(I,J,K,3) = CHANGE IN GAS CONCENTRATION, MSCF/BBL (INPUT, REAL*8)

C  SGAS(I,J,K) = GAS SATURATION BEFORE CHANGE, (INPUT, REAL*4)

C  DGRO(I,J,K) = DISOLVED GAS-OIL RATIO BEFORE CHANGE, (INPUT, REAL*8)

C*********************************************************************
      INCLUDE 'control.h'

      INCLUDE 'ifluid.h'
      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),   KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 POIL(IDIM,JDIM,KDIM),     OIL(IDIM,JDIM,KDIM),
     &       GAS(IDIM,JDIM,KDIM),      STEP(IDIM,JDIM,KDIM,3),
     &       DGRO(IDIM,JDIM,KDIM)
      DIMENSION SGAS(IDIM,JDIM,KDIM)
      REAL*8 FMIN,PO,OL,GA,RSO,DRSO,DA1,DA2,AM1,AM2,AP1,AP2,A,DPO,
     &       DOL,DGA,FF,DFF,DF,TOL,TOLG,POZ,OLZ,GAZ,AOLD,ANEW,RSOO

      FMIN=.04D0
      IF (NEWT.LT.5) THEN
         DA1=.002D0
      ELSE
         DA1=.0002D0
      ENDIF
      TOL=.2D0
      DA2=6.D0*DA1
      AM1=1.D0-DA1
      AP1=1.D0+DA1
      AM2=1.D0-DA2
      AP2=1.D0+DA2

      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2
      IF (KEYOUT(I,J,K).NE.1) GO TO 1
      PO=POIL(I,J,K)+FNEWT*STEP(I,J,K,1)
      OL=OIL(I,J,K)+FNEWT*STEP(I,J,K,2)
      GA=GAS(I,J,K)+FNEWT*STEP(I,J,K,3)
      IF (GA.LT.1.D-8) THEN
         GA=0.D0
         STEP(I,J,K,3)=-GAS(I,J,K)/FNEWT
         GO TO 1
      ENDIF

C  TEST FOR CHANGE IN THE NUMBER OF PHASES
C  SET TARGET IF THERE IS A CHANGE

      CALL LOOKUP(NRSO,PO,RSO,DRSO)
      IF (GA.GT.RSO*OL) THEN
         IF (SGAS(I,J,K).GT.0.) GO TO 1
         CALL LOOKUP(NRSO,POIL(I,J,K),RSOO,DRSO)
         AOLD=DGRO(I,J,K)/RSOO
         IF (AOLD.LT.AM2) THEN
            A=AM1
         ELSE
            A=AP1
         ENDIF
         ANEW=GA/(RSO*OL)
         IF (ANEW.LE.A) GO TO 1
      ELSE
         IF (SGAS(I,J,K).EQ.0.) GO TO 1
         AOLD=GAS(I,J,K)/(DGRO(I,J,K)*OIL(I,J,K))
         IF (AOLD.GT.AP2) THEN
            A=AP1
         ELSE
            A=AM1
         ENDIF
         ANEW=GA/(RSO*OL)
         IF (ANEW.GT.A) GO TO 1
      ENDIF

C  ITERATE TO DETERMINE CONSTRAINT FACTOR

      POZ=POIL(I,J,K)
      OLZ=OIL(I,J,K)
      GAZ=GAS(I,J,K)
      DPO=STEP(I,J,K,1)
      DOL=STEP(I,J,K,2)
      DGA=STEP(I,J,K,3)
      TOLG=TOL*ABS(A*RSO*OL-GA)

      N=0
    2 FF=A*RSO*OL-GA
      IF (ABS(FF).LT.TOLG) GO TO 3
      N=N+1
      IF (N.GT.15) GO TO 13
      DFF=A*DRSO*OL*DPO+RSO*DOL-DGA
      DF=-FF/DFF
      IF (DF.GT..6D0*(1.D0-FNEWT)) THEN
         IF (FNEWT.GT..9999D0) GO TO 3
         DF=.6D0*(1.D0-FNEWT)
      ENDIF
      IF (DF.LT.-.6D0*FNEWT) DF=-.6D0*FNEWT
      FNEWT=FNEWT+DF
      IF (FNEWT.LT.FMIN) GO TO 3
      PO=POZ+FNEWT*DPO
      OL=OLZ+FNEWT*DOL
      GA=GAZ+FNEWT*DGA
      CALL LOOKUP(NRSO,PO,RSO,DRSO)
      GO TO 2

   13 NERRC=NERRC+1
      IF (LEVELC) THEN
         WRITE (NFOUT,4) POZ,POZ+DPO,OLZ,OLZ+DOL,GAZ,GAZ+DGA,FNEWT,
     &   DF,RSO
      ELSE
         WRITE (*,4) POZ,POZ+DPO,OLZ,OLZ+DOL,GAZ,GAZ+DGA,FNEWT,DF,RSO
      ENDIF
    4 FORMAT (/' ERROR # 3010; CONSTRAINT ITERATION FAILED: Po1=',
     &   G13.6,' Po2=',G13.6/' No1=',G13.6,' No2=',G13.6,' Ng1=',
     &   G13.6,' Ng2=',G13.6/' F=',G13.6,' DF=',G13.6,' RSO=',G13.6)
      RETURN

    3 IF (FNEWT.LT.FMIN) THEN
         FNEWT=FMIN
         RETURN
      ENDIF

    1 CONTINUE

      END
C*********************************************************************
      SUBROUTINE IUPSOL2 (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,
     &                 KL2,KEYOUT,NBLK,POIL,OIL,GAS,STEP)
C*********************************************************************
C  ROUTINE UPDATES SOLUTION.  THIS IS A WORK ROUTINE.
C  CONSTRAINED NEWTONIAN ITERATION IS USED FOR STABILITY

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT AND OUTPUT, REAL*8)
C  OIL(I,J,K) = OIL CONCENTRATION, STBO/BBL (INPUT AND OUTPUT, REAL*8)
C  GAS(I,J,K) = GAS CONCENTRATION, MSCF/BBL (INPUT AND OUTPUT, REAL*8)

C  STEP(I,J,K,1) = CHANGE IN WATER PRESSURE, PSI (INPUT, REAL*8)
C  STEP(I,J,K,2) = CHANGE IN OIL CONCENTRATION, STBO/BBL (INPUT, REAL*8)
C  STEP(I,J,K,3) = CHANGE IN GAS CONCENTRATION, MSCF/BBL (INPUT, REAL*8)

C*********************************************************************
      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),   KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 POIL(IDIM,JDIM,KDIM),     OIL(IDIM,JDIM,KDIM),
     &       GAS(IDIM,JDIM,KDIM),      STEP(IDIM,JDIM,KDIM,3)

      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2
      IF (KEYOUT(I,J,K).NE.1) GO TO 1
      POIL(I,J,K)=POIL(I,J,K)+FNEWT*STEP(I,J,K,1)
      OIL(I,J,K)=OIL(I,J,K)+FNEWT*STEP(I,J,K,2)
      GAS(I,J,K)=GAS(I,J,K)+FNEWT*STEP(I,J,K,3)
    1 CONTINUE
     
      END
C*********************************************************************
      SUBROUTINE IBUGOUT (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,KL1,KL2,
     &                 KEYOUT,NBLK,POR,PWAT,POIL,PGAS,OIL,GAS,DUNK,
     &                 COF,RESID,KROCK,TCOFX,TCOFY,TCOFZ,TLAMB,TRNDAT)
C*********************************************************************
 
C  ROUTINE OUTPUT DEBUG DATA.  THIS IS A WORK ROUTINE.

C  POR(I,J,K)  = PORE VOLUME, BBL (INPUT, REAL*4)

C  PWAT(I,J,K) = WATER PRESSURE, PSI (INPUT, REAL*8)

C  POIL(I,J,K) = OIL PRESSURE, PSI (INPUT, REAL*8)

C  PGAS(I,J,K) = GAS PRESSURE, PSI (INPUT, REAL*8)

C  OIL(I,J,K) = OIL CONCENTRATION, STBO/BBL (INPUT, REAL*8)

C  GAS(I,J,K) = GAS CONCENTRATION, MSCF/BBL (INPUT, REAL*8)

C  DUNK(I,J,K,1) = OIL DENSITY, LB/BBL (INPUT, REAL*8)
C  DUNK(I,J,K,2) = WATER DENSITY, LB/BBL (INPUT, REAL*8)
C  DUNK(I,J,K,3) = GAS DENSITY, LB/BBL (INPUT, REAL*8)

C  COF(I,J,K,N,L,M)  = JACOBIAN COEFFICIENTS (INPUT, REAL*4)

C  RESID(I,J,K)= RESIDUALS (INPUT, REAL*8)

C  KROCK(I,J,K)= ROCK TYPE (INPUT, INTEGER)

C  TCOFX(I,J,K) = TRANSMISSABILITY CONSTANTS (INPUT, REAL*8)
C  TCOFY(I,J,K)
C  TCOFZ(I,J,K)

C  TRNDAT(I,J,K,) = GRID-ELEMENT ARRAY FOR TRANSMISSABILITY DATA (REAL*4)
C                   (SEE IARYDAT.H FOR DEFINITIONS)

C  TLAMB(I,J,K,1) = OIL LAMBDA (INPUT, REAL*8)
C  TLAMB(I,J,K,2) = WATER LAMBDA
C  TLAMB(I,J,K,3) = GAS LAMBDA

C*********************************************************************
$POWER       include 'msjunk.h'
      INCLUDE 'control.h'

      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM),    KEYOUT(IDIM,JDIM,KDIM)
      INTEGER KROCK(IDIM,JDIM,KDIM)
      REAL*4 COF(IDIM,JDIM,KDIM,7,3,3)
      REAL*4 POR(IDIM,JDIM,KDIM),       TRNDAT(IDIM,JDIM,KDIM,*)
      REAL*8 PWAT(IDIM,JDIM,KDIM)
      REAL*8 POIL(IDIM,JDIM,KDIM),      OIL(IDIM,JDIM,KDIM)
      REAL*8 PGAS(IDIM,JDIM,KDIM),      GAS(IDIM,JDIM,KDIM)
      REAL*8 DUNK(IDIM,JDIM,KDIM,3),    RESID(IDIM,JDIM,KDIM,3)
      REAL*8 TCOFX(IDIM,JDIM,KDIM),     TCOFY(IDIM,JDIM,KDIM),
     &       TCOFZ(IDIM,JDIM,KDIM),     TLAMB(IDIM,JDIM,KDIM,3)

      CALL OPENBUG()
      IF (.NOT.BUGOPEN) RETURN

      CALL BLKOFF(NBLK,IOFF,JOFF,KOFF,MERR)

      IF (NBLK.EQ.1) WRITE (NFOUT,1) TIM,DELTIM,NEWT,CURRENT
    1 FORMAT(/' DEBUG OUTPUT AT TIME =',F10.4,', DELTIM =',F10.5,
     &', NEWT =',I3/
     & ' TOTAL WATER=',G14.7,', TOTAL OIL=',G14.7,', TOTAL GAS=',G14.7)
      
      IO=(IL1+IL2)/2
      DO 10 LL=1,3
      IF (LL.EQ.1) THEN
         KO=KL1
      ELSE
         IF (LL.EQ.2) THEN
            KO=(KL1+KL2)/2
         ELSE
            KO=KL2
         ENDIF
      ENDIF
      JO=(JL1V(KO)+JL2V(KO))/2
      IF (KEYOUT(IO,JO,KO).NE.1) GO TO 10

      WRITE (NFOUT,2) NBLK,IO+IOFF,JO+JOFF,KO+KOFF
    2 FORMAT(/' BLOCK=',I3,
     &  ', I LOCATION=',I5,', J LOCATION =',I5,', K LOCATION =',I5)

      WRITE (NFOUT,6) DUNK(IO,JO,KO,1),DUNK(IO,JO,KO,2),
     &   DUNK(IO,JO,KO,3),POIL(IO,JO,KO),PWAT(IO,JO,KO),PGAS(IO,JO,KO),
     &   OIL(IO,JO,KO),GAS(IO,JO,KO)
    6 FORMAT(' OIL, WATER, AND GAS DENSITIES:',3G16.9/
     &   ' OIL, WATER, AND GAS PRESSURES:',3G16.9/
     &   ' OIL CONC.:',G16.9,T40,'GAS CONC.:',G16.9)

      WRITE (NFOUT,25) (TLAMB(IO,JO,KO,L),L=1,3)
   25 FORMAT (' TLAMB(I,J,K,):',T22,3G16.7)

      WRITE (NFOUT,*)
      WRITE (NFOUT,26) (TRNDAT(IO,JO,KO,L),L=1,19)
   26 FORMAT (' TRNDAT(I,J,K,)',T22,3G16.7/(T22,3G16.7))

      WRITE (NFOUT,*)
      DO  L=1,7
      WRITE (NFOUT,3) L,COF(IO,JO,KO,L,1,1),COF(IO,JO,KO,L,1,2),
     &                  COF(IO,JO,KO,L,1,3)
      WRITE (NFOUT,4) COF(IO,JO,KO,L,2,1),COF(IO,JO,KO,L,2,2),
     &                COF(IO,JO,KO,L,2,3)
      WRITE (NFOUT,4) COF(IO,JO,KO,L,3,1),COF(IO,JO,KO,L,3,2),
     &                 COF(IO,JO,KO,L,3,3)
      WRITE (NFOUT,*)
      ENDDO
      WRITE (NFOUT,5) RESID(IO,JO,KO,1),RESID(IO,JO,KO,2)
     & ,RESID(IO,JO,KO,3)
    3 FORMAT (' COF(I,J,K,',I2,',,)',T22,3G16.7)
    4 FORMAT (T22,3G16.7)
    5 FORMAT (' RESID(I,J,K)',T22,G17.9/T22,G17.9/T22,G17.9)

      IF (KEYOUT(IO,JO-1,KO).NE.1) GO TO 10
      WRITE (NFOUT,*)
      DO  L=1,7
      WRITE (NFOUT,13) L,COF(IO,JO-1,KO,L,1,1),COF(IO,JO-1,KO,L,1,2),
     &                  COF(IO,JO-1,KO,L,1,3)
      WRITE (NFOUT,14) COF(IO,JO-1,KO,L,2,1),COF(IO,JO-1,KO,L,2,2),
     &                COF(IO,JO-1,KO,L,2,3)
      WRITE (NFOUT,14) COF(IO,JO-1,KO,L,3,1),COF(IO,JO-1,KO,L,3,2),
     &                 COF(IO,JO-1,KO,L,3,3)
      WRITE (NFOUT,*)
      ENDDO
      WRITE (NFOUT,11) RESID(IO,JO-1,KO,1),RESID(IO,JO-1,KO,2)
     & ,RESID(IO,JO-1,KO,3)
   13 FORMAT (' COF(I,J-1,K,',I2,',,)',T22,3G16.7)
   14 FORMAT (T22,3G16.7)
   11 FORMAT (' RESID(I,J-1,K)',T22,G17.9/T22,G17.9/T22,G17.9)

10    CONTINUE

      END

C*********************************************************************
      SUBROUTINE IMAXRESID (IDIM,JDIM,KDIM,LDIM,IL1,IL2,JL1V,JL2V,
     &     KL1,KL2,KEYOUT,NBLK,RESID)
C*********************************************************************
 
C  ROUTINE PICKS OUT LOCAL MAXIMUM RESIDUALS AND TOTALS RESIDUALS.
C  THIS IS A WORK ROUTINE.

C  RESID(I,J,K,N)= RESIDUALS (INPUT, REAL*8)

C  NOTE:  RESULTS ARE PUT IN COMMON /BALDATC/
C*********************************************************************
      INCLUDE 'ibaldat.h'

      INTEGER JL1V(KDIM),JL2V(KDIM), KEYOUT(IDIM,JDIM,KDIM)
      REAL*8 RESID(IDIM,JDIM,KDIM,3),RT1,RT2,RT3,RM1,RM2,RM3

      RT1=RESIDT(1)
      RT2=RESIDT(2)
      RT3=RESIDT(3)
      RM1=RESIDM(1)
      RM2=RESIDM(2)
      RM3=RESIDM(3)
      DO 1 K=KL1,KL2
      JL1=JL1V(K)
      JL2=JL2V(K)
      DO 1 J=JL1,JL2
      DO 1 I=IL1,IL2
      IF (KEYOUT(I,J,K).EQ.1) THEN
C        RT1=RT1+dabs(RESID(I,J,K,1))       !GXLCRR 12/08/02
C        RT2=RT2+dabs(RESID(I,J,K,2))       !GXLCRR 12/08/02
C        RT3=RT3+dabs(RESID(I,J,K,3))       !GXLCRR 12/08/02
         RT1=RT1+RESID(I,J,K,1)
         RT2=RT2+RESID(I,J,K,2)
         RT3=RT3+RESID(I,J,K,3)
         IF (dABS(RESID(I,J,K,1)).GT.RM1) RM1=dABS(RESID(I,J,K,1))
         IF (dABS(RESID(I,J,K,2)).GT.RM2) RM2=dABS(RESID(I,J,K,2))
         IF (dABS(RESID(I,J,K,3)).GT.RM3) RM3=dABS(RESID(I,J,K,3))
      ENDIF
    1 CONTINUE
      RESIDT(1)=RT1
      RESIDT(2)=RT2
      RESIDT(3)=RT3
      RESIDM(1)=RM1
      RESIDM(2)=RM2
      RESIDM(3)=RM3

      END

C*********************************************************************
      SUBROUTINE BOUNSAT (PO,RO,RSO,DRSO,BO,DBODP,DBODR)
C*********************************************************************
 
C  COMPUTES UNSATURATED OIL VOLUME FACTOR AND DERIVATIVES

C  PO = OIL PRESSURE, PSI (INPUT, REAL*8)

C  RO = OL/GA = ACTUAL DISOLVED GAS RATIO, MSCF/STBO (INPUT, REAL*8)

C  RSO = SATURATED DISOLVED GAS RATIO, MSCF/STBO (INPUT, REAL*8)

C  DRSO = DERIVATIVE OF RSO WRT PO (INPUT, REAL*8)
 
C  BO =  UNSATURATED OIL VOLUME FACTOR, BBL/STBO (OUTPUT, REAL*8)

C  DBODP = DERIVATIVE OF BO WRT PO (OUTPUT, REAL*8)

C  DBODR = DERIVATIVE OF BO WRT RO (OUTPUT, REAL*8)

C  NOTE:  MODBO IN IFLUID.H DETERMINES WHICH MODEL IS USED FOR BO
C         MODBO = 1 ==> SIMPLE EXPLICIT MODEL (WHEELER'S MODEL)
C         MODBO = 2 ==> ITERATIVE MODEL REQUIRING Psat FUNCTION (LU'S MODEL)

C  NOTE:  MODEL 1 USES USER SPECIFIED CONSTANT BOCON IN IFLUID.H

C*********************************************************************
      INCLUDE 'ifluid.h'

      REAL*8 PO,RO,RSO,DRSO,BO,DBODP,DBODR,BOD,DBOD,BSO,DBSO,F,DUB1,
     &   DUB2,PSAT,DPSAT,BSOSAT,DBSOSAT,BODSAT,DBODSAT,G

      IF (MODBO.GT.1) GO TO 2

C  MODEL 1

      CALL LOOKUP(NBOD,PO,BOD,DBOD)
      CALL LOOKUP(NBSO,PO,BSO,DBSO)
      DUB1=BSO-BOD
      F=RO/RSO
      DUB2=1.D0-F
      G=BOCON*DUB1*DUB1
      BO=BOD+DUB1*F*(1.D0-DUB2*G)
      DBODR=DUB1*(1.D0-(DUB2-F)*G)/RSO
      DBODP=DBOD+(DBSO-DBOD)*F*(1.D0-DUB2*3.D0*G)-DBODR*F*DRSO
      RETURN

C  MODEL 2

    2 CALL LOOKUP(NPSAT,RO,PSAT,DPSAT)
      CALL LOOKUP(NBSO,PSAT,BSOSAT,DBSOSAT)
      CALL LOOKUP(NBOD,PSAT,BODSAT,DBODSAT)
      CALL LOOKUP(NBOD,PO,BOD,DBOD)
      DUB1=(BSOSAT-BODSAT)/RSO
      BO=BOD+RO*DUB1
      DUB2=RO/RSO
      DBODR=DUB1+DUB2*(DBSOSAT-DBODSAT)*DPSAT
      DBODP=DBOD-DUB1*DUB2*DRSO

      END

C*********************************************************************
      SUBROUTINE BOCONST (COMIN,P1,P2,CM)
C*********************************************************************
 
C  COMPUTES BOCON FOR Bo MODEL 1 TO ACHIEVE A POSITIVE OIL COMPRESSIBILITY

C  COMIN = MINIMUM COMPRESSIBILITY SPECIFIED, 1/PSI (INPUT, REAL*4)

C  P1,P2 = PRESSURE LIMITS FOR THE TESTS, PSI (INPUT, REAL*4)

C  COMIN = MINIMUM COMPRESSIBILITY ACTUAL, 1/PSI (OUTPUT, REAL*4)

C  NOTE: THIS ROUTINE WILL ONLY INCREASE BOCON (IF NECESSARY) FROM THE
C        VALUE THAT EXISTS ON ENTRY

C*********************************************************************

      INCLUDE 'ifluid.h'

      REAL*8 PO,RSO,RO,DRSO,BO,DBODP,DBODR,POM,ROM

      DP=(P2-P1)/19.
      F1=.02
      F2=1.
      DF=(F2-F1)/19.
      DBOCON=.05

      DO 1 I=1,10
      CM=1.E20

      DO 2 NP=0,19
      PO=P1+NP*DP
      CALL LOOKUP(NRSO,PO,RSO,DRSO)
      DO 2 NF=0,19
      RO=(F1+NF*DF)*RSO
      CALL BOUNSAT (PO,RO,RSO,DRSO,BO,DBODP,DBODR)
      C=-DBODP/BO
      IF (C.LT.CM) THEN
          CM=C
          POM=PO
          ROM=RO
      ENDIF
    2 CONTINUE

      IF (CM.GE.COMIN) RETURN

      CALL LOOKUP(NRSO,POM,RSO,DRSO)
      DO 3 J=1,20
      BOCON=BOCON+DBOCON
      CALL BOUNSAT (POM,ROM,RSO,DRSO,BO,DBODP,DBODR)
      C=-DBODP/BO
      IF (C.GE.COMIN) GO TO 1
    3 CONTINUE
      BOCON=BOCON+DBOCON

    1 CONTINUE

      END
