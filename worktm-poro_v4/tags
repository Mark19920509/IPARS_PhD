!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
1	bdaryin.f	/^    1 FORMAT (\/' ERROR # 403; TOO MANY EXTERNAL VARIABLES')$/;"	l	subroutine:BDPROG	file:
1	bdaryin.f	/^ 1       CONTINUE$/;"	l	subroutine:DOBDARYW	file:
1	bdaryin.f	/^ 1    CONTINUE$/;"	l	subroutine:MAKNAM	file:
1	comp.f	/^    1       FORMAT (' ERROR #',I4,', ',A40)$/;"	l	subroutine:CMPDRV	file:
1	comp.f	/^    1    R(J)=(FLOAT(IX1)+FLOAT(IX2)*RM2)*RM1$/;"	l	function:RANDOM	file:
1	comp.f	/^    1 CONTINUE$/;"	l	subroutine:GETNAM	file:
1	comp.f	/^    1 CONTINUE$/;"	l	subroutine:GETSTG	file:
1	comp.f	/^    1 I=I+1$/;"	l	subroutine:CPEXP	file:
1	comp.f	/^    1 R(I)=0.D0$/;"	l	subroutine:CPINIT	file:
1	comp.f	/^    1 R(K)=R(I)+R(J)$/;"	l	subroutine:EXEC	file:
1	divide.f	/^    1 CONTINUE$/;"	l	subroutine:DIVIDE	file:
1	ebdary.f	/^    1 NAML=I$/;"	l	subroutine:EGETVAL	file:
1	ebdary.f	/^   1  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
1	ebdary.f	/^   1  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
1	ebdary.f	/^   1  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
1	ebdary.f	/^   1  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
1	ebdary.f	/^   1  NBP = 4*JDIM*KDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
1	ebdary.f	/^   1  NBP = JDIM*KDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
1	ebdary.f	/^   1  NBP=4*JDIM*KDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
1	eidata.f	/^   1  CONTINUE$/;"	l	subroutine:EISDAT	file:
1	elastic.f	/^    1 CONTINUE$/;"	l	subroutine:WELLSDP	file:
1	elastic.f	/^   1              CONTINUE$/;"	l	subroutine:EFFEC_MEAN_STRESS	file:
1	elastic.f	/^   1           CONTINUE$/;"	l	subroutine:EAVERAGE_DISP	file:
1	evisual.f	/^ 1    CONTINUE$/;"	l	subroutine:EVIS_OUTPUT	file:
1	evisual.f	/^ 1    CONTINUE$/;"	l	subroutine:EVIS_TRANSL	file:
1	hypre.f	/^    1 FORMAT('Linear solver relative tolerance =',T45,G12.4)$/;"	l	subroutine:HYPREI	file:
1	idata.f	/^    1 CONTINUE$/;"	l	subroutine:GETIDAT	file:
1	idata.f	/^    1 CONTINUE$/;"	l	subroutine:MAKEMAP	file:
1	idata.f	/^    1 FORMAT(\/' SIMULATION MODEL',T56,'BLACK OIL IMPES')$/;"	l	subroutine:GETSCAL	file:
1	idata.f	/^    1 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
1	idata.f	/^    1 WRITE (BNAM(I),33) I$/;"	l	subroutine:SETGEOM	file:
1	idata.f	/^    1 WRITE (BNAM(I),33) I$/;"	l	subroutine:SETGEOMNEW	file:
1	impfa.f	/^    1 CONTINUE$/;"	l	subroutine:DOROCK2	file:
1	impfa.f	/^    1 CONTINUE$/;"	l	subroutine:TRANC2	file:
1	impfa.f	/^    1 CONTINUE$/;"	l	subroutine:WELLIJK2	file:
1	impfa.f	/^    1 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
1	initial.f	/^    1 CONTINUE$/;"	l	subroutine:COUNTE	file:
1	initial.f	/^    1 CONTINUE$/;"	l	subroutine:SETARYI4P	file:
1	initial.f	/^    1 CONTINUE$/;"	l	subroutine:TRANC1	file:
1	initial.f	/^    1 DEPTH(I-1,J-1,K-1)=DOWN(1,NBLK)*X+DOWN(2,NBLK)*Y+DOWN(3,NBLK)*Z$/;"	l	subroutine:DEPTH2	file:
1	initial.f	/^    1 IARY(I,J,K)=I4$/;"	l	subroutine:SETARYI4	file:
1	initial.f	/^    1 IARY2(I,J,K)=IARY1(I,J,K)$/;"	l	subroutine:CPYARYI4	file:
1	initial.f	/^    1 RARY(I,J,K)=R4$/;"	l	subroutine:SETARYR4	file:
1	initial.f	/^    1 RARY(I,J,K)=R8$/;"	l	subroutine:SETARYR8	file:
1	initial.f	/^    1 RARY(K)=R4$/;"	l	subroutine:SETARYR4N	file:
1	initial.f	/^    1 RARY(K)=R8$/;"	l	subroutine:SETARYR8N	file:
1	initial.f	/^    1 RARY(K)=R8$/;"	l	subroutine:SETMPFAARYR8N	file:
1	initial.f	/^    1 RARY(K)=RARY(K)*R8$/;"	l	subroutine:SCLARYR8N	file:
1	initial.f	/^    1 RARY2(I,J,K)=RARY1(I,J,K)$/;"	l	subroutine:CPYARYR4	file:
1	initial.f	/^    1 RARY2(I,J,K)=RARY1(I,J,K)$/;"	l	subroutine:CPYARYR8	file:
1	initial.f	/^   1     CONTINUE$/;"	l	subroutine:APPENDMAP	file:
1	ipars.f	/^    1    FORMAT(' ENTER INPUT FILE NAME: ')$/;"	l	subroutine:OPENIO	file:
1	ipars.f	/^    1    FORMAT(A50)$/;"	l	subroutine:NEXTIME	file:
1	ipars.f	/^    1 BALANCE(J,K,I)=0.D0$/;"	l	subroutine:IVPARM	file:
1	ipars.f	/^    1 CONTINUE$/;"	l	subroutine:SETSTEP	file:
1	ipars.f	/^    1 FORMAT(\/' DEBUG OUTPUT'\/' PROC =',I3,', BLOCK =',I3,', IDIM =',$/;"	l	subroutine:DEBUGW	file:
1	ipars.f	/^    1 IF (RTIMIN.GT.0.D0.AND.(ACTTIM(2)-RTIMIN).GT.-DTIMTOL) THEN$/;"	l	subroutine:IPARS	file:
1	ipars.f	/^    1 NEWT=NEWT+1$/;"	l	subroutine:STEP	file:
1	iwell.f	/^    1 CONTINUE$/;"	l	subroutine:WELLIJK1	file:
1	iwell.f	/^    1 I1=I$/;"	l	subroutine:PUTUTIT	file:
1	iwell.f	/^    1 LENW(I)=0$/;"	l	subroutine:IWELLS	file:
1	iwell.f	/^    1 NWP(I,J)=0$/;"	l	subroutine:WELLCHECK	file:
1	many.f	/^    1 CONTINUE$/;"	l	subroutine:COMMI	file:
1	many.f	/^    1 CONTINUE$/;"	l	subroutine:EXMLST	file:
1	many.f	/^    1 CONTINUE$/;"	l	subroutine:GETMP	file:
1	many.f	/^    1 CONTINUE$/;"	l	subroutine:NOUPDATE	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:I2UPDATE2	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:I4UPDATE2	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:L2UPDATE2	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:L4UPDATE2	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:R4UPDATE2	file:
1	many.f	/^    1 NFE2=NFE2+1$/;"	l	subroutine:R8UPDATE2	file:
1	owell.f	/^    1 KH(I,J)=KNDHIS(I,J)$/;"	l	subroutine:WELLDSK	file:
1	owell.f	/^    1 KH(I,J)=KNDHIS(I,J)$/;"	l	subroutine:WELLPRT	file:
1	owell.f	/^    1 KH(I,J)=KNDHIS(I,J)$/;"	l	subroutine:WELLPRTC	file:
1	owell.f	/^    1 KNDHIS(I,J)=0$/;"	l	subroutine:WELDUMP	file:
1	prop.f	/^    1 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)$/;"	l	subroutine:RELPERM3	file:
1	prop.f	/^    1 CONTINUE$/;"	l	subroutine:DODEPTH	file:
1	prop.f	/^    1 CONTINUE$/;"	l	subroutine:DOROCK	file:
1	prop.f	/^    1 CONTINUE$/;"	l	subroutine:SETREL3	file:
1	prop.f	/^    1 FORMAT (\/' ERROR # 403; TOO MANY EXTERNAL VARIABLES')$/;"	l	subroutine:ROCKPROG	file:
1	prtout.f	/^    1    FORMAT(I2)$/;"	l	subroutine:MAKTIT	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:GEAPRT	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:I2GETS	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:I4GETS	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:PRTTIT	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:R4GETS	file:
1	prtout.f	/^    1 CONTINUE$/;"	l	subroutine:R8GETS	file:
1	prtout.f	/^    1 I1=I2+1$/;"	l	subroutine:PRTVEC4	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:ELEGET	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:HISPASS	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:POLL	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:SPREAD	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:SPREAD4	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:SPREAD8	file:
1	putil.f	/^    1    CONTINUE$/;"	l	subroutine:SPREADC	file:
1	putil.f	/^    1    WRITE (NFOUT,2) (A(J),J=J1,J3)$/;"	l	subroutine:TYPEOUT	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:CHECK	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:MSGOUT	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:PROCOUT	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:WELGET	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:WELPUT	file:
1	putil.f	/^    1 CONTINUE$/;"	l	subroutine:WELSUM	file:
1	putil.f	/^    1 IF (NEORS.GE.NEEX) RETURN$/;"	l	subroutine:RRI4	file:
1	putil.f	/^    1 IF (NEORS.GE.NEEX) RETURN$/;"	l	subroutine:RRR4	file:
1	putil.f	/^    1 IF (NEORS.GE.NEEX) RETURN$/;"	l	subroutine:RRR8	file:
1	putil.f	/^    1 LW(J,K)=LOCWEL(J,K,NW)$/;"	l	subroutine:WELLSHR	file:
1	putil.f	/^    1 MSGTAG2(I)=-999$/;"	l	subroutine:SETTAGS	file:
1	putil.f	/^    1 NWP(I,J)=0$/;"	l	subroutine:WELOWN	file:
1	read1.f	/^    1    FORMAT (\/' ERROR #',I4,'; ',A50)$/;"	l	subroutine:PUTERR	file:
1	read1.f	/^    1 CONTINUE$/;"	l	subroutine:DEFAULT	file:
1	read1.f	/^    1 CONTINUE$/;"	l	subroutine:GETGRDA	file:
1	read1.f	/^    1 CONTINUE$/;"	l	subroutine:READER	file:
1	read1.f	/^    1 CONTINUE$/;"	l	subroutine:TBLKOUT	file:
1	read1.f	/^    1 I=I+1$/;"	l	subroutine:UNDEF	file:
1	read1.f	/^    1 LENBLK(I)=0$/;"	l	subroutine:GETBLK	file:
1	read1.f	/^    1 VNAMC(L)=VNAMGA(I)$/;"	l	subroutine:GRDAIN	file:
1	read2.f	/^    1 CONTINUE$/;"	l	subroutine:PUTCS	file:
1	read2.f	/^    1 NAML=I$/;"	l	subroutine:GETVAL	file:
1	read2.f	/^    1 V(J+NC1-1)=I(J)$/;"	l	subroutine:PUTBT	file:
1	read3.f	/^    1 NAML=I$/;"	l	subroutine:GETVAL2	file:
1	restart.f	/^    1       FORMAT(A20)$/;"	l	subroutine:RGEAIN	file:
1	restart.f	/^    1 CALL CALLWORK(RSR4,NARG)$/;"	l	subroutine:RGEAOUT	file:
1	restart.f	/^    1 CONTINUE$/;"	l	subroutine:RSINI4	file:
1	restart.f	/^    1 CONTINUE$/;"	l	subroutine:RSINL4	file:
1	restart.f	/^    1 CONTINUE$/;"	l	subroutine:RSINR4	file:
1	restart.f	/^    1 CONTINUE$/;"	l	subroutine:RSINR8	file:
1	restart.f	/^    1 FORMAT(I10)$/;"	l	subroutine:RESOUT	file:
1	restart.f	/^    1 NSTEP=IU(2)$/;"	l	subroutine:RESIN	file:
1	rockutil.f	/^    1 RARY2(I,J,K)=RARY1(I,J,K)*PERM_HTOV$/;"	l	subroutine:PERMSCALE	file:
1	stdout.f	/^    1    FORMAT(\/' TIME =',T45,F12.3,1X,A20)$/;"	l	subroutine:STDOUT	file:
1	stdout.f	/^    1 FORMAT(I8)$/;"	l	subroutine:OPENBUG	file:
1	table.f	/^    1 CONTINUE$/;"	l	subroutine:LINSOV	file:
1	table.f	/^    1 CONTINUE$/;"	l	subroutine:NUMBR	file:
1	table.f	/^    1 CONTINUE$/;"	l	subroutine:TABUNT	file:
1	table.f	/^    1 FORMAT (\/' ERROR # 401; MAX TABLES EXCEEDED')$/;"	l	subroutine:TABLE	file:
1	table.f	/^    1 FORMAT(\/' SPLINE FUNCTION WITH X = ',A8,' AND Y = ',A8)$/;"	l	subroutine:PRTSPL	file:
1	table.f	/^    1 IF (NENTY.EQ.I1) GO TO 5$/;"	l	subroutine:LOOKUP	file:
1	table.f	/^    1 MFILE(I)=MF(I)$/;"	l	subroutine:IUTIL	file:
1	table.f	/^    1 W(I,J)=0.D0$/;"	l	subroutine:SPLINE	file:
1	tbdary.f	/^    1 CONTINUE$/;"	l	subroutine:TBDPROPW	file:
1	tdata.f	/^    1    FORMAT(\/' STOCK TANK OIL DENSITY (STDENO)',T48,F12.3,1X,A20)$/;"	l	subroutine:SETEXU	file:
1	tdata.f	/^    1    FORMAT(\/' TIME =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
1	tdata.f	/^    1 FORMAT (4X,A20,'(',A8,')',T56,A20)$/;"	l	subroutine:EXTUIN	file:
1	tdata.f	/^    1 MODACT=0$/;"	l	subroutine:GETTDAT	file:
1	timer.f	/^    1 CONTINUE$/;"	l	subroutine:TIMOUT	file:
1	timer.f	/^    1 TIMKLS(I)=0$/;"	l	subroutine:TIMSET	file:
1	tisdat.f	/^    1 FORMAT(' FLUID STANDARD DENSITY (STFLDEN)',T50,F10.3,1X,A20\/$/;"	l	subroutine:TISDAT	file:
1	tisdat.f	/^   1     FORMAT (\/' ERROR TIADAT: INVALID XY PERMEABILITY')$/;"	l	subroutine:TIADAT	file:
1	tprop.f	/^    1 CONTINUE$/;"	l	subroutine:TMAXRESID	file:
1	tprop.f	/^    1 FORMAT(\/' DEBUG OUTPUT AT TIME =',F10.4,', DELTIM =',F10.5\/$/;"	l	subroutine:TBUGOUT	file:
1	trest.f	/^    1       FORMAT(5G23.16)$/;"	l	subroutine:TRESTI	file:
1	trest.f	/^    1       FORMAT(6I9)$/;"	l	subroutine:TRESTO	file:
1	tstep.f	/^    1 CALL TWELLOUTPUT()$/;"	l	subroutine:TSTEP3	file:
1	tstep.f	/^    1 CONTINUE$/;"	l	subroutine:TSTEP1	file:
1	ttdata.f	/^    1 FORMAT(' CONVERGENCE TOLERANCE (CVTOL)',T49,G11.4)$/;"	l	subroutine:TTDATA	file:
1	tvisual.f	/^ 1          CONTINUE$/;"	l	subroutine:COMP_HEADW	file:
1	tvisual.f	/^ 1    CONTINUE$/;"	l	subroutine:TVIS_OUTPUT	file:
1	twell.f	/^    1       BHP=PQ$/;"	l	subroutine:TWELL	file:
1	twell.f	/^    1       CALL WELLOUT (N,1,WELIPC(1,N)*CVMWELL\/DELTIM)$/;"	l	subroutine:TWELLOUTPUT	file:
1	twell.f	/^    1 CONTINUE$/;"	l	subroutine:TWELSUMS	file:
1	twell.f	/^    1 CONTINUE$/;"	l	subroutine:WBDSP	file:
1	units.f	/^    1 CONTINUE$/;"	l	subroutine:FNDUNT	file:
1	units.f	/^    1 CONTINUE$/;"	l	subroutine:INSTR	file:
1	units.f	/^    1 IF (NS.GT.MXUS) GO TO 14$/;"	l	subroutine:MAKESI	file:
1	units.f	/^    1 NI=I$/;"	l	subroutine:CONVRT	file:
1	visgrid.f	/^    1 CONTINUE$/;"	l	subroutine:TECGRID	file:
1	visgrid.f	/^    1 CONTINUE$/;"	l	subroutine:VISGRID	file:
1	visout.f	/^    1       MODACT=0$/;"	l	subroutine:GET_VISVARS	file:
1	visout.f	/^    1    MODACT=0$/;"	l	subroutine:VISOUT	file:
1	visout.f	/^ 1    CONTINUE$/;"	l	subroutine:GET_VISPARAMS	file:
1	visout.f	/^ 1    CONTINUE$/;"	l	subroutine:VIS_INIT	file:
1	vistab.f	/^    1 CONTINUE$/;"	l	subroutine:VTABDAT	file:
1	vistab.f	/^    1 FORMAT('ZONE T="',A14)$/;"	l	subroutine:VTABFIT	file:
1	vistab.f	/^    1 FORMAT(I2)$/;"	l	subroutine:CPYLAYOUT	file:
1	vistab.f	/^    1 J=I$/;"	l	subroutine:VTABINIT	file:
10	comp.f	/^   10 IF (NDOU.GT.0) THEN$/;"	l	subroutine:CPPRG	file:
10	comp.f	/^   10 IF (NS.GT.0) RETURN$/;"	l	subroutine:NUMGET	file:
10	comp.f	/^   10 IF (R(I).GE.R(J)) THEN$/;"	l	subroutine:EXEC	file:
10	comp.f	/^   10 IL=0$/;"	l	subroutine:CPEXP	file:
10	divide.f	/^   10 IF (NEWFB) THEN$/;"	l	subroutine:DIVIDE	file:
10	elastic.f	/^   10 CONTINUE$/;"	l	subroutine:EcalcGELEI	file:
10	elastic.f	/^   10 FORMAT(\/'ERROR:NOT SETUP FOR 1D, 2D EFFECTIVE MEAN STRESS$/;"	l	subroutine:EFFEC_MEAN_STRESS	file:
10	elastic.f	/^ 10   FORMAT(\/,'ERROR: MORE THAN 4 FRACFACE SHARING NODE('$/;"	l	subroutine:ESETUP_FNODE_TYPE	file:
10	estdout.f	/^  10  FORMAT(\/'ERROR: NOT SETUP FOR POROELASTIC 1D OR 2D SYSTEM')$/;"	l	subroutine:ESTDOUTA	file:
10	fcns.f	/^   10 continue$/;"	l	subroutine:QuadG27	file:
10	fcns.f	/^ 10    FORMAT(I3, I6)$/;"	l	subroutine:PRINT1DI4	file:
10	fcns.f	/^ 10    FORMAT(I3,E15.3)$/;"	l	subroutine:PRINT1D	file:
10	hypre.f	/^   10 CONTINUE$/;"	l	subroutine:CALC_GELEI	file:
10	hypre.f	/^   10 CONTINUE$/;"	l	subroutine:CALC_ILOW_IHIGH	file:
10	hypre.f	/^   10 CONTINUE$/;"	l	subroutine:CALC_LSIZE	file:
10	hypre.f	/^   10 CONTINUE$/;"	l	subroutine:HYPRE_EVFEM_FILL	file:
10	hypre.f	/^   10 CONTINUE$/;"	l	subroutine:HYPRE_EVFEM_SOLN	file:
10	hypre.f	/^   10 FORMAT('Strong threshold for hypre =',T45,G12.4)$/;"	l	subroutine:HYPREI	file:
10	idata.f	/^   10 CONTINUE$/;"	l	subroutine:GETROCK	file:
10	idata.f	/^   10 CONTINUE$/;"	l	subroutine:MAKEMAP	file:
10	idata.f	/^   10 NUMREG(I)=J$/;"	l	subroutine:GETGAPI	file:
10	impfa.f	/^ 10   CONTINUE$/;"	l	subroutine:TRANC2	file:
10	ipars.f	/^   10                  FORMAT(1P,' STEP',I6,' TIME',G11.4,' NEWT',I3,$/;"	l	subroutine:STEP	file:
10	iwell.f	/^   10       FORMAT(' ERROR 509; NUMBER OF WELLS (',I4,') EXCEEDS',I4)$/;"	l	subroutine:IWELLS	file:
10	many.f	/^   10       FORMAT(' SEND FROM',I3,' TO',I3,' JK =',7(2I3,','))$/;"	l	subroutine:EXMLST	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:I2UPDATE2	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:I4UPDATE2	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:L2UPDATE2	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:L4UPDATE2	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:R4UPDATE2	file:
10	many.f	/^   10 CONTINUE$/;"	l	subroutine:R8UPDATE2	file:
10	owell.f	/^   10          FORMAT(3I5)$/;"	l	subroutine:WELLPRTC	file:
10	owell.f	/^   10       N2=N1+5$/;"	l	subroutine:WELLPRT	file:
10	post_prcss0.f90	/^10 format(3a)$/;"	l	subroutine:frac_tecplot	file:
10	pre_prcss0.f90	/^10 m=m\/2$/;"	l	subroutine:isort	file:
10	prop.f	/^   10    FORMAT(\/' TYPICAL VALUES:'\/' ROCK  MODEL     Sw        Sg',$/;"	l	subroutine:SETREL3	file:
10	prtout.f	/^   10 J2GG=J1G-JTS$/;"	l	subroutine:GEAPRT	file:
10	putil.f	/^   10    CONTINUE$/;"	l	subroutine:ELEGET	file:
10	putil.f	/^   10    CONTINUE$/;"	l	subroutine:ELEPUT	file:
10	read1.f	/^   10 K=K+1$/;"	l	subroutine:READER	file:
10	read1.f	/^   10 L=1$/;"	l	subroutine:GETNUM	file:
10	restart.f	/^   10 NERR=NERRP$/;"	l	subroutine:RGEAOUT	file:
10	table.f	/^   10    R8V(J)=(VALS(I)-FACAU(1))\/FACMU(1)$/;"	l	subroutine:PRTTAB	file:
10	table.f	/^   10 DLB1=DLB1*X$/;"	l	subroutine:SPLINE	file:
10	table.f	/^   10 I=NENTY-I1+1$/;"	l	subroutine:LOOKUP	file:
10	table.f	/^   10 KEY=2$/;"	l	subroutine:NUMBR	file:
10	table.f	/^   10 NC=NC+1$/;"	l	subroutine:TABLE	file:
10	tdata.f	/^   10    FORMAT(' TIME STEPS COMPLETED =',T45,I12)$/;"	l	subroutine:GETTIMD	file:
10	tisdat.f	/^   10 FORMAT(\/' ********** IMPLICIT SINGLE-PHASE MODEL ***********'\/)$/;"	l	subroutine:TISDAT	file:
10	tivdat.f	/^   10    FORMAT(I5,4G14.5)$/;"	l	subroutine:TINIT2	file:
10	tprop.f	/^   10 CONTINUE$/;"	l	subroutine:TBUGOUT	file:
10	tvisual.f	/^ 10   continue$/;"	l	subroutine:TVIS_OUTPUT	file:
10	units.f	/^   10    UTOP(NTOP)=USI1(I)$/;"	l	subroutine:MAKESI	file:
10	units.f	/^   10 IF (NI.NE.NO) GO TO 13$/;"	l	subroutine:CONVRT	file:
10	vistab.f	/^   10 J=I$/;"	l	subroutine:VTABDAT	file:
100	bdaryin.f	/^ 100  FORMAT(8(F8.2,1X))$/;"	l	subroutine:BDARYIN	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:CALCPERMINV	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:CENTERJAC	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:COPYLTRAN	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:MAPTENSORQUAD	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:MPFA_POR_REF	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:MPFA_POR_VOL	file:
100	buildmpfa.f	/^ 100  CONTINUE$/;"	l	subroutine:VELLOCALUPDATE	file:
100	divide.f	/^  100 DO 101 J=1,NY$/;"	l	subroutine:DIVIDE	file:
100	divide.f	/^ 100  CLOSE(10)$/;"	l	subroutine:PRINT_VM_INFO	file:
100	earray.f	/^  100 RETURN$/;"	l	subroutine:EFRAC_ARRAY	file:
100	elastic.f	/^ 100           CONTINUE$/;"	l	subroutine:EUNFOLDFG	file:
100	elastic.f	/^ 100  CONTINUE$/;"	l	subroutine:POR_VOL	file:
100	fcns.f	/^  100 continue$/;"	l	subroutine:CWCprint	file:
100	fcns.f	/^  100 continue$/;"	l	subroutine:CWEPRINT	file:
100	fcns.f	/^ 100  CONTINUE$/;"	l	subroutine:ScaMulMat	file:
100	fcns.f	/^ 100  continue$/;"	l	function:Tri_AREA	file:
100	fcns.f	/^ 100  continue$/;"	l	subroutine:JacMat	file:
100	idata.f	/^  100 FORMAT(\/' SIMULATION MODEL',T56,'POROELASTIC')$/;"	l	subroutine:GETSCAL	file:
100	impfa.f	/^  100 continue$/;"	l	subroutine:getArea	file:
100	impfa.f	/^ 100  CONTINUE$/;"	l	subroutine:calcFaces	file:
100	impfa.f	/^ 100  continue$/;"	l	subroutine:updateFaces	file:
100	impfa.f	/^ 100  enddo$/;"	l	subroutine:calcArea	file:
100	impfa.f	/^ 100  enddo$/;"	l	subroutine:calcEVOL	file:
100	ipars.f	/^ 100  MODACT=0$/;"	l	subroutine:STEP	file:
100	many.f	/^  100 MSGS(I,J)=0$/;"	l	subroutine:COMMI	file:
100	many.f	/^ 100  FORMAT(A,I,A,I)$/;"	l	subroutine:EXMLST	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:GETMP	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:I2UPDATE2	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:I4UPDATE2	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:L2UPDATE2	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:L4UPDATE2	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:NOUPDATE	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:R4UPDATE2	file:
100	many.f	/^ 100  FORMAT(A,I,A,I,A,I)$/;"	l	subroutine:R8UPDATE2	file:
100	master-big0.f90	/^100 continue$/;"	l	subroutine:module_elasticity2	file:
100	mpfa_tran.f	/^ 100  CONTINUE$/;"	l	subroutine:STOREMATRIX	file:
100	pre_prcss0.f90	/^100  CONTINUE$/;"	l	subroutine:PRE_PRCSS2	file:
100	tbdary.f	/^  100 continue$/;"	l	subroutine:NEUMTOREF	file:
100	tbdary.f	/^ 100  CONTINUE$/;"	l	subroutine:calcbdry	file:
100	tstep.f	/^ 100     FORMAT(A,I,A,I)$/;"	l	subroutine:TSTEP1	file:
100	tstep.f	/^ 100     FORMAT(A,I,A,I)$/;"	l	subroutine:TSTEP2	file:
100	tstep.f	/^ 100     FORMAT(A,I,A,I)$/;"	l	subroutine:TSTEP3	file:
100	twell.f	/^ 100  FORMAT(A,I,A,I)$/;"	l	subroutine:TWELL	file:
100	visout.f	/^ 100  CONTINUE$/;"	l	subroutine:VIS_OUTPUT	file:
1000	comp.f	/^ 1000 NSTGU=NSTGU+1$/;"	l	subroutine:CPPRG	file:
1000	idata.f	/^ 1000      FORMAT(' PAYZONE',I2,',SINGLE PHASE')$/;"	l	subroutine:SETGEOMNEW	file:
1000	idata.f	/^ 1000 MODACT=0$/;"	l	subroutine:GETSCAL	file:
1001	comp.f	/^ 1001 CARRAY(K)=PROG(I)$/;"	l	subroutine:CPPRG	file:
1001	ipars.f	/^1001  CONTINUE$/;"	l	subroutine:IPARS	file:
101	bdaryin.f	/^ 101  FORMAT(A,\/,$/;"	l	subroutine:BDARYIN	file:
101	divide.f	/^  101 CONTINUE$/;"	l	subroutine:DIVIDE	file:
101	idata.f	/^  101 CONTINUE$/;"	l	subroutine:GETSCAL	file:
101	ipars.f	/^ 101  IF (NERR .EQ. 0) THEN$/;"	l	subroutine:IPARS	file:
101	post_prcss0.f90	/^101 continue$/;"	l	subroutine:frac_tecplot	file:
101	twell.f	/^  101 CONTINUE$/;"	l	subroutine:TWELL	file:
101	twell.f	/^  101 CONTINUE$/;"	l	subroutine:TWELLOUTPUT	file:
101	visout.f	/^ 101  continue$/;"	l	subroutine:GET_VISPARAMS	file:
1010	comp.f	/^ 1010 CONTINUE$/;"	l	subroutine:CPPRG	file:
102	idata.f	/^  102       FORMAT (\/' ERROR # 432; NO SIMULATION MODEL SPECIFIED'\/$/;"	l	subroutine:GETSCAL	file:
102	twell.f	/^  102    CONTINUE$/;"	l	subroutine:TWELLOUTPUT	file:
102	twell.f	/^  102 CONTINUE$/;"	l	subroutine:TWELL	file:
1020	comp.f	/^ 1020 IF (NDOU.GT.0) GO TO 817$/;"	l	subroutine:CPPRG	file:
103	twell.f	/^  103       WELIPC(3,IW)=BHP$/;"	l	subroutine:TWELL	file:
103	twell.f	/^  103       WELIS=WELIS+WELIPC(1,N)-WELIPC(2,N)$/;"	l	subroutine:TWELLOUTPUT	file:
1030	comp.f	/^ 1030 IF (NDOU.GT.0) GO TO 817$/;"	l	subroutine:CPPRG	file:
104	twell.f	/^  104       CALL WBDSP(.TRUE.,WELDEN(IW),WELBHP(IW),WHL,WV4,WV5,WV6,-PQ)$/;"	l	subroutine:TWELL	file:
1040	comp.f	/^ 1040 DO 1041 I=IC1,IC2$/;"	l	subroutine:CPPRG	file:
1041	comp.f	/^ 1041 CONTINUE$/;"	l	subroutine:CPPRG	file:
1042	comp.f	/^ 1042 IF (IC1.GT.IC2) GO TO 10$/;"	l	subroutine:CPPRG	file:
105	twell.f	/^  105       QRESID(IW)=0.D0$/;"	l	subroutine:TWELL	file:
1050	comp.f	/^ 1050 KSTG=.TRUE.$/;"	l	subroutine:CPPRG	file:
106	twell.f	/^  106 FORMAT(' NEWT',I3,', WELL',I4,', BHP',F10.3,', WBDEN',F10.4)$/;"	l	subroutine:TWELL	file:
1060	comp.f	/^ 1060 CALL CPEXP(PROG,IC1,IC2,KODE,R,VNAM,KVDAT,CARRAY,LCSTG,KERR,$/;"	l	subroutine:CPPRG	file:
1070	comp.f	/^ 1070 L=NKODU+1$/;"	l	subroutine:CPPRG	file:
1071	comp.f	/^ 1071 KODE(J,L)=VREGR(I)$/;"	l	subroutine:CPPRG	file:
1072	comp.f	/^ 1072 CONTINUE$/;"	l	subroutine:CPPRG	file:
11	bdaryin.f	/^ 11            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
11	bdaryout.f	/^ 11   FORMAT(A6,F6.2,1X,A10,I2,13(A5,I1,A1,F8.1,1X))$/;"	l	subroutine:BND_OUT	file:
11	buildmpfa.f	/^ 11     CONTINUE$/;"	l	subroutine:CALCPERMINV	file:
11	buildmpfa.f	/^ 11     CONTINUE$/;"	l	subroutine:MPFA_POR_VOL	file:
11	buildmpfa.f	/^ 11   CONTINUE$/;"	l	subroutine:CALCFGRAV	file:
11	comp.f	/^   11 CONTINUE$/;"	l	subroutine:CPEXP	file:
11	comp.f	/^   11 CONTINUE$/;"	l	subroutine:CPPRG	file:
11	comp.f	/^   11 IF (R(I).LE.R(J)) THEN$/;"	l	subroutine:EXEC	file:
11	comp.f	/^   11 NEX=10*NEX+K-1$/;"	l	subroutine:NUMGET	file:
11	divide.f	/^   11 DO 12 J=1,NY$/;"	l	subroutine:DIVIDE	file:
11	ebdary.f	/^   11 DO 35 I=1,NDMAX$/;"	l	subroutine:EGETVAL	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
11	ebdary.f	/^  11             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
11	ebdary.f	/^  11           CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
11	ebdary.f	/^  11          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
11	erest.f	/^   11       FORMAT(6I9)$/;"	l	subroutine:ERGEAOUT	file:
11	hypre.f	/^   11 FORMAT('Truncation factor for hypre =',T45,G12.4)$/;"	l	subroutine:HYPREI	file:
11	idata.f	/^   11    FORMAT('     PRINT REGION',I3,":")$/;"	l	subroutine:GETGAPI	file:
11	idata.f	/^   11    FORMAT(\/1X,A78)$/;"	l	subroutine:MAKEMAP	file:
11	idata.f	/^   11 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
11	impfa.f	/^ 11      continue$/;"	l	subroutine:calcArea	file:
11	ipars.f	/^   11             FORMAT(T38,' MODEL',I3,' BAL',3F10.7)$/;"	l	subroutine:STEP	file:
11	iwell.f	/^   11    WRITE (NFOUT,14) (LOCWEL(K,J,I),K=1,5)$/;"	l	subroutine:IWELLS	file:
11	many.f	/^   11    CALL R4GETM(N,IL,JL,KL,IDIM,JDIM,KDIM,KEYOUT,ARRY,KARY,IEX)$/;"	l	subroutine:GETMP	file:
11	many.f	/^   11    CONTINUE$/;"	l	subroutine:EXMLST	file:
11	many.f	/^   11 CONTINUE$/;"	l	subroutine:COMMI	file:
11	owell.f	/^   11          FORMAT(6G15.5)$/;"	l	subroutine:WELLPRTC	file:
11	owell.f	/^   11       FORMAT(' TIME  ',6G15.5)$/;"	l	subroutine:WELLPRT	file:
11	post_prcss0.f90	/^11 format(a)$/;"	l	subroutine:frac_tecplot	file:
11	prop.f	/^   11    CONTINUE$/;"	l	subroutine:SETREL3	file:
11	prtout.f	/^   11    CALL R4GETS (I1,I2,ITS,J1,J2,JTS,K,IIEX,KEYOUT,IDIM,JDIM,$/;"	l	subroutine:GEAPRT	file:
11	read1.f	/^   11 CONTINUE$/;"	l	subroutine:GETNUM	file:
11	read1.f	/^   11 IF (CC.EQ.DOLLAR) GO TO 7$/;"	l	subroutine:READER	file:
11	read2.f	/^   11 DO 35 I=1,NDMAX$/;"	l	subroutine:GETVAL	file:
11	read3.f	/^   11 DO 35 I=1,NDMAX$/;"	l	subroutine:GETVAL2	file:
11	restart.f	/^   11       FORMAT(6I9)$/;"	l	subroutine:RGEAOUT	file:
11	restart.f	/^   11 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RGEAIN	file:
11	table.f	/^   11    R8V(J)=(VALS(I)-FACAU(2))\/FACMU(2)$/;"	l	subroutine:PRTTAB	file:
11	table.f	/^   11 CONTINUE$/;"	l	subroutine:NUMBR	file:
11	table.f	/^   11 CONTINUE$/;"	l	subroutine:SPLINE	file:
11	table.f	/^   11 DUM1=VALUES(NENTY)$/;"	l	subroutine:LOOKUP	file:
11	table.f	/^   11 IF (NC.GT.LSORC) GO TO 30$/;"	l	subroutine:TABLE	file:
11	tdata.f	/^   11 BK(I)=.FALSE.$/;"	l	subroutine:GETTIMD	file:
11	timer.f	/^   11 CONTINUE$/;"	l	subroutine:TIMOUT	file:
11	tisdat.f	/^   11        FORMAT (\/' ERROR TIADAT: INVALID INITIAL PRESSURE')$/;"	l	subroutine:TIADAT	file:
11	tivdat.f	/^   11    PRESC(I)=PRESA$/;"	l	subroutine:TINIT2	file:
11	tprop.f	/^   11 FORMAT(\/' I LOCATION=',I5,', J LOCATION =',I5,', K LOCATION =',I5)$/;"	l	subroutine:TBUGOUT	file:
11	tvisual.f	/^ 11      CONTINUE$/;"	l	subroutine:TVIS_TRANSL	file:
11	units.f	/^   11 CONTINUE$/;"	l	subroutine:CONVRT	file:
11	vistab.f	/^   11 FORMAT('$!VarSet |YAXTITLE| = "',50A1)$/;"	l	subroutine:VTABDAT	file:
113	many.f	/^  113 NERR=NERR+1$/;"	l	subroutine:COMMI	file:
114	many.f	/^  114 FORMAT (\/' ERROR # 201; TOO MANY MESSAGE ELEMENTS, PROC',I5)$/;"	l	subroutine:COMMI	file:
115	idata.f	/^  115 FORMAT(\/' SIMULATION MODEL',T56,'COMPOSITIONAL MFMFE')$/;"	l	subroutine:GETSCAL	file:
116	idata.f	/^  116 FORMAT(\/' SIMULATION MODEL',T56,'SINGLE PHASE MFMFE')$/;"	l	subroutine:GETSCAL	file:
117	idata.f	/^  117 FORMAT(\/' SIMULATION MODEL',T56,'HYDROLOGY IMPLICIT MFMFE')$/;"	l	subroutine:GETSCAL	file:
117	ipars.f	/^  117    FORMAT(\/' TOTAL LINEAR ITERATIONS THIS RUN =',T40,I7\/$/;"	l	subroutine:IPARS	file:
12	bdaryin.f	/^ 12            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
12	buildmpfa.f	/^ 12     CONTINUE$/;"	l	subroutine:CALCPERMINV	file:
12	comp.f	/^   12 IC=IL$/;"	l	subroutine:CPEXP	file:
12	comp.f	/^   12 IF (R(I).NE.R(J)) THEN$/;"	l	subroutine:EXEC	file:
12	divide.f	/^   12 CONTINUE$/;"	l	subroutine:DIVIDE	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
12	ebdary.f	/^  12             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
12	ebdary.f	/^  12           CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
12	ebdary.f	/^  12          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
12	erest.f	/^   12       FORMAT(A20)$/;"	l	subroutine:ERGEAOUT	file:
12	hypre.f	/^   12 FORMAT('COARSEN_TYPE =',T45,I5)$/;"	l	subroutine:HYPREI	file:
12	idata.f	/^   12    J2=J1+73$/;"	l	subroutine:MAKEMAP	file:
12	idata.f	/^   12 CONTINUE$/;"	l	subroutine:GETROCK	file:
12	idata.f	/^   12 FORMAT (\/' ERROR # 432; INVALID SIMULATION MODEL FOR BLOCK',$/;"	l	subroutine:GETSCAL	file:
12	idata.f	/^   12 MODACT=0$/;"	l	subroutine:CREATE	file:
12	ipars.f	/^   12             FORMAT(T49,3F10.7)$/;"	l	subroutine:STEP	file:
12	iwell.f	/^   12    FORMAT(' BLOCK INTERVAL   I   J   K')$/;"	l	subroutine:IWELLS	file:
12	many.f	/^   12       FORMAT(' RECV AT',I3,' FROM',I3,' JK =',7(2I3,','))$/;"	l	subroutine:EXMLST	file:
12	many.f	/^   12    CALL R8GETM(N,IL,JL,KL,IDIM,JDIM,KDIM,KEYOUT,ARRY,KARY,IEX)$/;"	l	subroutine:GETMP	file:
12	many.f	/^   12 CONTINUE$/;"	l	subroutine:COMMI	file:
12	owell.f	/^   12       FORMAT(' VALUE ',6G15.5)$/;"	l	subroutine:WELLPRT	file:
12	post_prcss0.f90	/^12 format(a,i)$/;"	l	subroutine:frac_tecplot	file:
12	prop.f	/^   12    CONTINUE$/;"	l	subroutine:SETREL3	file:
12	prtout.f	/^   12    CALL R8GETS (I1,I2,ITS,J1,J2,JTS,K,IIEX,KEYOUT,IDIM,JDIM,$/;"	l	subroutine:GEAPRT	file:
12	read1.f	/^   12 READ(NFIL,4,END=20) C$/;"	l	subroutine:READER	file:
12	restart.f	/^   12       FORMAT(A20)$/;"	l	subroutine:RGEAOUT	file:
12	restart.f	/^   12 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RGEAIN	file:
12	table.f	/^   12    BUF1(I)=C$/;"	l	subroutine:TABLE	file:
12	table.f	/^   12 DUM1=1.D0\/(XX-TRANC1(NTAB))$/;"	l	subroutine:LOOKUP	file:
12	table.f	/^   12 FORMAT(1X,A8,' HAS UNITS OF ',A50)$/;"	l	subroutine:PRTTAB	file:
12	table.f	/^   12 W(I,J)=W(J,I)$/;"	l	subroutine:SPLINE	file:
12	tdata.f	/^   12 CONTINUE$/;"	l	subroutine:GETTIMD	file:
12	timer.f	/^   12 FORMAT(1X,A35,3F11.3)$/;"	l	subroutine:TIMOUT	file:
12	tvisual.f	/^ 12      CONTINUE$/;"	l	subroutine:TVIS_TRANSL	file:
12	units.f	/^   12 CONTINUE$/;"	l	subroutine:CONVRT	file:
12	vistab.f	/^   12 FORMAT('$!VarSet |PLTZONE1| =',I3)$/;"	l	subroutine:VTABDAT	file:
1212	bdaryin.f	/^ 1212 CONTINUE$/;"	l	subroutine:BDARYIN	file:
124	twell.f	/^  124       ELERATE(LL,IW)=DUB3$/;"	l	subroutine:TWELL	file:
13	bdaryin.f	/^   13 NERR=NERR+1$/;"	l	subroutine:BDPROG	file:
13	bdaryin.f	/^ 13            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
13	bdaryin.f	/^ 13      KE = KE +1$/;"	l	subroutine:DOBDARYW	file:
13	comp.f	/^   13 IF (R(I).EQ.0.D0) THEN$/;"	l	subroutine:EXEC	file:
13	divide.f	/^ 13   CONTINUE$/;"	l	subroutine:DIVIDE	file:
13	ebdary.f	/^   13 E='INVALID ARRAY SYNTAX'$/;"	l	subroutine:EGETVAL	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
13	ebdary.f	/^  13             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
13	ebdary.f	/^  13          CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
13	ebdary.f	/^  13          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
13	ebdary.f	/^  13  FORMAT(\/2X,'NBLK   SIDE     DIRECTION X$/;"	l	subroutine:EBDARY	file:
13	erest.f	/^   13 WRITE (NFOUT,14)$/;"	l	subroutine:ERGEAOUT	file:
13	hypre.f	/^   13 CONTINUE$/;"	l	subroutine:HYPRE_ALLOCATE	file:
13	hypre.f	/^   13 FORMAT('K_DIM =',T45,I5)$/;"	l	subroutine:HYPREI	file:
13	idata.f	/^   13 FORMAT(\/' SIMULATION MODEL',T56,'SINGLE PHASE_IMPLICIT')$/;"	l	subroutine:GETSCAL	file:
13	idata.f	/^   13 NERR=NERR+1$/;"	l	subroutine:CREATE	file:
13	idata.f	/^   13 NERR=NERR+1$/;"	l	subroutine:SETGEOM	file:
13	idata.f	/^   13 NERR=NERR+1$/;"	l	subroutine:SETGEOMNEW	file:
13	ipars.f	/^   13 NERR=NERR+1$/;"	l	subroutine:OPENIO	file:
13	iwell.f	/^   13 NERR=NERR+1$/;"	l	subroutine:IWELLS	file:
13	many.f	/^   13    CALL I2GETM(N,IL,JL,KL,IDIM,JDIM,KDIM,KEYOUT,ARRY,KARY,IEX)$/;"	l	subroutine:GETMP	file:
13	many.f	/^   13    CONTINUE$/;"	l	subroutine:COMMI	file:
13	many.f	/^   13 NERR=NERR+1$/;"	l	subroutine:SETPRCS	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN EXMLST FOR PROC',MYPRC$/;"	l	subroutine:EXMLST	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN I2UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:I2UPDATE2	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN I4UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:I4UPDATE2	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN L2UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:L2UPDATE2	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN L4UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:L4UPDATE2	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN R4UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:R4UPDATE2	file:
13	many.f	/^   13 WRITE (*,*) ' MESSAGE ERROR',IERR,' IN R8UPDATE FOR PROC',MYPRC,$/;"	l	subroutine:R8UPDATE2	file:
13	post_prcss0.f90	/^13 format(1p,4e15.6)$/;"	l	subroutine:frac_tecplot	file:
13	prop.f	/^   13 NERR=NERR+1$/;"	l	subroutine:ROCKPROG	file:
13	prtout.f	/^   13    CALL I2GETS (I1,I2,ITS,J1,J2,JTS,K,IIEX,KEYOUT,IDIM,JDIM,$/;"	l	subroutine:GEAPRT	file:
13	read1.f	/^   13 CALL PUTERR(KODRET,E,A(J),M,1)$/;"	l	subroutine:GETNUM	file:
13	read1.f	/^   13 E='INPUT DATA FILE TOO LONG, LAST RECORD READ WAS'$/;"	l	subroutine:READER	file:
13	read1.f	/^   13 NERR=NERR+1$/;"	l	subroutine:GETGRDA	file:
13	read2.f	/^   13 E='INVALID ARRAY SYNTAX'$/;"	l	subroutine:GETVAL	file:
13	read3.f	/^   13 E='INVALID ARRAY SYNTAX'$/;"	l	subroutine:GETVAL2	file:
13	restart.f	/^   13 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RGEAIN	file:
13	restart.f	/^   13 NERR=NERR+1$/;"	l	subroutine:RESIN	file:
13	restart.f	/^   13 WRITE (NFOUT,14)$/;"	l	subroutine:RESOUT	file:
13	restart.f	/^   13 WRITE (NFOUT,14)$/;"	l	subroutine:RGEAOUT	file:
13	stdout.f	/^   13 RETURN$/;"	l	subroutine:OPENBUG	file:
13	table.f	/^   13 CALL PUTERR(KODRET,E,A(L),M,1)$/;"	l	subroutine:NUMBR	file:
13	table.f	/^   13 NERR=NERR+1$/;"	l	subroutine:TABLE	file:
13	table.f	/^   13 STOP 13$/;"	l	subroutine:LOOKUP	file:
13	units.f	/^   13 KODRET=133$/;"	l	subroutine:MAKESI	file:
13	units.f	/^   13 KODRET=134$/;"	l	subroutine:CONVRT	file:
13	visgrid.f	/^   13 WRITE(*,14) GRIDFILE$/;"	l	subroutine:VISGRID	file:
13	visout.f	/^ 13   CONTINUE$/;"	l	subroutine:VISOUT	file:
13	visout.f	/^ 13   NERR = NERR +1$/;"	l	subroutine:VIS_TIME	file:
13	vistab.f	/^   13 WRITE(*,14) DUMNAM$/;"	l	subroutine:VTABINIT	file:
13	vistab.f	/^   13 WRITE(*,14) TPBASE$/;"	l	subroutine:CPYLAYOUT	file:
13	vistab.f	/^   13 WRITE(NFOUT,4) DUMLAB$/;"	l	subroutine:VTABDAT	file:
130	comp.f	/^  130 ASTG1(L-M+1)=CARRAY(L)$/;"	l	subroutine:EXEC	file:
131	comp.f	/^  131 ASTG1(L-M+201)=CARRAY(L)$/;"	l	subroutine:EXEC	file:
14	bdaryin.f	/^ 14            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
14	comp.f	/^   14 IC=IC+1$/;"	l	subroutine:CPEXP	file:
14	comp.f	/^   14 IF (R(I).NE.0.D0.AND.R(J).NE.0.D0) THEN$/;"	l	subroutine:EXEC	file:
14	divide.f	/^   14 J2=J1+NJKS-1$/;"	l	subroutine:DIVIDE	file:
14	ebdary.f	/^   14 IF (A(L).EQ.RIGHT) THEN$/;"	l	subroutine:EGETVAL	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
14	ebdary.f	/^  14             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
14	ebdary.f	/^  14          CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
14	ebdary.f	/^  14          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
14	ebdary.f	/^  14  FORMAT(2X,I3,5X,A4,4X,A,4X,A,4X,A)$/;"	l	subroutine:EBDARY	file:
14	erest.f	/^   14 FORMAT (\/' ERROR # 434; INVALID ARRAY NUMBER IN RGEAOUT()')$/;"	l	subroutine:ERGEAOUT	file:
14	hypre.f	/^   14 FORMAT('NUM_SWEEPS =',T45,I5)$/;"	l	subroutine:HYPREI	file:
14	idata.f	/^   14    FORMAT (\/' ERROR 503; INVALID ROCK TYPES SPECIFIED')$/;"	l	subroutine:GETROCK	file:
14	idata.f	/^   14    WRITE (NFOUT,17)K,(BLKBUF(L),L=1,L2)$/;"	l	subroutine:MAKEMAP	file:
14	idata.f	/^   14 FORMAT (\/' ERROR #',I4,'; MEMORY MANAGEMENT ERROR AT LOCATION',$/;"	l	subroutine:CREATE	file:
14	idata.f	/^   14 FORMAT (\/' ERROR #',I4,'; MEMORY MANAGEMENT ERROR')$/;"	l	subroutine:SETGEOM	file:
14	idata.f	/^   14 FORMAT (\/' ERROR #',I4,'; MEMORY MANAGEMENT ERROR')$/;"	l	subroutine:SETGEOMNEW	file:
14	idata.f	/^   14 FORMAT(\/' SIMULATION MODEL',T56,'TRANSPORT_CHEMISTRY')$/;"	l	subroutine:GETSCAL	file:
14	ipars.f	/^   14                  FORMAT(1P,' STEP',I8,' TIME',G11.4,' NEWT',I3,$/;"	l	subroutine:STEP	file:
14	ipars.f	/^   14 FORMAT (\/' ERROR # 431; OPEN FILE FAILED FOR '\/A60)$/;"	l	subroutine:OPENIO	file:
14	iwell.f	/^   14    FORMAT(I4,I8,I7,2I4)$/;"	l	subroutine:IWELLS	file:
14	many.f	/^   14          CONTINUE$/;"	l	subroutine:COMMI	file:
14	many.f	/^   14       LB=LA+6$/;"	l	subroutine:EXMLST	file:
14	many.f	/^   14    CALL I4GETM(N,IL,JL,KL,IDIM,JDIM,KDIM,KEYOUT,ARRY,KARY,IEX)$/;"	l	subroutine:GETMP	file:
14	many.f	/^   14 FORMAT (\/' ERROR # 202; PARALLEL ROUTINE ',A14,' FAILED')$/;"	l	subroutine:SETPRCS	file:
14	post_prcss0.f90	/^14 format(4i)$/;"	l	subroutine:frac_tecplot	file:
14	prtout.f	/^   14    CALL I4GETS (I1,I2,ITS,J1,J2,JTS,K,IIEX,KEYOUT,IDIM,JDIM,$/;"	l	subroutine:GEAPRT	file:
14	read1.f	/^   14       FORMAT(\/' ERROR #',I4,'; ',A50)$/;"	l	subroutine:GETNUM	file:
14	read1.f	/^   14    A(LAST+J)=TRU(J)$/;"	l	subroutine:READER	file:
14	read2.f	/^   14 IF (A(L).EQ.RIGHT) THEN$/;"	l	subroutine:GETVAL	file:
14	read3.f	/^   14 IF (A(L).EQ.RIGHT) THEN$/;"	l	subroutine:GETVAL2	file:
14	restart.f	/^   14 FORMAT (\/' ERROR # 434; INVALID ARRAY NUMBER IN RGEAOUT()')$/;"	l	subroutine:RGEAOUT	file:
14	restart.f	/^   14 FORMAT (\/' ERROR # 435; OPEN FILE FAILED FOR',A40)$/;"	l	subroutine:RESOUT	file:
14	table.f	/^   14       FORMAT(\/' ERROR #',I4,'; ',A50)$/;"	l	subroutine:NUMBR	file:
14	table.f	/^   14    DO 15 I=1,KEYAT$/;"	l	subroutine:TABLE	file:
14	table.f	/^   14 FORMAT (\/' ERROR # 406; LOG INTERPOLATION WITH X =',G14.6)$/;"	l	subroutine:LOOKUP	file:
14	table.f	/^   14 FORMAT(1X,A8,' IS DIMENSIONLESS')$/;"	l	subroutine:PRTTAB	file:
14	table.f	/^   14 W(I,1)=BB(I)$/;"	l	subroutine:SPLINE	file:
14	timer.f	/^   14 FORMAT(\/T11,'TIMER',T41,'AVERAGE',T52,'MINIMUM',T63,'MAXIMUM'\/)$/;"	l	subroutine:TIMOUT	file:
14	tivdat.f	/^   14 CONTINUE$/;"	l	subroutine:TINIT2	file:
14	tprop.f	/^   14 FORMAT (' PRES(I,J,K)',T22,G17.9)$/;"	l	subroutine:TBUGOUT	file:
14	tstep.f	/^   14    FORMAT(' NEWT =',I3,' Rmax =',G10.3,' Rtot =',G10.3)$/;"	l	subroutine:TSTEP2	file:
14	units.f	/^   14 IF (NTOP.LT.MXUS) UTOP(NTOP+1) = ' '$/;"	l	subroutine:MAKESI	file:
14	visgrid.f	/^   14 FORMAT (\/' ERROR # 420; OPEN FAILED FOR FILE '\/A50)$/;"	l	subroutine:VISGRID	file:
14	vistab.f	/^   14 FORMAT (\/' ERROR # 420; OPEN FAILED FOR FILE '\/A50)$/;"	l	subroutine:CPYLAYOUT	file:
14	vistab.f	/^   14 FORMAT (\/' ERROR # 420; OPEN FAILED FOR FILE '\/A50)$/;"	l	subroutine:VTABINIT	file:
14	vistab.f	/^   14 FORMAT('$!VarSet |PLTZONE2| =',I3)$/;"	l	subroutine:VTABDAT	file:
142	comp.f	/^  142 ASTG1(II-II1+1)=CARRAY(II)$/;"	l	subroutine:EXEC	file:
142	twell.f	/^  142    CONTINUE$/;"	l	subroutine:TWELLOUTPUT	file:
143	comp.f	/^  143    R(L)=RW(II)$/;"	l	subroutine:EXEC	file:
143	twell.f	/^  143    FORMAT(' WELL',I4,' QFLI=',G12.5,' QFLP=',G12.5)$/;"	l	subroutine:TWELLOUTPUT	file:
146	comp.f	/^  146 ASTG1(II-II1+1)=CARRAY(II)$/;"	l	subroutine:EXEC	file:
147	comp.f	/^  147    RW(II)=R(L)$/;"	l	subroutine:EXEC	file:
15	bdaryin.f	/^ 15            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
15	comp.f	/^   15 CALL NUMGET(PROG(IC1),IC2-IC1+1,N,VAL,K)$/;"	l	subroutine:CPPRG	file:
15	comp.f	/^   15 CONTINUE$/;"	l	subroutine:CPEXP	file:
15	comp.f	/^   15 IF (R(I).NE.0.D0.OR.R(J).NE.0.D0) THEN$/;"	l	subroutine:EXEC	file:
15	divide.f	/^   15    CONTINUE$/;"	l	subroutine:DIVIDE	file:
15	ebdary.f	/^   15 IF (A(L).NE.BLANK.AND.A(L).NE.EQUAL) THEN$/;"	l	subroutine:EGETVAL	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
15	ebdary.f	/^  15             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
15	ebdary.f	/^  15          CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
15	ebdary.f	/^  15          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
15	erest.f	/^   15       FORMAT(6I8)$/;"	l	subroutine:ERGEAOUT	file:
15	hypre.f	/^   15 FORMAT('MAX_LEVELS =',T45,I5)$/;"	l	subroutine:HYPREI	file:
15	idata.f	/^   15    CONTINUE$/;"	l	subroutine:MAKEMAP	file:
15	idata.f	/^   15    FORMAT (\/' ERROR 502; NO X LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
15	idata.f	/^   15    FORMAT (\/' ERROR 504; POROSITY ERROR')$/;"	l	subroutine:GETROCK	file:
15	idata.f	/^   15    FORMAT(' RESTART SIMULATION (RESTART)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
15	ipars.f	/^   15       FORMAT(' STEP',I6,' MODEL',I3,' EQS.',I2,' CURRENT',$/;"	l	subroutine:STEP	file:
15	iwell.f	/^   15 CONTINUE$/;"	l	subroutine:IWELLS	file:
15	many.f	/^   15       LB=LA+6$/;"	l	subroutine:EXMLST	file:
15	many.f	/^   15 CONTINUE$/;"	l	subroutine:COMMI	file:
15	post_prcss0.f90	/^15 format(1p,a,e15.6)$/;"	l	subroutine:frac_tecplot	file:
15	read1.f	/^   15       FORMAT(' IN DEFAULT UNITS ',60A1)$/;"	l	subroutine:GETNUM	file:
15	read1.f	/^   15    DO 16 J=1,5$/;"	l	subroutine:READER	file:
15	read2.f	/^   15 IF (A(L).NE.BLANK.AND.A(L).NE.EQUAL) THEN$/;"	l	subroutine:GETVAL	file:
15	read3.f	/^   15 IF (A(L).NE.BLANK.AND.A(L).NE.EQUAL) THEN$/;"	l	subroutine:GETVAL2	file:
15	restart.f	/^   15       FORMAT(6I8)$/;"	l	subroutine:RGEAOUT	file:
15	restart.f	/^   15 CONTINUE$/;"	l	subroutine:RESOUT	file:
15	restart.f	/^   15 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RGEAIN	file:
15	table.f	/^   15       FORMAT(' IN UNITS ',60A1)$/;"	l	subroutine:NUMBR	file:
15	table.f	/^   15    CONTINUE$/;"	l	subroutine:TABLE	file:
15	table.f	/^   15 W(L,1)=W(L-NP,1)+DLB1$/;"	l	subroutine:SPLINE	file:
15	table.f	/^   15 WRITE (NFOUT,*) ' '$/;"	l	subroutine:PRTTAB	file:
15	timer.f	/^   15    N2=N1+3$/;"	l	subroutine:TIMOUT	file:
15	tivdat.f	/^   15 CONTINUE$/;"	l	subroutine:TINIT2	file:
15	units.f	/^   15    CONTINUE$/;"	l	subroutine:MAKESI	file:
15	vistab.f	/^   15    J=I$/;"	l	subroutine:VTABINIT	file:
16	bdaryin.f	/^ 16            CONTINUE$/;"	l	subroutine:FINDBELSW	file:
16	comp.f	/^   16    A(I+IC-1)=BLK$/;"	l	subroutine:CPEXP	file:
16	comp.f	/^   16 DO 24 J=1,NKEYW$/;"	l	subroutine:CPPRG	file:
16	comp.f	/^   16 IF (R(I).LT.0.D0) GO TO 403$/;"	l	subroutine:EXEC	file:
16	divide.f	/^   16    CONTINUE$/;"	l	subroutine:DIVIDE	file:
16	ebdary.f	/^   16 L=L+1$/;"	l	subroutine:EGETVAL	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
16	ebdary.f	/^  16             CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
16	ebdary.f	/^  16          CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
16	ebdary.f	/^  16          CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
16	idata.f	/^   16    FORMAT (\/' ERROR 502; NO Y LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
16	idata.f	/^   16    FORMAT (\/' ERROR 505; X PERMEABILITY ERROR')$/;"	l	subroutine:GETROCK	file:
16	idata.f	/^   16    FORMAT(\/' ',15I5)$/;"	l	subroutine:MAKEMAP	file:
16	idata.f	/^   16 FORMAT(\/' SIMULATION STOP TIME (TIMEEND)',T49,F10.2,1X,A20)$/;"	l	subroutine:GETSCAL	file:
16	iwell.f	/^   16    CONTINUE$/;"	l	subroutine:IWELLS	file:
16	many.f	/^   16    CONTINUE$/;"	l	subroutine:COMMI	file:
16	many.f	/^   16    FORMAT(' PROC',I4,' SENDING',I5,' COLUMNS TO PROC',I4,$/;"	l	subroutine:EXMLST	file:
16	owell.f	/^   16       CONTINUE$/;"	l	subroutine:WELLDSK	file:
16	post_prcss0.f90	/^16 format(6i)$/;"	l	subroutine:frac_tecplot	file:
16	prtout.f	/^   16 J1GG=J2GG+JTS$/;"	l	subroutine:GEAPRT	file:
16	read1.f	/^   16    A(LAST+J)=FAL(J)$/;"	l	subroutine:READER	file:
16	read2.f	/^   16 L=L+1$/;"	l	subroutine:GETVAL	file:
16	read3.f	/^   16 L=L+1$/;"	l	subroutine:GETVAL2	file:
16	table.f	/^   16    FORMAT (\/' ERROR # 410; ILLEGAL KEYWORD ',A15)$/;"	l	subroutine:TABLE	file:
16	table.f	/^   16 CONTINUE$/;"	l	subroutine:PRTTAB	file:
16	table.f	/^   16 KEY=3$/;"	l	subroutine:NUMBR	file:
16	table.f	/^   16 L=0$/;"	l	subroutine:SPLINE	file:
16	timer.f	/^   16    FORMAT(\/T22,'PROCESSOR =',T34,4I10)$/;"	l	subroutine:TIMOUT	file:
16	tivdat.f	/^   16 CONTINUE$/;"	l	subroutine:TINIT2	file:
16	tprop.f	/^   16 FORMAT(' PROC 0: IL1',I4,', IL2',I4,', JL1(KL2)',I4,', JL2(KL2)',$/;"	l	subroutine:TBUGOUT	file:
16	units.f	/^   16 DO 17 I=1,NTOP$/;"	l	subroutine:MAKESI	file:
16	vistab.f	/^   16    DUMNAM1(J)='"'$/;"	l	subroutine:VTABINIT	file:
17	comp.f	/^   17    CONTINUE$/;"	l	subroutine:CPEXP	file:
17	divide.f	/^   17       CONTINUE$/;"	l	subroutine:DIVIDE	file:
17	hypre.f	/^   17 FORMAT('Hypre preconditioner ID  =',T45,I5)$/;"	l	subroutine:HYPREI	file:
17	idata.f	/^   17    FORMAT (\/' ERROR 502; NO Z LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
17	idata.f	/^   17    FORMAT (\/' ERROR 505; Y PERMEABILITY ERROR')$/;"	l	subroutine:GETROCK	file:
17	idata.f	/^   17    FORMAT(I4,' ',74A1)$/;"	l	subroutine:MAKEMAP	file:
17	idata.f	/^   17 FORMAT(' USER OUTPUT LEVEL (OUTLEVEL)',T56,'MINIMUM')$/;"	l	subroutine:GETSCAL	file:
17	iwell.f	/^   17       CONTINUE$/;"	l	subroutine:IWELLS	file:
17	many.f	/^   17          CONTINUE$/;"	l	subroutine:COMMI	file:
17	many.f	/^   17    FORMAT(' PROC',I4,' RECEIVING',I5,' COLUMNS FROM PROC',I4,$/;"	l	subroutine:EXMLST	file:
17	owell.f	/^   17       DO 18 L=40,1,-1$/;"	l	subroutine:WELLDSK	file:
17	prtout.f	/^   17 CONTINUE$/;"	l	subroutine:GEAPRT	file:
17	read1.f	/^   17    IF (NET.EQ.0.AND.NETB.EQ.0.AND.(A(LAST).EQ.BLANK.OR.A(LAST)$/;"	l	subroutine:READER	file:
17	table.f	/^   17    CONTINUE$/;"	l	subroutine:NUMBR	file:
17	table.f	/^   17    IF (K.EQ.20) THEN$/;"	l	subroutine:TABLE	file:
17	table.f	/^   17 A(J,I)=W(L,1)$/;"	l	subroutine:SPLINE	file:
17	table.f	/^   17 IF (NUMX.LT.3) THEN$/;"	l	subroutine:PRTTAB	file:
17	tdata.f	/^   17    FORMAT(' USER OUTPUT LEVEL (OUTLEVEL) =',T56,'MINIMUM')$/;"	l	subroutine:GETTIMD	file:
17	timer.f	/^   17    FORMAT(1X,A35,4F10.2)$/;"	l	subroutine:TIMOUT	file:
17	tivdat.f	/^   17    WRITE (AL(N),10) IW(M,L),PWBW(M,L),DEPBW(M,L)$/;"	l	subroutine:TINIT2	file:
17	units.f	/^   17 CONTINUE$/;"	l	subroutine:MAKESI	file:
18	comp.f	/^   18    DO 16 I=1,J$/;"	l	subroutine:CPEXP	file:
18	divide.f	/^   18    CONTINUE$/;"	l	subroutine:DIVIDE	file:
18	elastic.f	/^   18    ELECONS(K,I)=ELELEN(K,I)*ELEPERM(K,I)*ELEGEOM(K,I)$/;"	l	subroutine:SDPWELL	file:
18	idata.f	/^   18    FORMAT (\/' ERROR 505; INVALID Z PERMEABILITY')$/;"	l	subroutine:GETROCK	file:
18	idata.f	/^   18 FORMAT(' USER OUTPUT LEVEL (OUTLEVEL)',T56,'STANDARD')$/;"	l	subroutine:GETSCAL	file:
18	idata.f	/^   18 LENTA(N)=0$/;"	l	subroutine:MAKEMAP	file:
18	iwell.f	/^   18    ELECONS(K,I)=ELELEN(K,I)*ELEPERM(K,I)*ELEGEOM(K,I)$/;"	l	subroutine:IWELLS	file:
18	owell.f	/^   18       CONTINUE$/;"	l	subroutine:WELLDSK	file:
18	prtout.f	/^   18 WRITE (NFOUT,19) KG$/;"	l	subroutine:GEAPRT	file:
18	read1.f	/^   18 I=I+1$/;"	l	subroutine:READER	file:
18	table.f	/^   18          FORMAT (\/' ERROR # 412; WRONG CONTEXT FOR KEYWORD ',A15)$/;"	l	subroutine:TABLE	file:
18	table.f	/^   18 FORMAT(' SINGULAR MATRIX IN SPLINE DETERMINATION')$/;"	l	subroutine:SPLINE	file:
18	tdata.f	/^   18    FORMAT(' USER OUTPUT LEVEL (OUTLEVEL) =',T56,'STANDARD')$/;"	l	subroutine:GETTIMD	file:
18	timer.f	/^   18    CONTINUE$/;"	l	subroutine:TIMOUT	file:
18	tivdat.f	/^   18          WRITE (NFOUT,19) (ALS1(JTO),JTO=1,J1O)$/;"	l	subroutine:TINIT2	file:
18	units.f	/^   18 CONTINUE$/;"	l	subroutine:MAKESI	file:
19	divide.f	/^   19    CONTINUE$/;"	l	subroutine:DIVIDE	file:
19	idata.f	/^   19    FORMAT(' RATIO OF HOR to VERT PERMEABILITY',T48,F12.3)$/;"	l	subroutine:GETROCK	file:
19	idata.f	/^   19 FORMAT(' USER OUTPUT LEVEL (OUTLEVEL)',T56,'MAXIMUM')$/;"	l	subroutine:GETSCAL	file:
19	iwell.f	/^   19 NERR=NERR+1$/;"	l	subroutine:IWELLS	file:
19	owell.f	/^   19       WRITE (NFWELL,5) (WN(L,NW),L=1,LN),CL,SP,(TH(L,KD),L=1,LT)$/;"	l	subroutine:WELLDSK	file:
19	prtout.f	/^   19 FORMAT(\/' K =',I4)$/;"	l	subroutine:GEAPRT	file:
19	read1.f	/^   19    DO 14 J=1,4$/;"	l	subroutine:READER	file:
19	table.f	/^   19       FORMAT (\/' ERROR # 413; EXCESS TABLE DATA AT ',G15.8)$/;"	l	subroutine:TABLE	file:
19	table.f	/^   19 FORMAT (' INSUFFICIENT DATA TO DETERMINE SPLINE FUNCTION')$/;"	l	subroutine:SPLINE	file:
19	tdata.f	/^   19    FORMAT(' USER OUTPUT LEVEL (OUTLEVEL) =',T56,'MAXIMUM')$/;"	l	subroutine:GETTIMD	file:
19	timer.f	/^   19    FORMAT(\/' ********************  DETAILS  ********************')$/;"	l	subroutine:TIMOUT	file:
19	tivdat.f	/^   19          FORMAT(80A1)$/;"	l	subroutine:TINIT2	file:
19	units.f	/^   19 CONTINUE$/;"	l	subroutine:MAKESI	file:
19	vistab.f	/^   19 FORMAT (\/' ERROR # 420; OPEN FAILED FOR FILE '\/A50)$/;"	l	subroutine:VTABDAT	file:
2	bdaryin.f	/^ 2          DEPTH(I,J,K)=DEP$/;"	l	subroutine:DOBDARYW	file:
2	comp.f	/^    2 IF (A(K).LT.AAA.OR.A(K).GT.ZZZ) RETURN$/;"	l	subroutine:GETNAM	file:
2	comp.f	/^    2 KODE(I,J)=0$/;"	l	subroutine:CPINIT	file:
2	comp.f	/^    2 NCHR=NCHR+1+IEQ$/;"	l	subroutine:CPEXP	file:
2	comp.f	/^    2 NSTG=-1$/;"	l	subroutine:GETSTG	file:
2	comp.f	/^    2 R(K)=R(I)-R(J)$/;"	l	subroutine:EXEC	file:
2	divide.f	/^    2 CONTINUE$/;"	l	subroutine:DIVIDE	file:
2	ebdary.f	/^    2 L1=1$/;"	l	subroutine:EGETVAL	file:
2	ebdary.f	/^   2  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
2	ebdary.f	/^   2  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
2	ebdary.f	/^   2  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
2	ebdary.f	/^   2  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
2	ebdary.f	/^   2  J=L$/;"	l	subroutine:ESETVNAM	file:
2	ebdary.f	/^   2  NBP = 4*JDIM*KDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
2	ebdary.f	/^   2  NBP = 4*JDIM*KDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
2	ebdary.f	/^   2  NBP = JDIM*KDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
2	ebdary.f	/^   2  NUMRGA=0$/;"	l	subroutine:EBDARY_BE	file:
2	ebdary.f	/^   2  NUMRGA=0$/;"	l	subroutine:EBDARY_DP	file:
2	elastic.f	/^    2 CONTINUE$/;"	l	subroutine:WELLSDP	file:
2	eprojections.f	/^    2          CONTINUE$/;"	l	subroutine:GETPROJECTORS	file:
2	erest.f	/^    2 CONTINUE$/;"	l	subroutine:ERSR8	file:
2	hypre.f	/^    2 FORMAT('Linear solver max. iterations =',T45,I5)$/;"	l	subroutine:HYPREI	file:
2	idata.f	/^    2 CONTINUE$/;"	l	subroutine:GETROCK	file:
2	idata.f	/^    2 CONTINUE$/;"	l	subroutine:SETGEOM	file:
2	idata.f	/^    2 FORMAT(\/' SIMULATION MODEL',T56,'BLACK OIL IMPLICIT')$/;"	l	subroutine:GETSCAL	file:
2	idata.f	/^    2 NEMOD(I)=0$/;"	l	subroutine:GETIDAT	file:
2	idata.f	/^    2 PRCMAP(NFRE-1+I)=-1$/;"	l	subroutine:MAKEMAP	file:
2	impfa.f	/^    2    CONTINUE$/;"	l	subroutine:DOROCK2	file:
2	impfa.f	/^    2 CONTINUE$/;"	l	subroutine:TRANC2	file:
2	impfa.f	/^    2 CONTINUE$/;"	l	subroutine:WELLIJK2	file:
2	impfa.f	/^    2 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
2	initial.f	/^    2 CONTINUE$/;"	l	subroutine:TRANC1	file:
2	ipars.f	/^    2    ACTTIM(2)=99.D15$/;"	l	subroutine:NEXTIME	file:
2	ipars.f	/^    2    FORMAT(A60)$/;"	l	subroutine:OPENIO	file:
2	ipars.f	/^    2 CONTINUE$/;"	l	subroutine:STEP	file:
2	ipars.f	/^    2 FORMAT(\/' KEYOUT ARRAY FOR IL1'\/(' K J',25I3))$/;"	l	subroutine:DEBUGW	file:
2	ipars.f	/^    2 MODACT=0$/;"	l	subroutine:IVPARM	file:
2	ipars.f	/^    2 RTIMIN=-1.D0$/;"	l	subroutine:IPARS	file:
2	iwell.f	/^    2 CONTINUE$/;"	l	subroutine:IWELLS	file:
2	iwell.f	/^    2 CONTINUE$/;"	l	subroutine:WELLCHECK	file:
2	iwell.f	/^    2 CONTINUE$/;"	l	subroutine:WELLIJK1	file:
2	iwell.f	/^    2 IF (I1.GT.35) RETURN$/;"	l	subroutine:PUTUTIT	file:
2	many.f	/^    2 CONTINUE$/;"	l	subroutine:COMMI	file:
2	many.f	/^    2 CONTINUE$/;"	l	subroutine:EXMLST	file:
2	many.f	/^    2 LMSG(I)=0$/;"	l	subroutine:GETMP	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:I2UPDATE2	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:I4UPDATE2	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:L2UPDATE2	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:L4UPDATE2	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:R4UPDATE2	file:
2	many.f	/^    2 NFE1=NFE2$/;"	l	subroutine:R8UPDATE2	file:
2	owell.f	/^    2 CONTINUE$/;"	l	subroutine:WELLDSK	file:
2	owell.f	/^    2 CONTINUE$/;"	l	subroutine:WELLPRT	file:
2	owell.f	/^    2 CONTINUE$/;"	l	subroutine:WELLPRTC	file:
2	prop.f	/^    2    CONTINUE$/;"	l	subroutine:DODEPTH	file:
2	prop.f	/^    2    CONTINUE$/;"	l	subroutine:DOROCK	file:
2	prop.f	/^    2 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)$/;"	l	subroutine:RELPERM3	file:
2	prop.f	/^    2 CONTINUE$/;"	l	subroutine:SETREL3	file:
2	prop.f	/^    2 ELEDEP(J,I)=DEP$/;"	l	subroutine:ROCKPROG	file:
2	prtout.f	/^    2       FORMAT(I3)$/;"	l	subroutine:MAKTIT	file:
2	prtout.f	/^    2 DO 3 I=50,1,-1$/;"	l	subroutine:PRTTIT	file:
2	prtout.f	/^    2 FORMAT(\/I10,4I15)$/;"	l	subroutine:PRTVEC4	file:
2	prtout.f	/^    2 NJIND=0$/;"	l	subroutine:GEAPRT	file:
2	putil.f	/^    2       AR(J)=A(J)$/;"	l	subroutine:MSGOUT	file:
2	putil.f	/^    2    CONTINUE$/;"	l	subroutine:ELEGET	file:
2	putil.f	/^    2    CONTINUE$/;"	l	subroutine:ELEPUT	file:
2	putil.f	/^    2    CONTINUE$/;"	l	subroutine:POLL	file:
2	putil.f	/^    2    CONTINUE$/;"	l	subroutine:WELDIST	file:
2	putil.f	/^    2    FORMAT(6I8)$/;"	l	subroutine:RRI4	file:
2	putil.f	/^    2    FORMAT(6I8)$/;"	l	subroutine:RRR4	file:
2	putil.f	/^    2    FORMAT(6I8)$/;"	l	subroutine:RRR8	file:
2	putil.f	/^    2    FORMAT(80A1)$/;"	l	subroutine:TYPEOUT	file:
2	putil.f	/^    2 CONTINUE$/;"	l	subroutine:CHECK	file:
2	putil.f	/^    2 CONTINUE$/;"	l	subroutine:WELLSHR	file:
2	putil.f	/^    2 CONTINUE$/;"	l	subroutine:WELOWN	file:
2	putil.f	/^    2 CONTINUE$/;"	l	subroutine:WELSUM	file:
2	putil.f	/^    2 J1=J2+1$/;"	l	subroutine:PROCOUT	file:
2	read1.f	/^    2    FORMAT(1X,79A1)$/;"	l	subroutine:PUTERR	file:
2	read1.f	/^    2    L2=J$/;"	l	subroutine:UNDEF	file:
2	read1.f	/^    2 CONTINUE$/;"	l	subroutine:GETBLK	file:
2	read1.f	/^    2 FORMAT(80A1)$/;"	l	subroutine:TBLKOUT	file:
2	read1.f	/^    2 J=L$/;"	l	subroutine:GRDAIN	file:
2	read1.f	/^    2 LAST=0$/;"	l	subroutine:READER	file:
2	read1.f	/^    2 NUMRGA=0$/;"	l	subroutine:GETGRDA	file:
2	read1.f	/^    2 SGN=.FALSE.$/;"	l	subroutine:GETNUM	file:
2	read2.f	/^    2 L1=1$/;"	l	subroutine:GETVAL	file:
2	read3.f	/^    2 L1=1$/;"	l	subroutine:GETVAL2	file:
2	restart.f	/^    2       FORMAT(6I8)$/;"	l	subroutine:RGEAIN	file:
2	restart.f	/^    2    ARY(I,J,K,MEIN)=RBUFR4(N)$/;"	l	subroutine:RSINR4	file:
2	restart.f	/^    2    ARY(I,J,K,MEIN)=RBUFR8(N)$/;"	l	subroutine:RSINR8	file:
2	restart.f	/^    2    CONTINUE$/;"	l	subroutine:RSINL4	file:
2	restart.f	/^    2    IARY(I,J,K,MEIN)=RBUFI4(N)$/;"	l	subroutine:RSINI4	file:
2	restart.f	/^    2 CALL CALLWORK(RSR8,NARG)$/;"	l	subroutine:RGEAOUT	file:
2	restart.f	/^    2 CONTINUE$/;"	l	subroutine:RSI4	file:
2	restart.f	/^    2 CONTINUE$/;"	l	subroutine:RSL4	file:
2	restart.f	/^    2 CONTINUE$/;"	l	subroutine:RSR4	file:
2	restart.f	/^    2 CONTINUE$/;"	l	subroutine:RSR8	file:
2	restart.f	/^    2 M2=I$/;"	l	subroutine:RESOUT	file:
2	restart.f	/^    2 NERR=NERIN$/;"	l	subroutine:RESIN	file:
2	stdout.f	/^    2    FORMAT(' TIME STEP NUMBER =',T45,I12)$/;"	l	subroutine:STDOUT	file:
2	stdout.f	/^    2 CONTINUE$/;"	l	subroutine:OPENBUG	file:
2	table.f	/^    2 CONTINUE$/;"	l	subroutine:PRTSPL	file:
2	table.f	/^    2 CONTINUE$/;"	l	subroutine:SPLINE	file:
2	table.f	/^    2 IF (A(I,I).EQ.0.0) GO TO 1$/;"	l	subroutine:LINSOV	file:
2	table.f	/^    2 NENTY=I$/;"	l	subroutine:LOOKUP	file:
2	table.f	/^    2 SGN=.FALSE.$/;"	l	subroutine:NUMBR	file:
2	table.f	/^    2 UNTI(2)=' '$/;"	l	subroutine:TABUNT	file:
2	table.f	/^    2 XYNAM1(I,1)=XNAM(I)$/;"	l	subroutine:TABLE	file:
2	tbdary.f	/^    2 CONTINUE$/;"	l	subroutine:TBDPROPW	file:
2	tdata.f	/^    2    FORMAT(' STOCK TANK WATER DENSITY (STDENW)',T48,F12.3,1X,A20)$/;"	l	subroutine:SETEXU	file:
2	tdata.f	/^    2    FORMAT(\/' ERROR #',I4,' - ',A50\/' CONVERTING FROM ',A20,$/;"	l	subroutine:EXTUIN	file:
2	tdata.f	/^    2 FORMAT(' TARGET TIME STEP SIZE (DELTIM) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
2	timer.f	/^    2 CONTINUE$/;"	l	subroutine:TIMOUT	file:
2	tisdat.f	/^    2 FORMAT(' CONVERGENCE TOLERANCE (CVTOL)',T49,G11.4)$/;"	l	subroutine:TISDAT	file:
2	tisdat.f	/^   2     FORMAT (\/' ERROR TIADAT: INVALID YZ PERMEABILITY')$/;"	l	subroutine:TIADAT	file:
2	tivdat.f	/^    2 CONTINUE$/;"	l	subroutine:TINIT2	file:
2	tivdat.f	/^    2 CONTINUE$/;"	l	subroutine:TIVDAT	file:
2	trest.f	/^    2       CONTINUE$/;"	l	subroutine:TRESTI	file:
2	trest.f	/^    2       FORMAT(5G23.16)$/;"	l	subroutine:TRESTO	file:
2	tstep.f	/^    2 IF (BUGKEY(6).AND.NEWT.LT.3) THEN$/;"	l	subroutine:TSTEP3	file:
2	twell.f	/^    2       CALL WELLOUT (N,7,WELIPC(3,N)*CVMPRES)$/;"	l	subroutine:TWELLOUTPUT	file:
2	twell.f	/^    2       QFLOC(IW)=PQ$/;"	l	subroutine:TWELL	file:
2	twell.f	/^    2 CONTINUE$/;"	l	subroutine:TWELSUMS	file:
2	twell.f	/^    2 IF (DOBHP) P=(Q-W5*D+W6)\/W4$/;"	l	subroutine:WBDSP	file:
2	units.f	/^    2 CONTINUE$/;"	l	subroutine:INSTR	file:
2	units.f	/^    2 NO=0$/;"	l	subroutine:CONVRT	file:
2	units.f	/^    2 UTL1(J)=UIN(I)$/;"	l	subroutine:MAKESI	file:
2	visgrid.f	/^    2 WRITE(NFOUT,3) (GF1(I),I=1,J)$/;"	l	subroutine:VISGRID	file:
2	visout.f	/^    2 MODACT=0$/;"	l	subroutine:GET_VISVARS	file:
2	visout.f	/^    2 MODACT=0$/;"	l	subroutine:VISOUT	file:
2	visout.f	/^ 2    CONTINUE$/;"	l	subroutine:PERMCPY	file:
2	vistab.f	/^    2    CONTINUE$/;"	l	subroutine:CPYLAYOUT	file:
2	vistab.f	/^    2 FORMAT(' I=',I4,', J=1, K=1, F=POINT, C=BLACK,',$/;"	l	subroutine:VTABFIT	file:
2	vistab.f	/^    2 TPPLT1(J)='.'$/;"	l	subroutine:VTABINIT	file:
2	vistab.f	/^    2 ZONAM1(J+1)='D'$/;"	l	subroutine:VTABDAT	file:
20	comp.f	/^   20 A(I+IC-1)=BLK$/;"	l	subroutine:CPEXP	file:
20	comp.f	/^   20 CONTINUE$/;"	l	subroutine:CPPRG	file:
20	divide.f	/^   20       CONTINUE$/;"	l	subroutine:DIVIDE	file:
20	ebdary.f	/^   20 NUMRET=NUMRET+1$/;"	l	subroutine:EGETVAL	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EBDARY_BE_WRK	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EBDARY_WRK_BE	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EDISP_BE_WRK	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EDISP_WRK_BE	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EFACE_BE_WRK	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EFACE_WRK_BE	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
20	ebdary.f	/^  20  CONTINUE$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
20	fcns.f	/^   20 continue$/;"	l	subroutine:QuadG27	file:
20	hypre.f	/^   20 CONTINUE$/;"	l	subroutine:HYPRE_EVFEM_FILL	file:
20	hypre.f	/^   20 CONTINUE$/;"	l	subroutine:HYPRE_EVFEM_SOLN	file:
20	idata.f	/^   20    FORMAT(' DETAILED SPLINE OUTPUT (SPLINEOUT)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
20	idata.f	/^   20    FORMAT(\/' X PERMEABILITY COPIED TO Y PERMEABILITY FOR',$/;"	l	subroutine:GETROCK	file:
20	ipars.f	/^   20                  FORMAT(1P,' STEP',I6,' TIME',G11.4,' NEWT',I3,$/;"	l	subroutine:STEP	file:
20	iwell.f	/^   20 MODWEL(I)=FMODBLK(NBWELI(1,I))$/;"	l	subroutine:IWELLS	file:
20	pre_prcss0.f90	/^20 i=j$/;"	l	subroutine:isort	file:
20	prop.f	/^   20 IF (RO.LT.1.D-6) RO=0.D0$/;"	l	subroutine:RELPERM3	file:
20	prtout.f	/^   20    FORMAT('   I \/ J =',I6,5I12)$/;"	l	subroutine:GEAPRT	file:
20	putil.f	/^   20 NM(N)=0$/;"	l	subroutine:PROCOUT	file:
20	read1.f	/^   20 IF (NFIL.EQ.INCFIL) THEN$/;"	l	subroutine:READER	file:
20	read2.f	/^   20 NUMRET=NUMRET+1$/;"	l	subroutine:GETVAL	file:
20	read3.f	/^   20 NUMRET=NUMRET+1$/;"	l	subroutine:GETVAL2	file:
20	table.f	/^   20          FORMAT (\/' ERROR # 414; EXCESS CONSTRAINTS')$/;"	l	subroutine:TABLE	file:
20	table.f	/^   20 CONTINUE$/;"	l	subroutine:SPLINE	file:
20	tivdat.f	/^   20    FORMAT(' ')$/;"	l	subroutine:TINIT2	file:
20	units.f	/^   20    KODRET=135$/;"	l	subroutine:MAKESI	file:
200	buildmpfa.f	/^ 200  CONTINUE$/;"	l	subroutine:MAPTENSORQUAD	file:
200	comp.f	/^  200 DO 202 I=1,NKODU$/;"	l	subroutine:CPPRG	file:
200	divide.f	/^  200 DO 201 K=1,NZ$/;"	l	subroutine:DIVIDE	file:
200	divide.f	/^ 200  RETURN$/;"	l	subroutine:PRINT_VM_INFO	file:
200	fcns.f	/^  200 continue$/;"	l	subroutine:CWCprint	file:
200	fcns.f	/^  200 continue$/;"	l	subroutine:CWEPRINT	file:
200	fcns.f	/^ 200  continue$/;"	l	subroutine:JacMat	file:
200	impfa.f	/^ 200     CONTINUE$/;"	l	subroutine:calcFaces	file:
200	impfa.f	/^ 200     continue$/;"	l	subroutine:updateFaces	file:
200	impfa.f	/^ 200    continue$/;"	l	subroutine:calcVOLFACEdim	file:
200	ipars.f	/^  200     MODACT=0$/;"	l	subroutine:STEP	file:
200	pre_prcss0.f90	/^200 CONTINUE$/;"	l	subroutine:PRE_PRCSS2	file:
200	tbdary.f	/^ 200  CONTINUE$/;"	l	subroutine:calcbdry	file:
200	tprop.f	/^ 200  CONTINUE$/;"	l	subroutine:TTRAN	file:
2000	idata.f	/^ 2000      FORMAT(' PAYZONE',I2,',COMPOSITIONAL')$/;"	l	subroutine:SETGEOMNEW	file:
201	comp.f	/^  201    CONTINUE$/;"	l	subroutine:CPPRG	file:
201	divide.f	/^  201 CONTINUE$/;"	l	subroutine:DIVIDE	file:
201	idata.f	/^ 201  CONTINUE$/;"	l	subroutine:SETGEOMNEW	file:
201	twell.f	/^  201    CONTINUE$/;"	l	subroutine:TWELL	file:
202	comp.f	/^  202 CONTINUE$/;"	l	subroutine:CPPRG	file:
202	twell.f	/^  202    IF ((QFLOC(IW).LE.0.D0).AND.WELL_ALLOW_SHUTOFF(IW)) THEN$/;"	l	subroutine:TWELL	file:
21	comp.f	/^   21 IF (KVDAT(4,NV).LT.-1000) THEN$/;"	l	subroutine:CPEXP	file:
21	comp.f	/^   21 NN=KVDAT(4,I)$/;"	l	subroutine:EXEC	file:
21	ebdary.f	/^   21 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:EGETVAL	file:
21	idata.f	/^   21    FORMAT(' DETAILED SPLINE OUTPUT (SPLINEOUT)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
21	idata.f	/^   21    FORMAT(\/' Y PERMEABILITY COPIED TO Z PERMEABILITY FOR',$/;"	l	subroutine:GETROCK	file:
21	iwell.f	/^   21    FORMAT(\/' WELL HISTORY OUTPUT KEY (WELLOUTKEY)',T49,I10)$/;"	l	subroutine:IWELLS	file:
21	many.f	/^   21       DO 24 I=1,N$/;"	l	subroutine:GETMP	file:
21	many.f	/^   21 CONTINUE$/;"	l	subroutine:COMMI	file:
21	prtout.f	/^   21    N=N+JP$/;"	l	subroutine:GEAPRT	file:
21	putil.f	/^   21 CONTINUE$/;"	l	subroutine:PROCOUT	file:
21	read1.f	/^   21 READ (NFIL,4,END=13) C$/;"	l	subroutine:READER	file:
21	read2.f	/^   21 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:GETVAL	file:
21	read3.f	/^   21 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:GETVAL2	file:
21	restart.f	/^   21          FORMAT(8G15.8)$/;"	l	subroutine:RGEAIN	file:
21	restart.f	/^   21       FORMAT(5G23.16)$/;"	l	subroutine:RESIN	file:
21	table.f	/^   21       FORMAT (\/' ERROR # 415; EXCESS SPLINE NODES')$/;"	l	subroutine:TABLE	file:
21	table.f	/^   21 CONTINUE$/;"	l	subroutine:SPLINE	file:
21	tivdat.f	/^   21    CONTINUE$/;"	l	subroutine:TINIT2	file:
213	idata.f	/^ 213      CONTINUE$/;"	l	subroutine:GETSCAL	file:
213	many.f	/^  213 NERR=NERR+1$/;"	l	subroutine:COMMI	file:
214	many.f	/^  214 FORMAT (\/' ERROR # 201; TOO MANY MESSAGE TARGETS, PROC',I5)$/;"	l	subroutine:COMMI	file:
22	comp.f	/^   22    CONTINUE$/;"	l	subroutine:CPEXP	file:
22	comp.f	/^   22 NN=KVDAT(4,I)$/;"	l	subroutine:EXEC	file:
22	ebdary.f	/^   22 IF (LFILL.EQ.0) THEN$/;"	l	subroutine:EGETVAL	file:
22	idata.f	/^   22    FORMAT(' DETAILED GEOMETRY OUTPUT (GEOMOUT)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
22	iwell.f	/^   22    FORMAT(\/' WELL HISTORY FILE NAME (WELLFILE)',T49,A30)$/;"	l	subroutine:IWELLS	file:
22	many.f	/^   22       DO 25 I=1,N$/;"	l	subroutine:GETMP	file:
22	many.f	/^   22 CONTINUE$/;"	l	subroutine:COMMI	file:
22	prtout.f	/^   22    FORMAT(I5,2X,6G12.4)$/;"	l	subroutine:GEAPRT	file:
22	putil.f	/^   22    CONTINUE$/;"	l	subroutine:PROCOUT	file:
22	read1.f	/^   22 CONTINUE$/;"	l	subroutine:READER	file:
22	read2.f	/^   22 IF (LFILL.EQ.0) THEN$/;"	l	subroutine:GETVAL	file:
22	read3.f	/^   22 IF (LFILL.EQ.0) THEN$/;"	l	subroutine:GETVAL2	file:
22	restart.f	/^   22          FORMAT(5G23.16)$/;"	l	subroutine:RGEAIN	file:
22	restart.f	/^   22 ACTTIM(I)=RBUFR8(I-1)$/;"	l	subroutine:RESIN	file:
22	table.f	/^   22 DLB1=DLB1+BB(I)*DLB2$/;"	l	subroutine:SPLINE	file:
22	table.f	/^   22 FORMAT (\/' ERROR # 416; UNEXPECTED NUMBER ',G15.8)$/;"	l	subroutine:TABLE	file:
22	tivdat.f	/^   22          CONTINUE$/;"	l	subroutine:TINIT2	file:
221	twell.f	/^  221       QRESID(IW)=0.D0$/;"	l	subroutine:TWELL	file:
222	twell.f	/^  222       ELERATE(LL,IW)=DUB3$/;"	l	subroutine:TWELL	file:
23	comp.f	/^   23 CONTINUE$/;"	l	subroutine:CPEXP	file:
23	comp.f	/^   23 N=N+1$/;"	l	subroutine:CPPRG	file:
23	comp.f	/^   23 NN=KVDAT(4,K)$/;"	l	subroutine:EXEC	file:
23	ebdary.f	/^   23 IF (NUMREP.GT.0) THEN$/;"	l	subroutine:EGETVAL	file:
23	idata.f	/^   23    FORMAT(' DETAILED GEOMETRY OUTPUT (GEOMOUT)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
23	iwell.f	/^   23    FORMAT(\/' WELL CUMULATIVE HISTORY FILE NAME (WFCUM)',T49,A30)$/;"	l	subroutine:IWELLS	file:
23	many.f	/^   23       DO 26 I=1,N$/;"	l	subroutine:GETMP	file:
23	many.f	/^   23    CONTINUE$/;"	l	subroutine:COMMI	file:
23	prtout.f	/^   23    FORMAT('   I \/ J =',12I5)$/;"	l	subroutine:GEAPRT	file:
23	putil.f	/^   23    CONTINUE$/;"	l	subroutine:PROCOUT	file:
23	read1.f	/^   23 IF (LAST+K.GE.MAXCHR) GO TO 25$/;"	l	subroutine:READER	file:
23	read2.f	/^   23 IF (NUMREP.GT.0) THEN$/;"	l	subroutine:GETVAL	file:
23	read3.f	/^   23 IF (NUMREP.GT.0) THEN$/;"	l	subroutine:GETVAL2	file:
23	restart.f	/^   23          FORMAT(12I9)$/;"	l	subroutine:RGEAIN	file:
23	restart.f	/^   23 BALANCE(I,J,K)=0.D0$/;"	l	subroutine:RESIN	file:
23	table.f	/^   23    DLB1=DLB1+BB(J+NP)*(DLB2**NDEG)$/;"	l	subroutine:SPLINE	file:
231	twell.f	/^  231    IF ((QFLOC(IW).GE.0.D0).AND.WELL_ALLOW_SHUTOFF(IW)) THEN$/;"	l	subroutine:TWELL	file:
232	twell.f	/^  232    IF ((QFLOC(IW).GE.0.D0).AND.WELL_ALLOW_SHUTOFF(IW)) THEN$/;"	l	subroutine:TWELL	file:
24	comp.f	/^   24    N=IREG(NL)$/;"	l	subroutine:CPEXP	file:
24	comp.f	/^   24 CONTINUE$/;"	l	subroutine:CPPRG	file:
24	comp.f	/^   24 NN=KVDAT(4,K)$/;"	l	subroutine:EXEC	file:
24	ebdary.f	/^   24 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:EGETVAL	file:
24	idata.f	/^   24    FORMAT(\/' Y PERMEABILITY COPIED TO X PERMEABILITY FOR',$/;"	l	subroutine:GETROCK	file:
24	idata.f	/^   24 ACTTIM(I)=99.D15$/;"	l	subroutine:GETSCAL	file:
24	ipars.f	/^   24                  FORMAT(1P,' STEP',I8,' TIME',G11.4,' NEWT',I3,$/;"	l	subroutine:STEP	file:
24	many.f	/^   24          CONTINUE$/;"	l	subroutine:COMMI	file:
24	many.f	/^   24       PBUF4B(I)=PBUF4A(I)$/;"	l	subroutine:GETMP	file:
24	prtout.f	/^   24    N=N+JP$/;"	l	subroutine:GEAPRT	file:
24	putil.f	/^   24    CONTINUE$/;"	l	subroutine:PROCOUT	file:
24	read1.f	/^   24 LAST=LAST+1$/;"	l	subroutine:READER	file:
24	read2.f	/^   24 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:GETVAL	file:
24	read3.f	/^   24 IF (NUMREP.EQ.0) LFILL=L$/;"	l	subroutine:GETVAL2	file:
24	table.f	/^   24 DLB3=DLB3+(DLB1-Y)**2$/;"	l	subroutine:SPLINE	file:
25	comp.f	/^   25    I=I+1$/;"	l	subroutine:CPEXP	file:
25	comp.f	/^   25 KERR=0$/;"	l	subroutine:EXEC	file:
25	comp.f	/^   25 NRU2=NREGL+1$/;"	l	subroutine:CPPRG	file:
25	idata.f	/^   25 FORMAT(' NUMBER OF PROCESSORS',T50,I7)$/;"	l	subroutine:GETSCAL	file:
25	idata.f	/^   25 KSAP(N,L)=1+(K2AP(N,L)-K1AP(N,L))\/6$/;"	l	subroutine:SETGEOM	file:
25	idata.f	/^   25 KSAP(N,L)=1+(K2AP(N,L)-K1AP(N,L))\/6$/;"	l	subroutine:SETGEOMNEW	file:
25	many.f	/^   25       PBUF8B(I)=PBUF8A(I)$/;"	l	subroutine:GETMP	file:
25	many.f	/^   25 CONTINUE$/;"	l	subroutine:COMMI	file:
25	prtout.f	/^   25    FORMAT(I5,5X,12I5)$/;"	l	subroutine:GEAPRT	file:
25	putil.f	/^   25 FORMAT(\/' ***************  GRID ELEMENTS SENT DURING UPDATE',$/;"	l	subroutine:PROCOUT	file:
25	read1.f	/^   25 E='BLOCK DATA INPUT NOT TERMINATED'$/;"	l	subroutine:READER	file:
25	restart.f	/^   25          FORMAT(55I2)$/;"	l	subroutine:RGEAIN	file:
25	table.f	/^   25    BBB(I)=B(I)$/;"	l	subroutine:SPLINE	file:
26	comp.f	/^   26 CONTINUE$/;"	l	subroutine:CPEXP	file:
26	comp.f	/^   26 NI=I$/;"	l	subroutine:EXEC	file:
26	ebdary.f	/^   26 IF (NUMREP.GT.4) THEN$/;"	l	subroutine:EGETVAL	file:
26	idata.f	/^   26    FORMAT(' SINGLE PROCESSOR DEBUG OUTPUT (DEBUGS)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
26	many.f	/^   26       IPBUF4B(I)=IPBUF4A(I)$/;"	l	subroutine:GETMP	file:
26	many.f	/^   26    CONTINUE$/;"	l	subroutine:COMMI	file:
26	putil.f	/^   26 WRITE (NFOUT,27) N-1,NM(N)$/;"	l	subroutine:PROCOUT	file:
26	read2.f	/^   26 IF (NUMREP.GT.4) THEN$/;"	l	subroutine:GETVAL	file:
26	read3.f	/^   26 IF (NUMREP.GT.4) THEN$/;"	l	subroutine:GETVAL2	file:
26	table.f	/^   26    BCF(I)=BB(I)$/;"	l	subroutine:SPLINE	file:
26	tdata.f	/^   26       FORMAT(' SINGLE PROCESSOR DEBUG (DEBUGS) =',T56,'YES')$/;"	l	subroutine:GETTIMD	file:
27	comp.f	/^   27 IF (R(J).EQ.0.D0) NI=I-1$/;"	l	subroutine:EXEC	file:
27	ebdary.f	/^   27 IF (SKIPIT) GO TO 20$/;"	l	subroutine:EGETVAL	file:
27	idata.f	/^   27    FORMAT(' MULTI-PROCESSOR DEBUG OUTPUT (DEBUGM)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
27	iwell.f	/^   27 FORMAT (\/' ERROR # 431; OPEN FILE FAILED FOR '\/A30)$/;"	l	subroutine:IWELLS	file:
27	many.f	/^   27          CONTINUE$/;"	l	subroutine:COMMI	file:
27	many.f	/^   27 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:GETMP	file:
27	putil.f	/^   27 FORMAT(I6,6X,I7)$/;"	l	subroutine:PROCOUT	file:
27	read2.f	/^   27 IF (SKIPIT) GO TO 20$/;"	l	subroutine:GETVAL	file:
27	read3.f	/^   27 IF (SKIPIT) GO TO 20$/;"	l	subroutine:GETVAL2	file:
27	table.f	/^   27    BB(I)=BCF(I)$/;"	l	subroutine:SPLINE	file:
27	tdata.f	/^   27       FORMAT(' SINGLE PROCESSOR DEBUG (DEBUGS) =',T56,'NO')$/;"	l	subroutine:GETTIMD	file:
28	comp.f	/^   28 L1DO=.TRUE.$/;"	l	subroutine:EXEC	file:
28	divide.f	/^   28 CONTINUE$/;"	l	subroutine:DIVIDE	file:
28	ebdary.f	/^   28 IF (SKIPIT) GO TO 20$/;"	l	subroutine:EGETVAL	file:
28	idata.f	/^   28       FORMAT(5X,'NORMALIZED GRAVITY VECTOR (DOWN)',5X,3F9.6)$/;"	l	subroutine:GETGAPI	file:
28	iwell.f	/^   28 FORMAT (\/' ERROR # 431; OPEN FILE FAILED FOR '\/A30)$/;"	l	subroutine:IWELLS	file:
28	putil.f	/^   28 FORMAT('   TOTAL',4X,I7)$/;"	l	subroutine:PROCOUT	file:
28	read2.f	/^   28 IF (SKIPIT) GO TO 20$/;"	l	subroutine:GETVAL	file:
28	read3.f	/^   28 IF (SKIPIT) GO TO 20$/;"	l	subroutine:GETVAL2	file:
28	table.f	/^   28 DO 14 I=1,NP$/;"	l	subroutine:SPLINE	file:
28	tdata.f	/^   28       FORMAT(' MULTI-PROCESSOR DEBUG (DEBUGM) =',T56,'YES')$/;"	l	subroutine:GETTIMD	file:
29	comp.f	/^   29 GO TO 301$/;"	l	subroutine:EXEC	file:
29	divide.f	/^   29 MODPROC(I,J)=.FALSE.$/;"	l	subroutine:DIVIDE	file:
29	ebdary.f	/^   29    CONTINUE$/;"	l	subroutine:EGETVAL	file:
29	idata.f	/^   29    FORMAT(' SQUARE PROCESSOR ASSIGNMENT (METHOD)')$/;"	l	subroutine:GETSCAL	file:
29	iwell.f	/^   29 CONTINUE$/;"	l	subroutine:IWELLS	file:
29	read2.f	/^   29    CONTINUE$/;"	l	subroutine:GETVAL	file:
29	read3.f	/^   29    CONTINUE$/;"	l	subroutine:GETVAL2	file:
29	tdata.f	/^   29       FORMAT(' MULTI-PROCESSOR DEBUG (DEBUGM) =',T56,'NO')$/;"	l	subroutine:GETTIMD	file:
3	bdaryin.f	/^ 3             FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')$/;"	l	subroutine:DOBDARYW	file:
3	comp.f	/^    3    CONTINUE$/;"	l	subroutine:CPEXP	file:
3	comp.f	/^    3 CARRAY(I)=AA(N)$/;"	l	subroutine:GETSTG	file:
3	comp.f	/^    3 N2=N$/;"	l	subroutine:NUMGET	file:
3	comp.f	/^    3 NAMS1(J)=A(I)$/;"	l	subroutine:GETNAM	file:
3	comp.f	/^    3 R(K)=R(I)*R(J)$/;"	l	subroutine:EXEC	file:
3	divide.f	/^    3 IF (STP0) THEN$/;"	l	subroutine:DIVIDE	file:
3	ebdary.f	/^    3 CONTINUE$/;"	l	subroutine:EGETVAL	file:
3	ebdary.f	/^   3  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
3	ebdary.f	/^   3  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
3	ebdary.f	/^   3  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
3	ebdary.f	/^   3  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
3	ebdary.f	/^   3  FORMAT('\/ERR(PE100): ONLY REAL*8 TYPE OF BOUNDARY DATA ALLOWED')$/;"	l	subroutine:EBDARY_BE	file:
3	ebdary.f	/^   3  FORMAT('\/ERR(PE100): ONLY REAL*8 TYPE OF BOUNDARY DATA ALLOWED')$/;"	l	subroutine:EBDARY_DP	file:
3	ebdary.f	/^   3  NBP = 4*IDIM*KDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
3	ebdary.f	/^   3  NBP = 4*IDIM*KDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
3	ebdary.f	/^   3  NBP = IDIM*KDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
3	elastic.f	/^    3 CONTINUE$/;"	l	subroutine:SDPWELL	file:
3	elastic.f	/^    3 CONTINUE$/;"	l	subroutine:WELLSDP	file:
3	erest.f	/^    3    RBUFR8(N)=ARY(I,J,K,I4UTIL)$/;"	l	subroutine:ERSR8	file:
3	hypre.f	/^    3 FORMAT('Hypres solver and precond. selections  =',T45,I5)$/;"	l	subroutine:HYPREI	file:
3	idata.f	/^    3    CONTINUE$/;"	l	subroutine:GETGAPI	file:
3	idata.f	/^    3    CONTINUE$/;"	l	subroutine:MAKEMAP	file:
3	idata.f	/^    3    FORMAT (\/' ERROR 501; NO GRID BLOCKS DEFINED')$/;"	l	subroutine:SETGEOM	file:
3	idata.f	/^    3    FORMAT (\/' ERROR 501; NO GRID BLOCKS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
3	idata.f	/^    3 D(I)=NEMOD(I)$/;"	l	subroutine:GETIDAT	file:
3	idata.f	/^    3 FORMAT(\/' SIMULATION MODEL',T56,'COMPOSITIONAL')$/;"	l	subroutine:GETSCAL	file:
3	idata.f	/^    3 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
3	impfa.f	/^    3       CONTINUE$/;"	l	subroutine:DOROCK2	file:
3	impfa.f	/^    3 CONTINUE$/;"	l	subroutine:WELLIJK2	file:
3	impfa.f	/^    3 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
3	impfa.f	/^    3 DUM1=DUM2$/;"	l	subroutine:TRANC2	file:
3	initial.f	/^    3 DUM1=DUM2$/;"	l	subroutine:TRANC1	file:
3	ipars.f	/^    3    FORMAT(' ENTER OUTPUT FILE NAME: ')$/;"	l	subroutine:OPENIO	file:
3	ipars.f	/^    3    FORMAT(A9)$/;"	l	subroutine:IPARS	file:
3	ipars.f	/^    3 FORMAT(I3,',',25I3\/(4X,25I3))$/;"	l	subroutine:DEBUGW	file:
3	ipars.f	/^    3 IF (NUMPRC.GT.1) THEN$/;"	l	subroutine:NEXTIME	file:
3	ipars.f	/^    3 NCUT=NCUT+1$/;"	l	subroutine:STEP	file:
3	iwell.f	/^    3 CONTINUE$/;"	l	subroutine:IWELLS	file:
3	iwell.f	/^    3 CONTINUE$/;"	l	subroutine:WELLCHECK	file:
3	iwell.f	/^    3 CONTINUE$/;"	l	subroutine:WELLIJK1	file:
3	iwell.f	/^    3 TIT(I1)=EXU(I)$/;"	l	subroutine:PUTUTIT	file:
3	many.f	/^    3    CONTINUE$/;"	l	subroutine:COMMI	file:
3	many.f	/^    3    IF (IERR.GT.0) THEN$/;"	l	subroutine:GETMP	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:I2UPDATE2	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:I4UPDATE2	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:L2UPDATE2	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:L4UPDATE2	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:R4UPDATE2	file:
3	many.f	/^    3 CONTINUE$/;"	l	subroutine:R8UPDATE2	file:
3	many.f	/^    3 MSGRCVL(NM,NT,NB)=LSTIND$/;"	l	subroutine:EXMLST	file:
3	owell.f	/^    3    CONTINUE$/;"	l	subroutine:WELLDSK	file:
3	owell.f	/^    3    CONTINUE$/;"	l	subroutine:WELLPRT	file:
3	owell.f	/^    3    CONTINUE$/;"	l	subroutine:WELLPRTC	file:
3	prop.f	/^    3       CONTINUE$/;"	l	subroutine:DODEPTH	file:
3	prop.f	/^    3       CONTINUE$/;"	l	subroutine:DOROCK	file:
3	prop.f	/^    3    FORMAT (\/' ERROR 509; INSUFFICIENT RELATIVE PERMEABILITY DATA',$/;"	l	subroutine:SETREL3	file:
3	prop.f	/^    3    FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')$/;"	l	subroutine:ROCKPROG	file:
3	prop.f	/^    3 CALL LOOKUP (NKOSW(KR),SW,RO,ROSW)$/;"	l	subroutine:RELPERM3	file:
3	prtout.f	/^    3          FORMAT(I4)$/;"	l	subroutine:MAKTIT	file:
3	prtout.f	/^    3 CONTINUE$/;"	l	subroutine:PRTTIT	file:
3	prtout.f	/^    3 FORMAT(5G15.7)$/;"	l	subroutine:PRTVEC4	file:
3	prtout.f	/^    3 NJIND=NJIND+1$/;"	l	subroutine:GEAPRT	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:ELEGET	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:ELEPUT	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:MAXIT	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:MAXITI	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:MINIT	file:
3	putil.f	/^    3       CONTINUE$/;"	l	subroutine:MINITI	file:
3	putil.f	/^    3       FORMAT(80A1)$/;"	l	subroutine:MSGOUT	file:
3	putil.f	/^    3       VEC(J)=VEC(J)+VTERM(J)$/;"	l	subroutine:SUMIT	file:
3	putil.f	/^    3    CONTINUE$/;"	l	subroutine:TYPEOUT	file:
3	putil.f	/^    3    FORMAT(12I9)$/;"	l	subroutine:RRI4	file:
3	putil.f	/^    3    FORMAT(5G23.16)$/;"	l	subroutine:RRR8	file:
3	putil.f	/^    3    FORMAT(8G15.8)$/;"	l	subroutine:RRR4	file:
3	putil.f	/^    3    VEC(J)=VEC(J)+VTERM(J)$/;"	l	subroutine:WELSUM	file:
3	putil.f	/^    3 CONTINUE$/;"	l	subroutine:WELOWN	file:
3	putil.f	/^    3 FORMAT(\/'  K J',99I5)$/;"	l	subroutine:PROCOUT	file:
3	putil.f	/^    3 LOCWEL(J,KK,NWS)=LW(J,K)$/;"	l	subroutine:WELLSHR	file:
3	read1.f	/^    3       LIN(I)=BLK$/;"	l	subroutine:PUTERR	file:
3	read1.f	/^    3    CONTINUE$/;"	l	subroutine:GRDAIN	file:
3	read1.f	/^    3    J2=L2$/;"	l	subroutine:UNDEF	file:
3	read1.f	/^    3 IF (A(J).EQ.POINT) THEN$/;"	l	subroutine:GETNUM	file:
3	read1.f	/^    3 LAST=LAST+1$/;"	l	subroutine:READER	file:
3	read2.f	/^    3 CONTINUE$/;"	l	subroutine:GETVAL	file:
3	read3.f	/^    3 CONTINUE$/;"	l	subroutine:GETVAL2	file:
3	restart.f	/^    3    CONTINUE$/;"	l	subroutine:RSL4	file:
3	restart.f	/^    3    RBUFI4(N)=IARY(I,J,K,I4UTIL)$/;"	l	subroutine:RSI4	file:
3	restart.f	/^    3    RBUFR4(N)=ARY(I,J,K,I4UTIL)$/;"	l	subroutine:RSR4	file:
3	restart.f	/^    3    RBUFR8(N)=ARY(I,J,K,I4UTIL)$/;"	l	subroutine:RSR8	file:
3	restart.f	/^    3 CALL CALLWORK(RSI4,NARG)$/;"	l	subroutine:RGEAOUT	file:
3	restart.f	/^    3 CALL RGEAIN(NERR)$/;"	l	subroutine:RESIN	file:
3	restart.f	/^    3 M=M2-M1+1$/;"	l	subroutine:RESOUT	file:
3	stdout.f	/^    3    CONTINUE$/;"	l	subroutine:STDOUT	file:
3	table.f	/^    3 A(J,K)=DUM$/;"	l	subroutine:LINSOV	file:
3	table.f	/^    3 CONTINUE$/;"	l	subroutine:TABUNT	file:
3	table.f	/^    3 DLB1=DLB1*X$/;"	l	subroutine:SPLINE	file:
3	table.f	/^    3 DO 4 I=J,60$/;"	l	subroutine:TABLE	file:
3	table.f	/^    3 IF (A(J).EQ.POINT) THEN$/;"	l	subroutine:NUMBR	file:
3	table.f	/^    3 INDEXL(NTAB)=NENTY$/;"	l	subroutine:LOOKUP	file:
3	table.f	/^    3 N1=N2+2$/;"	l	subroutine:PRTTAB	file:
3	tdata.f	/^    3    FORMAT(' STOCK TANK GAS DENSITY (STDENG)',T48,F12.5,1X,A20)$/;"	l	subroutine:SETEXU	file:
3	tdata.f	/^    3 FORMAT(' TIME STEP MULTIPLIER (DTIMMUL) =',T45,F12.3)$/;"	l	subroutine:GETTIMD	file:
3	timer.f	/^    3 WRITE (NFOUT,*)$/;"	l	subroutine:TIMOUT	file:
3	tisdat.f	/^    3 FORMAT(' INITIAL FLUID PRESSURE (PINIT)',T50,F10.3,1X,A20\/$/;"	l	subroutine:TISDAT	file:
3	tisdat.f	/^   3     FORMAT (\/' ERROR TIADAT: INVALID XZ PERMEABILITY')$/;"	l	subroutine:TIADAT	file:
3	tprop.f	/^    3  FORMAT (' COF(I,J,K,',I2,')',T22,G16.7)$/;"	l	subroutine:TBUGOUT	file:
3	trest.f	/^    3       CONTINUE$/;"	l	subroutine:TRESTI	file:
3	trest.f	/^    3       CONTINUE$/;"	l	subroutine:TRESTO	file:
3	units.f	/^    3 NO=I$/;"	l	subroutine:CONVRT	file:
3	units.f	/^    3 NS=NS+J$/;"	l	subroutine:MAKESI	file:
3	visgrid.f	/^    3 FORMAT(' TECPLOT GRID OUTPUT FILE (GRIDFILE)',T50,50A1)$/;"	l	subroutine:VISGRID	file:
3	vistab.f	/^    3    FORMAT(A13)$/;"	l	subroutine:CPYLAYOUT	file:
3	vistab.f	/^    3 CONTINUE$/;"	l	subroutine:VTABFIT	file:
3	vistab.f	/^    3 FORMAT('VARIABLES = "X", "Y"')$/;"	l	subroutine:VTABINIT	file:
3	vistab.f	/^    3 FORMAT('ZONE T="',A14)$/;"	l	subroutine:VTABDAT	file:
30	comp.f	/^   30 II=R(I)+.5D0$/;"	l	subroutine:EXEC	file:
30	divide.f	/^   30 CONTINUE$/;"	l	subroutine:DIVIDE	file:
30	ebdary.f	/^   30    E='RIGHT PARENTHESES FOR REPEAT FACTOR NOT FOUND'$/;"	l	subroutine:EGETVAL	file:
30	fcns.f	/^   30 continue$/;"	l	subroutine:QuadG27	file:
30	idata.f	/^   30       FORMAT(\/' ERROR 507; NX =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOM	file:
30	idata.f	/^   30       FORMAT(\/' ERROR 507; NX =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
30	idata.f	/^   30    FORMAT(' K-STRIP PROCESSOR ASSIGNMENT (METHOD)')$/;"	l	subroutine:GETSCAL	file:
30	pre_prcss0.f90	/^30 l=i+m$/;"	l	subroutine:isort	file:
30	putil.f	/^   30 NM(N)=0$/;"	l	subroutine:PROCOUT	file:
30	read1.f	/^   30 K=K+1$/;"	l	subroutine:READER	file:
30	read2.f	/^   30    E='RIGHT PARENTHESES FOR REPEAT FACTOR NOT FOUND'$/;"	l	subroutine:GETVAL	file:
30	read3.f	/^   30    E='RIGHT PARENTHESES FOR REPEAT FACTOR NOT FOUND'$/;"	l	subroutine:GETVAL2	file:
30	table.f	/^   30 NUM=NEXFRE-NDAT1$/;"	l	subroutine:TABLE	file:
30	tdata.f	/^   30 FORMAT(' RESTART OUTPUT FORMATTED (FORMAT) =',T46,L8)$/;"	l	subroutine:GETTIMD	file:
30	utility0.f90	/^30 format(i10,5x,F15.8,5x,F15.8,5x,F15.8)$/;"	l	subroutine:well_geometry	file:
30	vistab.f	/^   30 DUMLAB1(J)='"'$/;"	l	subroutine:VTABDAT	file:
300	buildmpfa.f	/^ 300  CONTINUE$/;"	l	subroutine:GETA	file:
300	divide.f	/^  300 CONTINUE$/;"	l	subroutine:DIVIDE	file:
300	fcns.f	/^ 300  continue$/;"	l	subroutine:JacMat	file:
300	idata.f	/^  300       FORMAT(\/' ERROR 507; NX =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
300	ipars.f	/^  300    MODACT=0$/;"	l	subroutine:STEP	file:
301	comp.f	/^  301 NI=NI+1$/;"	l	subroutine:EXEC	file:
302	comp.f	/^  302 KOP=KODE(1,NI)$/;"	l	subroutine:EXEC	file:
31	comp.f	/^   31 N=R(I)+.5$/;"	l	subroutine:EXEC	file:
31	divide.f	/^   31    CONTINUE$/;"	l	subroutine:DIVIDE	file:
31	ebdary.f	/^   31    CONTINUE$/;"	l	subroutine:EGETVAL	file:
31	idata.f	/^   31       FORMAT(\/' ERROR 507; NY =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOM	file:
31	idata.f	/^   31       FORMAT(\/' ERROR 507; NY =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
31	idata.f	/^   31    FORMAT (' ERROR 508; ERROR READING PERM_HTOV_RATIO')$/;"	l	subroutine:GETROCK	file:
31	idata.f	/^   31    FORMAT(' J-STRIP PROCESSOR ASSIGNMENT (METHOD)')$/;"	l	subroutine:GETSCAL	file:
31	ipars.f	/^   31 CONTINUE$/;"	l	subroutine:STEP	file:
31	many.f	/^   31 CALL MPI_SEND(PBUF4A,N,MPI_REAL,0,MSGTAG(MTM),$/;"	l	subroutine:GETMP	file:
31	prtout.f	/^   31    DO 7 N=1,NL$/;"	l	subroutine:GEAPRT	file:
31	putil.f	/^   31 CONTINUE$/;"	l	subroutine:PROCOUT	file:
31	read1.f	/^   31 K=I$/;"	l	subroutine:READER	file:
31	read2.f	/^   31    CONTINUE$/;"	l	subroutine:GETVAL	file:
31	read3.f	/^   31    CONTINUE$/;"	l	subroutine:GETVAL2	file:
31	table.f	/^   31 FORMAT (\/' ERROR # 402; INCOMPLETE PAIR IN TABLE')$/;"	l	subroutine:TABLE	file:
31	twell.f	/^   31       BHP=PQ$/;"	l	subroutine:TWELL	file:
31	twell.f	/^   31       CALL WELLOUT (N,3,WELIPC(2,N)*CVMWELL\/DELTIM)$/;"	l	subroutine:TWELLOUTPUT	file:
31	vistab.f	/^   31 DUMLAB1(J)='"'$/;"	l	subroutine:VTABDAT	file:
310	idata.f	/^  310       FORMAT(\/' ERROR 507; NY =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
313	comp.f	/^  313 ERRMSG=ERRS(KERR)$/;"	l	subroutine:EXEC	file:
313	table.f	/^  313       FORMAT(' ERROR # 418, USER PROGRAM ERROR IN A TABLE')$/;"	l	subroutine:LOOKUP	file:
314	comp.f	/^  314 FORMAT(' ERROR AT CODE LINE',I5)$/;"	l	subroutine:EXEC	file:
32	divide.f	/^   32    CONTINUE$/;"	l	subroutine:DIVIDE	file:
32	ebdary.f	/^   32    DO 33 I=1,5$/;"	l	subroutine:EGETVAL	file:
32	idata.f	/^   32       FORMAT(\/' ERROR 507; NZ =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOM	file:
32	idata.f	/^   32       FORMAT(\/' ERROR 507; NZ =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
32	idata.f	/^   32    FORMAT(\/' Y-PERMEABILITY SCALED ON X-PERMEABILITY FOR',$/;"	l	subroutine:GETROCK	file:
32	idata.f	/^   32 MNAMS(I)=BNAMS$/;"	l	subroutine:GETSCAL	file:
32	ipars.f	/^   32 CONTINUE$/;"	l	subroutine:STEP	file:
32	many.f	/^   32 CALL MPI_SEND(PBUF8A,N,MPI_DOUBLE_PRECISION,0,MSGTAG(MTM),$/;"	l	subroutine:GETMP	file:
32	prtout.f	/^   32    DO 8 N=1,NL$/;"	l	subroutine:GEAPRT	file:
32	putil.f	/^   32    CONTINUE$/;"	l	subroutine:PROCOUT	file:
32	read1.f	/^   32 CONTINUE$/;"	l	subroutine:READER	file:
32	read2.f	/^   32    DO 33 I=1,5$/;"	l	subroutine:GETVAL	file:
32	read3.f	/^   32    DO 33 I=1,5$/;"	l	subroutine:GETVAL2	file:
32	table.f	/^   32 FORMAT (\/' ERROR # 417; NO DATA IN TABLE')$/;"	l	subroutine:TABLE	file:
32	twell.f	/^   32       KR=2$/;"	l	subroutine:TWELL	file:
32	vistab.f	/^   32 DUMLAB1(J)='"'$/;"	l	subroutine:VTABDAT	file:
320	idata.f	/^  320       FORMAT(\/' ERROR 507; NZ =',I6,' FOR FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
33	comp.f	/^   33 CONTINUE$/;"	l	subroutine:CPEXP	file:
33	divide.f	/^   33    CONTINUE$/;"	l	subroutine:DIVIDE	file:
33	ebdary.f	/^   33    CONTINUE$/;"	l	subroutine:EGETVAL	file:
33	idata.f	/^   33 CONTINUE$/;"	l	subroutine:GETSCAL	file:
33	idata.f	/^   33 FORMAT ('FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOM	file:
33	idata.f	/^   33 FORMAT ('FAULT BLOCK',I4)$/;"	l	subroutine:SETGEOMNEW	file:
33	many.f	/^   33 CALL MPI_SEND(IPBUF4A,N,MPI_INTEGER,0,MSGTAG(MTM),$/;"	l	subroutine:GETMP	file:
33	many.f	/^  33              CONTINUE$/;"	l	subroutine:COMMI	file:
33	prtout.f	/^   33    DO 35 N=1,NL$/;"	l	subroutine:GEAPRT	file:
33	putil.f	/^   33    CONTINUE$/;"	l	subroutine:PROCOUT	file:
33	read1.f	/^   33 E='INVALID INCLUDE FILE'$/;"	l	subroutine:READER	file:
33	read2.f	/^   33    CONTINUE$/;"	l	subroutine:GETVAL	file:
33	read3.f	/^   33    CONTINUE$/;"	l	subroutine:GETVAL2	file:
34	comp.f	/^   34 CONTINUE$/;"	l	subroutine:CPEXP	file:
34	ebdary.f	/^   34 E='DATA SYNTAX ERROR'$/;"	l	subroutine:EGETVAL	file:
34	idata.f	/^   34    FORMAT(\/' X-PERMEABILITY SCALED ON Y-PERMEABILITY FOR',$/;"	l	subroutine:GETROCK	file:
34	idata.f	/^   34 MODBLK(I)=N$/;"	l	subroutine:GETSCAL	file:
34	prtout.f	/^   34    WRITE (NFOUT,9) KG,KGO$/;"	l	subroutine:GEAPRT	file:
34	putil.f	/^   34    CONTINUE$/;"	l	subroutine:PROCOUT	file:
34	read1.f	/^   34 E=' '$/;"	l	subroutine:READER	file:
34	read2.f	/^   34 E='DATA SYNTAX ERROR'$/;"	l	subroutine:GETVAL	file:
34	read3.f	/^   34 E='DATA SYNTAX ERROR'$/;"	l	subroutine:GETVAL2	file:
35	ebdary.f	/^   35 CONTINUE$/;"	l	subroutine:EGETVAL	file:
35	idata.f	/^   35 MODELON(I)=.FALSE.$/;"	l	subroutine:GETSCAL	file:
35	idata.f	/^   35 MODELON(M)=.FALSE.$/;"	l	subroutine:SETGEOM	file:
35	idata.f	/^   35 MODELON(M)=.FALSE.$/;"	l	subroutine:SETGEOMNEW	file:
35	prtout.f	/^   35    CONTINUE$/;"	l	subroutine:GEAPRT	file:
35	putil.f	/^   35 FORMAT(\/' ***************  GRID NODES SENT DURING UPDATE',$/;"	l	subroutine:PROCOUT	file:
35	read1.f	/^   35 K=K+1$/;"	l	subroutine:READER	file:
35	read2.f	/^   35 CONTINUE$/;"	l	subroutine:GETVAL	file:
35	read3.f	/^   35 CONTINUE$/;"	l	subroutine:GETVAL2	file:
36	ebdary.f	/^   36 FORMAT(' ERROR 121, PROGRAM ERROR: TYPE ',A2,' FOR VARIABLE ',$/;"	l	subroutine:EGETVAL	file:
36	idata.f	/^   36 CONTINUE$/;"	l	subroutine:SETGEOM	file:
36	idata.f	/^   36 CONTINUE$/;"	l	subroutine:SETGEOMNEW	file:
36	idata.f	/^   36 FORMAT(' BLOCK',I4,' SIMULATION MODEL',T53,A26)$/;"	l	subroutine:GETSCAL	file:
36	many.f	/^ 36                     CONTINUE$/;"	l	subroutine:COMMI	file:
36	putil.f	/^   36 WRITE (NFOUT,37) N-1,NM(N)$/;"	l	subroutine:PROCOUT	file:
36	read1.f	/^   36 OPEN (INCFIL,FILE=E,STATUS='OLD',ERR=33)$/;"	l	subroutine:READER	file:
36	read2.f	/^   36 FORMAT(' ERROR 121, PROGRAM ERROR: TYPE ',A2,' FOR VARIABLE ',$/;"	l	subroutine:GETVAL	file:
36	read3.f	/^   36 FORMAT(' ERROR 121, PROGRAM ERROR: TYPE ',A2,' FOR VARIABLE ',$/;"	l	subroutine:GETVAL2	file:
36	table.f	/^   36 DATS(I)=VALUES(I+I1-1)$/;"	l	subroutine:TABLE	file:
37	idata.f	/^   37 CONTINUE$/;"	l	subroutine:GETSCAL	file:
37	putil.f	/^   37 FORMAT(I6,6X,I7)$/;"	l	subroutine:PROCOUT	file:
37	table.f	/^   37    FORMAT (\/' ERROR # 404; INVALID TRANSFORM OF TABLE '\/1X,A50)$/;"	l	subroutine:TABLE	file:
38	ebdary.f	/^   38 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA.OR.A(L).EQ.RIGHT) THEN$/;"	l	subroutine:EGETVAL	file:
38	idata.f	/^   38    FORMAT(' DETAILED TIMER OUTPUT (ALLTIMES)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
38	putil.f	/^   38 FORMAT('   TOTAL',4X,I7)$/;"	l	subroutine:PROCOUT	file:
38	read2.f	/^   38 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA.OR.A(L).EQ.RIGHT) THEN$/;"	l	subroutine:GETVAL	file:
38	read3.f	/^   38 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA.OR.A(L).EQ.RIGHT) THEN$/;"	l	subroutine:GETVAL2	file:
38	table.f	/^   38    VALUES(I)=VALUES(I)*(VALUES(I-1)-TRANC1(NTBU))$/;"	l	subroutine:TABLE	file:
39	idata.f	/^   39    FORMAT(' DETAILED TIMER OUTPUT (ALLTIMES)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
39	iwell.f	/^   39 NERR=NERR+1$/;"	l	subroutine:IWELLS	file:
39	table.f	/^   39    FORMAT(\/' Y TRANSFORMED TO Ys\/(X -',F8.4,')')$/;"	l	subroutine:TABLE	file:
4	bdaryin.f	/^ 4    FORMAT(' ERROR # 418, USER PROGRAM ERROR IN BDMOD')$/;"	l	subroutine:BDMOD	file:
4	comp.f	/^    4    CONTINUE$/;"	l	subroutine:CPEXP	file:
4	comp.f	/^    4 CONTINUE$/;"	l	subroutine:NUMGET	file:
4	comp.f	/^    4 IF (R(J).EQ.0.D0) GO TO 401$/;"	l	subroutine:EXEC	file:
4	comp.f	/^    4 KRET=1$/;"	l	subroutine:GETNAM	file:
4	comp.f	/^    4 OPPS(I+6)=SUB2(I)$/;"	l	subroutine:CPINIT	file:
4	ebdary.f	/^    4    CONTINUE$/;"	l	subroutine:EGETVAL	file:
4	ebdary.f	/^   4  CALL BLKDIM(NBLKA,IDIMG,JDIMG,KDIMG,KERR)$/;"	l	subroutine:EBDARY_BEWI4	file:
4	ebdary.f	/^   4  CALL BLKDIM(NBLKA,IDIMG,JDIMG,KDIMG,KERR)$/;"	l	subroutine:EBDARY_BEWR8	file:
4	ebdary.f	/^   4  CALL BLKDIM(NBLKA,IDIMG,JDIMG,KDIMG,KERR)$/;"	l	subroutine:EBDARY_DPWI4	file:
4	ebdary.f	/^   4  CALL BLKDIM(NBLKA,IDIMG,JDIMG,KDIMG,KERR)$/;"	l	subroutine:EBDARY_DPWR8	file:
4	ebdary.f	/^   4  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
4	ebdary.f	/^   4  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
4	ebdary.f	/^   4  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
4	ebdary.f	/^   4  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
4	ebdary.f	/^   4  CONTINUE$/;"	l	subroutine:ESETVNAM	file:
4	ebdary.f	/^   4  NBP = 4*IDIM*KDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
4	ebdary.f	/^   4  NBP = 4*IDIM*KDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
4	ebdary.f	/^   4  NBP = IDIM*KDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
4	elastic.f	/^    4 CONTINUE$/;"	l	subroutine:WELLSDP	file:
4	erest.f	/^    4          FORMAT(6I8)$/;"	l	subroutine:ERSR8	file:
4	hypre.f	/^    4 FORMAT('Relaxation type =',T45,I5)$/;"	l	subroutine:HYPREI	file:
4	idata.f	/^    4    FORMAT(\/1X,A60)$/;"	l	subroutine:GETGAPI	file:
4	idata.f	/^    4    IF (K.LE.NZ) THEN$/;"	l	subroutine:MAKEMAP	file:
4	idata.f	/^    4    NEMOD(I)=D(I)+.1D0$/;"	l	subroutine:GETIDAT	file:
4	idata.f	/^    4 CONTINUE$/;"	l	subroutine:GETROCK	file:
4	idata.f	/^    4 FORMAT(\/' SIMULATION MODEL',T56,'CHEMICAL FLOOD')$/;"	l	subroutine:GETSCAL	file:
4	impfa.f	/^    4          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN ROCKMOD')$/;"	l	subroutine:DOROCK2	file:
4	impfa.f	/^    4 CONTINUE$/;"	l	subroutine:TRANC2	file:
4	impfa.f	/^    4 CONTINUE$/;"	l	subroutine:WELLIJK2	file:
4	impfa.f	/^    4 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
4	initial.f	/^    4 CONTINUE$/;"	l	subroutine:DEPTH1	file:
4	initial.f	/^    4 CONTINUE$/;"	l	subroutine:DEPTH1_TOP	file:
4	initial.f	/^    4 CONTINUE$/;"	l	subroutine:TRANC1	file:
4	ipars.f	/^    4       FORMAT(' ERROR - NEWTONIAN ITERATION FAILURE AT STEP',I5)$/;"	l	subroutine:STEP	file:
4	ipars.f	/^    4    FORMAT(' ENTER INPUT RESTART FILE NAME (RETURN IF NONE): ')$/;"	l	subroutine:OPENIO	file:
4	ipars.f	/^    4 CONTINUE$/;"	l	subroutine:IPARS	file:
4	iwell.f	/^    4 CONTINUE$/;"	l	subroutine:IWELLS	file:
4	iwell.f	/^    4 CONTINUE$/;"	l	subroutine:WELLIJK1	file:
4	many.f	/^    4          CONTINUE$/;"	l	subroutine:COMMI	file:
4	many.f	/^    4    CONTINUE$/;"	l	subroutine:GETMP	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:I2UPDATE2	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:I4UPDATE2	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:L2UPDATE2	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:L4UPDATE2	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:R4UPDATE2	file:
4	many.f	/^    4 NFE2=NFE2+1$/;"	l	subroutine:R8UPDATE2	file:
4	owell.f	/^    4    CONTINUE$/;"	l	subroutine:WELLDSK	file:
4	owell.f	/^    4    CONTINUE$/;"	l	subroutine:WELLPRT	file:
4	owell.f	/^    4    CONTINUE$/;"	l	subroutine:WELLPRTC	file:
4	prop.f	/^    4          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')$/;"	l	subroutine:DODEPTH	file:
4	prop.f	/^    4          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN ROCKMOD')$/;"	l	subroutine:DOROCK	file:
4	prop.f	/^    4 CONTINUE$/;"	l	subroutine:SETREL3	file:
4	prop.f	/^    4 F1=SW+AREL(1,KR)*SG$/;"	l	subroutine:RELPERM3	file:
4	prop.f	/^    4 NAMPROG='ROCKMOD '$/;"	l	subroutine:ROCKPROG	file:
4	prtout.f	/^    4          FORMAT(I5)$/;"	l	subroutine:MAKTIT	file:
4	prtout.f	/^    4 IL=72-I2+I1$/;"	l	subroutine:PRTTIT	file:
4	prtout.f	/^    4 NIIND=NIIND+1$/;"	l	subroutine:GEAPRT	file:
4	putil.f	/^    4       DO 5 I=N2,I1,-1$/;"	l	subroutine:ELEGET	file:
4	putil.f	/^    4       DO 5 I=N2,I1,-1$/;"	l	subroutine:ELEPUT	file:
4	putil.f	/^    4    CONTINUE$/;"	l	subroutine:MAXIT	file:
4	putil.f	/^    4    CONTINUE$/;"	l	subroutine:MAXITI	file:
4	putil.f	/^    4    CONTINUE$/;"	l	subroutine:MINIT	file:
4	putil.f	/^    4    CONTINUE$/;"	l	subroutine:MINITI	file:
4	putil.f	/^    4    CONTINUE$/;"	l	subroutine:SUMIT	file:
4	putil.f	/^    4 CONTINUE$/;"	l	subroutine:WELSUM	file:
4	putil.f	/^    4 NUMELET(NWS)=KK$/;"	l	subroutine:WELLSHR	file:
4	putil.f	/^    4 NWELPRC(J)=NB-1$/;"	l	subroutine:WELOWN	file:
4	read1.f	/^    4    FORMAT(\/' ERROR # 116, UNDEFINED VARIABLE OR SYNTAX ERROR'\/$/;"	l	subroutine:UNDEF	file:
4	read1.f	/^    4 CALL BLKDIM(NBLKA,IDIMG,JDIMG,KDIMG,NERR)$/;"	l	subroutine:GRDAIN	file:
4	read1.f	/^    4 CONTINUE$/;"	l	subroutine:GETNUM	file:
4	read1.f	/^    4 FORMAT(202A1)$/;"	l	subroutine:READER	file:
4	read1.f	/^    4 LL=LDAT$/;"	l	subroutine:PUTERR	file:
4	read2.f	/^    4    CONTINUE$/;"	l	subroutine:GETVAL	file:
4	read3.f	/^    4    CONTINUE$/;"	l	subroutine:GETVAL2	file:
4	restart.f	/^    4          FORMAT(6I8)$/;"	l	subroutine:RSI4	file:
4	restart.f	/^    4          FORMAT(6I8)$/;"	l	subroutine:RSL4	file:
4	restart.f	/^    4          FORMAT(6I8)$/;"	l	subroutine:RSR4	file:
4	restart.f	/^    4          FORMAT(6I8)$/;"	l	subroutine:RSR8	file:
4	restart.f	/^    4 CONTINUE$/;"	l	subroutine:RESIN	file:
4	restart.f	/^    4 CONTINUE$/;"	l	subroutine:RESOUT	file:
4	restart.f	/^    4 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RGEAIN	file:
4	stdout.f	/^    4       FORMAT(' MODEL',I3,' BALANCES',T46,F11.8)$/;"	l	subroutine:STDOUT	file:
4	table.f	/^    4 A(J,K)=A(J,K)-A(I,K)*DUM$/;"	l	subroutine:LINSOV	file:
4	table.f	/^    4 CONTINUE$/;"	l	subroutine:NUMBR	file:
4	table.f	/^    4 CONTINUE$/;"	l	subroutine:TABLE	file:
4	table.f	/^    4 DLB2=DLB2*X$/;"	l	subroutine:SPLINE	file:
4	table.f	/^    4 FORMAT (\/' ERROR # 407; INDEPENDENT VARIABLE',G14.6,$/;"	l	subroutine:LOOKUP	file:
4	table.f	/^    4 FORMAT('  ')$/;"	l	subroutine:PRTTAB	file:
4	tdata.f	/^    4 FORMAT(' MAXIMUM TIME STEP (DTIMMAX) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
4	tisdat.f	/^   4    FORMAT (\/' ERROR: INVALID MPFA QUAD TYPES')$/;"	l	subroutine:TIADAT	file:
4	trest.f	/^    4       CONTINUE$/;"	l	subroutine:TRESTO	file:
4	tstep.f	/^    4 CALL CALLWORK(CPYARYR8,ICOPY)$/;"	l	subroutine:TSTEP3	file:
4	units.f	/^    4    ERMS1(I+14)=UTL1(I)$/;"	l	subroutine:MAKESI	file:
4	units.f	/^    4 IF (NI.NE.NO) GO TO 13$/;"	l	subroutine:CONVRT	file:
4	visgrid.f	/^    4    FORMAT('ZONE N=8, E=1, F=FEPOINT, ET=BRICK')$/;"	l	subroutine:TECGRID	file:
4	visgrid.f	/^    4 FORMAT('#!MC 700'\/'VARIABLES = "X", "Y", "Z", "B"')$/;"	l	subroutine:VISGRID	file:
4	vistab.f	/^    4    FORMAT('#!MC 700'\/'$!VarSet |DATFIL| = "',50A1)$/;"	l	subroutine:VTABINIT	file:
4	vistab.f	/^    4    FORMAT(6E12.5)$/;"	l	subroutine:VTABFIT	file:
4	vistab.f	/^    4 FORMAT(' I=',I4,', J=1, K=1, F=POINT, C=BLACK,',$/;"	l	subroutine:VTABDAT	file:
4	vistab.f	/^    4 NFRAM=NFRAM+1$/;"	l	subroutine:CPYLAYOUT	file:
40	comp.f	/^   40 J1=1$/;"	l	subroutine:CPEXP	file:
40	comp.f	/^   40 NN=KVDAT(4,I)$/;"	l	subroutine:EXEC	file:
40	divide.f	/^   40 GO TO (10,100,200),METHOD$/;"	l	subroutine:DIVIDE	file:
40	ebdary.f	/^   40 NN(3,I)=1$/;"	l	subroutine:EGETVAL	file:
40	fcns.f	/^   40 continue$/;"	l	subroutine:QuadG27	file:
40	idata.f	/^   40 FORMAT(' MAX NEWTONIAN ITERATIONS (MAXNEWT)',T50,I7)$/;"	l	subroutine:GETSCAL	file:
40	iwell.f	/^   40    TIT=WELNAM(I)$/;"	l	subroutine:IWELLS	file:
40	pre_prcss0.f90	/^40 j=j+1$/;"	l	subroutine:isort	file:
40	putil.f	/^   40 NM(N)=0$/;"	l	subroutine:PROCOUT	file:
40	read1.f	/^   40    CONTINUE$/;"	l	subroutine:READER	file:
40	read2.f	/^   40 NN(3,I)=1$/;"	l	subroutine:GETVAL	file:
40	read3.f	/^   40 NN(3,I)=1$/;"	l	subroutine:GETVAL2	file:
40	table.f	/^   40 FORMAT (\/' INTERPOLATION = ',A18,'        EXTRAPOLATION = ',A18)$/;"	l	subroutine:TABLE	file:
40	utility0.f90	/^40 format(i10,5x,i5,5x,i5)$/;"	l	subroutine:well_geometry	file:
400	buildmpfa.f	/^ 400  CONTINUE$/;"	l	subroutine:GETB	file:
401	comp.f	/^  401 KERR=1$/;"	l	subroutine:EXEC	file:
402	comp.f	/^  402 KERR=2$/;"	l	subroutine:EXEC	file:
403	comp.f	/^  403 KERR=3$/;"	l	subroutine:EXEC	file:
404	comp.f	/^  404 KERR=4$/;"	l	subroutine:EXEC	file:
405	comp.f	/^  405 KERR=5$/;"	l	subroutine:EXEC	file:
406	comp.f	/^  406 KERR=6$/;"	l	subroutine:EXEC	file:
407	comp.f	/^  407 KERR=7$/;"	l	subroutine:EXEC	file:
408	comp.f	/^  408 KERR=8$/;"	l	subroutine:EXEC	file:
41	comp.f	/^   41 J2=J1$/;"	l	subroutine:CPEXP	file:
41	comp.f	/^   41 NN=KVDAT(4,I)$/;"	l	subroutine:EXEC	file:
41	ebdary.f	/^   41 E='INVALID SUBSCRIPT RANGE'$/;"	l	subroutine:EGETVAL	file:
41	idata.f	/^   41 DZREC(I,N)=1.$/;"	l	subroutine:SETGEOM	file:
41	idata.f	/^   41 DZREC(I,N)=1.$/;"	l	subroutine:SETGEOMNEW	file:
41	iwell.f	/^   41    YLB='BHP[psi]'$/;"	l	subroutine:IWELLS	file:
41	many.f	/^   41      CALL MPI_RECV(PBUF4B,480,MPI_REAL,$/;"	l	subroutine:GETMP	file:
41	prtout.f	/^   41 DO 44 N=1,NL$/;"	l	subroutine:GEAPRT	file:
41	putil.f	/^   41 CONTINUE$/;"	l	subroutine:PROCOUT	file:
41	read2.f	/^   41 E='INVALID SUBSCRIPT RANGE'$/;"	l	subroutine:GETVAL	file:
41	read3.f	/^   41 E='INVALID SUBSCRIPT RANGE'$/;"	l	subroutine:GETVAL2	file:
41	table.f	/^   41    CONTINUE$/;"	l	subroutine:TABLE	file:
42	comp.f	/^   42 CONTINUE$/;"	l	subroutine:CPEXP	file:
42	comp.f	/^   42 NN=KVDAT(4,K)$/;"	l	subroutine:EXEC	file:
42	ebdary.f	/^ 42      CONTINUE$/;"	l	subroutine:EGETVAL	file:
42	idata.f	/^   42 DXREC(I,N)=1.$/;"	l	subroutine:SETGEOM	file:
42	idata.f	/^   42 DXREC(I,N)=1.$/;"	l	subroutine:SETGEOMNEW	file:
42	iwell.f	/^   42    IF (MODWEL(I).EQ.2 .OR. MODWEL(I).EQ.3$/;"	l	subroutine:IWELLS	file:
42	many.f	/^   42      CALL MPI_RECV(PBUF8B,480,MPI_DOUBLE_PRECISION,$/;"	l	subroutine:GETMP	file:
42	prtout.f	/^   42 DO 45 N=1,NL$/;"	l	subroutine:GEAPRT	file:
42	putil.f	/^   42    CONTINUE$/;"	l	subroutine:PROCOUT	file:
42	read2.f	/^ 42      CONTINUE$/;"	l	subroutine:GETVAL	file:
42	read3.f	/^ 42      CONTINUE$/;"	l	subroutine:GETVAL2	file:
42	table.f	/^   42    FORMAT(\/' ERROR # 405; NON-POSITIVE VALUE IN LOG TABLE:',$/;"	l	subroutine:TABLE	file:
43	comp.f	/^   43 IF (A(I).EQ.TAG) THEN$/;"	l	subroutine:CPEXP	file:
43	comp.f	/^   43 NN=KVDAT(4,K)$/;"	l	subroutine:EXEC	file:
43	idata.f	/^   43 DYREC(I,N)=1.$/;"	l	subroutine:SETGEOM	file:
43	idata.f	/^   43 DYREC(I,N)=1.$/;"	l	subroutine:SETGEOMNEW	file:
43	iwell.f	/^   43    YLB='RATE[cu-ft\/day]'$/;"	l	subroutine:IWELLS	file:
43	many.f	/^   43      CALL MPI_RECV(IPBUF4B,480,MPI_INTEGER,$/;"	l	subroutine:GETMP	file:
43	prtout.f	/^   43 DO 46 N=1,NL$/;"	l	subroutine:GEAPRT	file:
43	putil.f	/^   43    CONTINUE$/;"	l	subroutine:PROCOUT	file:
43	table.f	/^   43     CONTINUE$/;"	l	subroutine:TABLE	file:
44	comp.f	/^   44    CONTINUE$/;"	l	subroutine:CPEXP	file:
44	comp.f	/^   44 IF (L1DO) THEN$/;"	l	subroutine:EXEC	file:
44	elastic.f	/^   44 CONTINUE$/;"	l	subroutine:WELLSDP	file:
44	idata.f	/^   44       CALL PRTVEC4 (TITU,NZ(N),DZREC(1,N))$/;"	l	subroutine:SETGEOM	file:
44	idata.f	/^   44       CALL PRTVEC4 (TITU,NZ(N),DZREC(1,N))$/;"	l	subroutine:SETGEOMNEW	file:
44	impfa.f	/^   44 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
44	iwell.f	/^   44    IF (MODWEL(I).EQ.2 .OR. MODWEL(I).EQ.3$/;"	l	subroutine:IWELLS	file:
44	prtout.f	/^   44 PBUF4C(N)=PBUF4A(N)$/;"	l	subroutine:GEAPRT	file:
44	putil.f	/^   44    CONTINUE$/;"	l	subroutine:PROCOUT	file:
44	table.f	/^   44 FORMAT (\/' CONSTRAIN Y TO',G14.6,' AT X =',G14.6)$/;"	l	subroutine:TABLE	file:
45	comp.f	/^   45 I=I+1$/;"	l	subroutine:CPEXP	file:
45	comp.f	/^   45 II1=LCSTG(I-1)+1$/;"	l	subroutine:EXEC	file:
45	ebdary.f	/^   45 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA) THEN$/;"	l	subroutine:EGETVAL	file:
45	prtout.f	/^   45 PBUF8C(N)=PBUF8A(N)$/;"	l	subroutine:GEAPRT	file:
45	putil.f	/^   45 FORMAT(\/' ***************  GRID ELEMENTS SENT DURING UPDATE',$/;"	l	subroutine:PROCOUT	file:
45	read2.f	/^   45 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA) THEN$/;"	l	subroutine:GETVAL	file:
45	read3.f	/^   45 IF (A(L).EQ.BLANK.OR.A(L).EQ.COMMA) THEN$/;"	l	subroutine:GETVAL2	file:
45	table.f	/^   45 FORMAT (\/' CONSTRAIN DY\/DX TO',G14.6,' AT X =',G14.6)$/;"	l	subroutine:TABLE	file:
46	comp.f	/^   46 II1=LCSTG(I-1)+1$/;"	l	subroutine:EXEC	file:
46	eidata.f	/^  46  FORMAT(\/'ERROR: INVALID MODULUS VALUE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
46	prtout.f	/^   46 IPBUF4C(N)=IPBUF4A(N)$/;"	l	subroutine:GEAPRT	file:
46	putil.f	/^   46 WRITE (NFOUT,47) N-1,NM(N)$/;"	l	subroutine:PROCOUT	file:
46	table.f	/^   46 FORMAT (\/' CONSTRAINT AT X =',G14.7\/' (',G14.7,') Y + (',G14.7,$/;"	l	subroutine:TABLE	file:
47	comp.f	/^   47       A(I)=BLK$/;"	l	subroutine:CPEXP	file:
47	idata.f	/^   47    FORMAT(' SINGLE PROCESSOR DEBUG OUTPUT (DEBUGS)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
47	putil.f	/^   47 FORMAT(I6,6X,I7)$/;"	l	subroutine:PROCOUT	file:
47	table.f	/^   47    NUM=NUM+2$/;"	l	subroutine:TABLE	file:
48	eidata.f	/^  48  FORMAT(\/'ERROR: INVALID POISSON RATIO SPECIFIED')$/;"	l	subroutine:EIADAT	file:
48	putil.f	/^   48 FORMAT('   TOTAL',4X,I7)$/;"	l	subroutine:PROCOUT	file:
48	table.f	/^   48 VALUES(NUM)=SCOF(K,I)$/;"	l	subroutine:TABLE	file:
49	idata.f	/^   49    FORMAT(' SEISMIC DATA OUTPUT (SEISMIC)',T56,'YES')$/;"	l	subroutine:GETSCAL	file:
49	iwell.f	/^   49       FORMAT(' UPPER LIMIT ON BHP (PLIMIT)',T48,G12.2,' PSI')$/;"	l	subroutine:IWELLS	file:
49	table.f	/^   49 J=J+2$/;"	l	subroutine:TABLE	file:
5	comp.f	/^    5 IF (K.LT.11) GO TO 7$/;"	l	subroutine:NUMGET	file:
5	comp.f	/^    5 KVDAT(4,NVU+I)=-1000-I$/;"	l	subroutine:CPINIT	file:
5	comp.f	/^    5 NCHR=NCHR+2$/;"	l	subroutine:CPEXP	file:
5	comp.f	/^    5 R(K)=R(I)$/;"	l	subroutine:EXEC	file:
5	ebdary.f	/^    5 DO 6 I=1,9$/;"	l	subroutine:EGETVAL	file:
5	ebdary.f	/^   5  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
5	ebdary.f	/^   5  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
5	ebdary.f	/^   5  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
5	ebdary.f	/^   5  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
5	ebdary.f	/^   5  NBP = 4*IDIM*JDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
5	ebdary.f	/^   5  NBP = 4*IDIM*JDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
5	ebdary.f	/^   5  NBP = IDIM*JDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
5	eidata.f	/^   5  FORMAT('     DISPLACEMENT',T59,'[in.]'\/$/;"	l	subroutine:EISDAT	file:
5	elastic.f	/^    5 CONTINUE$/;"	l	subroutine:WELLSDP	file:
5	elastic.f	/^    5 continue$/;"	l	subroutine:EcalcLELEI_LSIZE	file:
5	erest.f	/^    5          FORMAT(5G23.16)$/;"	l	subroutine:ERSR8	file:
5	hypre.f	/^    5 FORMAT('Cycle type =',T45,I5)$/;"	l	subroutine:HYPREI	file:
5	idata.f	/^    5          PRCMAP(N0+NY*K+JJ)=-2$/;"	l	subroutine:MAKEMAP	file:
5	idata.f	/^    5       FORMAT (\/' ERROR 502; NO X LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
5	idata.f	/^    5    FORMAT (\/' ERROR 502; NO X LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
5	idata.f	/^    5    FORMAT(5X,'FIRST, LAST, AND STEP I FOR OUTPUT (IFIRST,ILAST,'$/;"	l	subroutine:GETGAPI	file:
5	idata.f	/^    5    FORMAT(\/' MODEL    ELEMENTS')$/;"	l	subroutine:GETIDAT	file:
5	idata.f	/^    5 FORMAT(\/' SIMULATION MODEL',T56,'HYDROLOGY IMPLICIT')$/;"	l	subroutine:GETSCAL	file:
5	idata.f	/^    5 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
5	impfa.f	/^    5 CONTINUE$/;"	l	subroutine:WELLIJK2	file:
5	impfa.f	/^    5 CONTINUE$/;"	l	subroutine:WELLIJK3	file:
5	impfa.f	/^    5 DUM1=DUM2$/;"	l	subroutine:TRANC2	file:
5	initial.f	/^    5    CONTINUE$/;"	l	subroutine:DEPTH1	file:
5	initial.f	/^    5    CONTINUE$/;"	l	subroutine:DEPTH1_TOP	file:
5	initial.f	/^    5 DUM1=DUM2$/;"	l	subroutine:TRANC1	file:
5	ipars.f	/^    5       FORMAT (\/' ERROR # 433; EXPECTED TIME NOT FOUND IN '\/A50)$/;"	l	subroutine:NEXTIME	file:
5	ipars.f	/^    5       FORMAT(' ERROR - LINEAR ITERATION FAILURE AT STEP',I5)$/;"	l	subroutine:STEP	file:
5	ipars.f	/^    5    FORMAT(' ENTER OUTPUT RESTART FILE PRIMARY NAME ',$/;"	l	subroutine:OPENIO	file:
5	iwell.f	/^    5 CONTINUE$/;"	l	subroutine:IWELLS	file:
5	iwell.f	/^    5 CONTINUE$/;"	l	subroutine:WELLIJK1	file:
5	many.f	/^    5          NS=ISTAT(MPI_SOURCE)$/;"	l	subroutine:GETMP	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:COMMI	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:I2UPDATE2	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:I4UPDATE2	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:L2UPDATE2	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:L4UPDATE2	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:R4UPDATE2	file:
5	many.f	/^    5 CONTINUE$/;"	l	subroutine:R8UPDATE2	file:
5	owell.f	/^    5          FORMAT(150A1)$/;"	l	subroutine:WELLPRTC	file:
5	owell.f	/^    5       FORMAT(119A1)$/;"	l	subroutine:WELLDSK	file:
5	owell.f	/^    5       FORMAT(\/1X,150A1)$/;"	l	subroutine:WELLPRT	file:
5	prop.f	/^    5 CONTINUE$/;"	l	subroutine:SETREL3	file:
5	prop.f	/^    5 F5=SW-AREL(3,KR)$/;"	l	subroutine:RELPERM3	file:
5	prtout.f	/^    5 CONTINUE$/;"	l	subroutine:GEAPRT	file:
5	prtout.f	/^    5 FORMAT(80A1)$/;"	l	subroutine:PRTTIT	file:
5	prtout.f	/^    5 K1=J$/;"	l	subroutine:MAKTIT	file:
5	putil.f	/^    5       CONTINUE$/;"	l	subroutine:ELEGET	file:
5	putil.f	/^    5       CONTINUE$/;"	l	subroutine:ELEPUT	file:
5	putil.f	/^    5 CONTINUE$/;"	l	subroutine:WELOWN	file:
5	putil.f	/^    5 FORMAT(I5,99I5)$/;"	l	subroutine:PROCOUT	file:
5	putil.f	/^    5 N1=NUMELE(NW)+1$/;"	l	subroutine:WELSUM	file:
5	read1.f	/^    5 CONTINUE$/;"	l	subroutine:READER	file:
5	read1.f	/^    5 CONTINUE$/;"	l	subroutine:UNDEF	file:
5	read1.f	/^    5 DO 6 I=1,10$/;"	l	subroutine:GETNUM	file:
5	read1.f	/^    5 IF (LL.GT.0) THEN$/;"	l	subroutine:PUTERR	file:
5	read2.f	/^    5 DO 6 I=1,9$/;"	l	subroutine:GETVAL	file:
5	read3.f	/^    5 DO 6 I=1,9$/;"	l	subroutine:GETVAL2	file:
5	restart.f	/^    5          FORMAT(12I9)$/;"	l	subroutine:RSI4	file:
5	restart.f	/^    5          FORMAT(55I2)$/;"	l	subroutine:RSL4	file:
5	restart.f	/^    5          FORMAT(5G23.16)$/;"	l	subroutine:RSR8	file:
5	restart.f	/^    5          FORMAT(8G15.8)$/;"	l	subroutine:RSR4	file:
5	restart.f	/^    5 CALL CALLWORK(RSL4,NARG)$/;"	l	subroutine:RGEAOUT	file:
5	restart.f	/^    5 GO TO (61,62,63,64,65,66,67,60,69,60,60,60,73,60,60,76,77,78,79)$/;"	l	subroutine:RESIN	file:
5	restart.f	/^    5 IF (L.EQ.0) THEN$/;"	l	subroutine:RESOUT	file:
5	restart.f	/^    5 NERR=NERIN$/;"	l	subroutine:RGEAIN	file:
5	stdout.f	/^    5       FORMAT(T46,F11.8)$/;"	l	subroutine:STDOUT	file:
5	table.f	/^    5 D=D*A(I,I)$/;"	l	subroutine:LINSOV	file:
5	table.f	/^    5 DO 6 I=1,10$/;"	l	subroutine:NUMBR	file:
5	table.f	/^    5 FORMAT (\/' FOR X GREATER THAN OR EQUAL TO',G15.8,$/;"	l	subroutine:PRTSPL	file:
5	table.f	/^    5 FORMAT(\/1X,A8,'=',G15.8,' (CONSTANT)')$/;"	l	subroutine:PRTTAB	file:
5	table.f	/^    5 IF (I2.EQ.I1) THEN$/;"	l	subroutine:LOOKUP	file:
5	table.f	/^    5 W(I,L)=W(I,L)+DLB1*(DLB2**NDEG)$/;"	l	subroutine:SPLINE	file:
5	table.f	/^    5 XYNAM(2)=' '$/;"	l	subroutine:TABLE	file:
5	tdata.f	/^    5 FORMAT(' NEXT SCHEDULED OUTPUT (TIMOUT) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
5	timer.f	/^    5    CONTINUE$/;"	l	subroutine:TIMOUT	file:
5	tisdat.f	/^   5     FORMAT (\/' ERROR TIADAT: INVALID ROCK COMPRESSIBILITY')$/;"	l	subroutine:TIADAT	file:
5	tprop.f	/^    5 FORMAT (' RESID(I,J,K)',T22,G17.9)$/;"	l	subroutine:TBUGOUT	file:
5	units.f	/^    5    UTOP(NTOP)=USI1(I)$/;"	l	subroutine:MAKESI	file:
5	units.f	/^    5 CONTINUE$/;"	l	subroutine:CONVRT	file:
5	visgrid.f	/^    5    WRITE(NFGRID,7) X,Y,Z,NBLK$/;"	l	subroutine:TECGRID	file:
5	visgrid.f	/^    5 WRITE (NFGRID,8) X1,Y1,Z1,RNBLK,X,Y,Z,RNBLK$/;"	l	subroutine:VISGRID	file:
5	vistab.f	/^    5 CONTINUE$/;"	l	subroutine:CPYLAYOUT	file:
5	vistab.f	/^    5 FORMAT(' TECPLOT DATA OUTPUT FILE (TECPLOT)',T50,50A1)$/;"	l	subroutine:VTABINIT	file:
5	vistab.f	/^    5 FORMAT(6E12.5)$/;"	l	subroutine:VTABDAT	file:
50	comp.f	/^   50 L=NKODU$/;"	l	subroutine:CPEXP	file:
50	ebdary.f	/^   50 IF (I1.EQ.I2.OR.I1.EQ.I3.OR.I1.EQ.I4.OR.I2.EQ.I3.OR.I2.EQ.I4$/;"	l	subroutine:EGETVAL	file:
50	eidata.f	/^  50  FORMAT(\/'ERROR: INVALID BIOTA VALUE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
50	eidata.f	/^  50  FORMAT(\/'ERROR: TRANSIENT BOUNDARY CONDITION INPUT ERROR')$/;"	l	subroutine:ETDATA	file:
50	fcns.f	/^   50 continue$/;"	l	subroutine:BaTriLinG27	file:
50	fcns.f	/^   50 continue$/;"	l	subroutine:QuadG27	file:
50	idata.f	/^   50    FORMAT(' SEISMIC DATA OUTPUT (SEISMIC)',T56,'NO')$/;"	l	subroutine:GETSCAL	file:
50	impfa.f	/^ 50   continue$/;"	l	subroutine:calcArea	file:
50	iwell.f	/^   50       FORMAT(' LOWER LIMIT ON BHP (PLIMIT)',T48,G12.2,' PSI')$/;"	l	subroutine:IWELLS	file:
50	master-big0.f90	/^50  continue$/;"	l	subroutine:module_elasticity2	file:
50	pre_prcss0.f90	/^50 continue$/;"	l	subroutine:PRE_PRCSS2	file:
50	putil.f	/^   50 FORMAT(\/\/)$/;"	l	subroutine:PROCOUT	file:
50	read2.f	/^   50 IF (I1.EQ.I2.OR.I1.EQ.I3.OR.I1.EQ.I4.OR.I2.EQ.I3.OR.I2.EQ.I4$/;"	l	subroutine:GETVAL	file:
50	read3.f	/^   50 IF (I1.EQ.I2.OR.I1.EQ.I3.OR.I1.EQ.I4.OR.I2.EQ.I3.OR.I2.EQ.I4$/;"	l	subroutine:GETVAL2	file:
50	table.f	/^   50 BSTEP(I)=.1$/;"	l	subroutine:SPLINE	file:
50	table.f	/^   50 FORMAT (\/' SPLINE STANDARD DEVIATION =',G12.5)$/;"	l	subroutine:TABLE	file:
50	utility0.f90	/^50 format(i8,5x,8i8)$/;"	l	subroutine:well_geometry	file:
500	elastic.f	/^ 500  CONTINUE$/;"	l	subroutine:HYPRE_POROHEX	file:
500	idata.f	/^  500       FORMAT (\/' ERROR 502; NO X LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
51	eivdat.f	/^  51  FORMAT(\/'ERR51: POROELASTIC OPTION NOT SETUP FOR 1D OR 2D CASE')$/;"	l	subroutine:EIVDAT	file:
51	idata.f	/^   51    FORMAT(' RESTART SIMULATION TIME (RESTART)',T49,F10.2,1X,A20)$/;"	l	subroutine:GETSCAL	file:
51	many.f	/^   51          IF (LB.GT.480) THEN$/;"	l	subroutine:GETMP	file:
51	restart.f	/^   51 IF (MYPRC.EQ.0) THEN$/;"	l	subroutine:RESIN	file:
510	tdata.f	/^  510  FORMAT(' TIME BETWEEN SCHEDULED VISUALIZATION OUTPUTS =',$/;"	l	subroutine:GETTIMD	file:
52	eidata.f	/^  52  FORMAT(\/'ERROR: INVALID BIOTM VALUE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
52	eivdat.f	/^  52  FORMAT(\/'ERROR: POROELASTIC OPTION ONLY SETUP FOR BLACKI MODEL')$/;"	l	subroutine:EIVDAT	file:
52	idata.f	/^   52    FORMAT (\/' ERROR 512; MORE PROCESSORS THAN GRID COLUMNS')$/;"	l	subroutine:SETGEOM	file:
52	idata.f	/^   52    FORMAT (\/' ERROR 512; MORE PROCESSORS THAN GRID COLUMNS')$/;"	l	subroutine:SETGEOMNEW	file:
52	many.f	/^   52          IF (LB.GT.480) THEN$/;"	l	subroutine:GETMP	file:
52	restart.f	/^   52       FORMAT(6I9)$/;"	l	subroutine:RESIN	file:
53	many.f	/^   53          IF (LB.GT.480) THEN$/;"	l	subroutine:GETMP	file:
54	eidata.f	/^  54  FORMAT(\/'ERROR: INVALID ROCK DENSITY VALUE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
54	eivdat.f	/^  54  FORMAT(\/'ERROR: ELASTIC LINEAR SOLVER')$/;"	l	subroutine:EIVDAT	file:
54	restart.f	/^   54 FORMAT (' ERROR 436 - INVALID RESTART KEY =',I4)$/;"	l	subroutine:RESIN	file:
55	eidata.f	/^  55  FORMAT(\/'ERROR: BOUNDARY CONDITION INPUT ERROR')$/;"	l	subroutine:EIADAT	file:
55	idata.f	/^   55       FORMAT(\/' COORDINATES OF GRID 1,1,1 CORNER:'\/$/;"	l	subroutine:SETGEOM	file:
55	idata.f	/^   55       FORMAT(\/' COORDINATES OF GRID 1,1,1 CORNER:'\/$/;"	l	subroutine:SETGEOMNEW	file:
55	restart.f	/^   55 MODACT=0$/;"	l	subroutine:RESIN	file:
55	table.f	/^   55 IF (LEVELB) THEN$/;"	l	subroutine:TABLE	file:
55	tbdary.f	/^   55 continue$/;"	l	subroutine:getRHSbdAbove	file:
56	eidata.f	/^  56     FORMAT(\/'ERROR: INVALID PLASTIC MODEL SPECIFIED')$/;"	l	subroutine:EIADAT	file:
56	idata.f	/^   56       WRITE (NFOUT,57) N,(XYZ111(M,N),M=1,3)$/;"	l	subroutine:SETGEOM	file:
56	idata.f	/^   56       WRITE (NFOUT,57) N,(XYZ111(M,N),M=1,3)$/;"	l	subroutine:SETGEOMNEW	file:
56	table.f	/^   56 FORMAT(\/' USER PROGRAMMED FUNCTION')$/;"	l	subroutine:TABLE	file:
57	eidata.f	/^  57     FORMAT(\/'ERROR: INVALID ROCK YIELD STRENGTH SPECIFIED')$/;"	l	subroutine:EIADAT	file:
57	idata.f	/^   57       FORMAT(I5,3G15.6)$/;"	l	subroutine:SETGEOM	file:
57	idata.f	/^   57       FORMAT(I5,3G15.6)$/;"	l	subroutine:SETGEOMNEW	file:
57	table.f	/^   57    FORMAT (\/' ERROR # 403; TOO MANY EXTERNAL VARIABLES')$/;"	l	subroutine:TABLE	file:
58	eidata.f	/^  58     FORMAT(\/'ERROR: INVALID ROCK YIELD FUNCTION SLOPE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
58	idata.f	/^   58       FORMAT(\/' MAJOR DIMENSIONS:'\/$/;"	l	subroutine:SETGEOM	file:
58	idata.f	/^   58       FORMAT(\/' MAJOR DIMENSIONS:'\/$/;"	l	subroutine:SETGEOMNEW	file:
58	table.f	/^   58 NC=NC+1$/;"	l	subroutine:TABLE	file:
59	eidata.f	/^  59     FORMAT(\/'ERROR: INVALID ROCK FLOW FUNCTION SLOPE SPECIFIED')$/;"	l	subroutine:EIADAT	file:
59	idata.f	/^   59       WRITE (NFOUT,63) N,DUB1,DUB2,DUB3$/;"	l	subroutine:SETGEOM	file:
59	idata.f	/^   59       WRITE (NFOUT,63) N,DUB1,DUB2,DUB3$/;"	l	subroutine:SETGEOMNEW	file:
59	table.f	/^   59 NC=NC+1$/;"	l	subroutine:TABLE	file:
59	tdata.f	/^ 59   FORMAT(' NEXT SCHEDULED VISUALIZATION OUTPUT =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
6	comp.f	/^    6 IF (NN.EQ.0.OR.NEXS.EQ.1) RETURN$/;"	l	subroutine:NUMGET	file:
6	comp.f	/^    6 R(K)=-R(I)$/;"	l	subroutine:EXEC	file:
6	ebdary.f	/^    6 CONTINUE$/;"	l	subroutine:EGETVAL	file:
6	ebdary.f	/^   6  CONTINUE$/;"	l	subroutine:EBDARY_FACES	file:
6	ebdary.f	/^   6  CONTINUE$/;"	l	subroutine:EDISP_FACES	file:
6	ebdary.f	/^   6  CONTINUE$/;"	l	subroutine:EPRES_BE_WRK	file:
6	ebdary.f	/^   6  CONTINUE$/;"	l	subroutine:EPRES_WRK_BE	file:
6	ebdary.f	/^   6  NBP = 4*IDIM*JDIM$/;"	l	subroutine:EDISP_BE_WRK	file:
6	ebdary.f	/^   6  NBP = 4*IDIM*JDIM$/;"	l	subroutine:EDISP_WRK_BE	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:EBDARY_BE_WRK	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:EBDARY_WRK_BE	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:EFACE_BE_WRK	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:EFACE_WRK_BE	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:ETYPEBD_BE_WRK	file:
6	ebdary.f	/^   6  NBP = IDIM*JDIM$/;"	l	subroutine:ETYPEBD_WRK_BE	file:
6	eidata.f	/^  6   FORMAT(\/'ERROR: DISPOUT_C CAN NOT BE USED TOGETHER WITH DISPOUT_T$/;"	l	subroutine:EISDAT	file:
6	hypre.f	/^    6 FORMAT('Print hypre solution =',T45,I5)$/;"	l	subroutine:HYPREI	file:
6	idata.f	/^    6       FORMAT (\/' ERROR 502; NO Y LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
6	idata.f	/^    6       PRCMAP(N0+NY*KK+JJ)=-2$/;"	l	subroutine:MAKEMAP	file:
6	idata.f	/^    6    CONTINUE$/;"	l	subroutine:GETIDAT	file:
6	idata.f	/^    6    FORMAT (\/' ERROR 502; NO Y LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
6	idata.f	/^    6    FORMAT(5X,'FIRST, LAST, AND STEP J FOR OUTPUT (JFIRST,JLAST,'$/;"	l	subroutine:GETGAPI	file:
6	idata.f	/^    6 CONTINUE$/;"	l	subroutine:GETROCK	file:
6	idata.f	/^    6 FORMAT(\/' SIMULATION MODEL',T56,'HYDROLOGY IMPES')$/;"	l	subroutine:GETSCAL	file:
6	impfa.f	/^    6 CONTINUE$/;"	l	subroutine:TRANC2	file:
6	initial.f	/^    6       CONTINUE$/;"	l	subroutine:DEPTH1	file:
6	initial.f	/^    6       CONTINUE$/;"	l	subroutine:DEPTH1_TOP	file:
6	initial.f	/^    6 CONTINUE$/;"	l	subroutine:TRANC1	file:
6	ipars.f	/^    6    CONTINUE$/;"	l	subroutine:NEXTIME	file:
6	ipars.f	/^    6    FORMAT(' FLOW CUTTING TIME STEP TO',F9.4,' AT STEP',I5,$/;"	l	subroutine:STEP	file:
6	ipars.f	/^    6 IF (BATCH) THEN$/;"	l	subroutine:OPENIO	file:
6	iwell.f	/^    6    FORMAT(\/1X,A40)$/;"	l	subroutine:IWELLS	file:
6	many.f	/^    6       CONTINUE$/;"	l	subroutine:GETMP	file:
6	many.f	/^    6    CONTINUE$/;"	l	subroutine:COMMI	file:
6	many.f	/^    6 FORMAT('MESSAGE LIST EXCHANGE COMPLETE: MYPRC =',I5)$/;"	l	subroutine:EXMLST	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:I2UPDATE2	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:I4UPDATE2	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:L2UPDATE2	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:L4UPDATE2	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:R4UPDATE2	file:
6	many.f	/^    6 NFE2=NFE1$/;"	l	subroutine:R8UPDATE2	file:
6	owell.f	/^    6          CONTINUE$/;"	l	subroutine:WELLPRTC	file:
6	owell.f	/^    6       CONTINUE$/;"	l	subroutine:WELLPRT	file:
6	owell.f	/^    6       FORMAT(3I5)$/;"	l	subroutine:WELLDSK	file:
6	prop.f	/^    6 AREL(J,I)=0.D0$/;"	l	subroutine:SETREL3	file:
6	prtout.f	/^    6 IF (KGO.GT.0) THEN$/;"	l	subroutine:GEAPRT	file:
6	prtout.f	/^    6 K2=K1+5$/;"	l	subroutine:MAKTIT	file:
6	putil.f	/^    6       J=NVAL*(I1-N1)$/;"	l	subroutine:ELEGET	file:
6	putil.f	/^    6       J=NVAL*(I1-N1)$/;"	l	subroutine:ELEPUT	file:
6	read1.f	/^    6    FORMAT(\/' ERROR #',I4,' ON PROCESSOR',I4\/1X,A50)$/;"	l	subroutine:PUTERR	file:
6	read1.f	/^    6 CONTINUE$/;"	l	subroutine:GETNUM	file:
6	read1.f	/^    6 LQ=.FALSE.$/;"	l	subroutine:READER	file:
6	read2.f	/^    6 CONTINUE$/;"	l	subroutine:GETVAL	file:
6	read3.f	/^    6 CONTINUE$/;"	l	subroutine:GETVAL2	file:
6	restart.f	/^    6 CONTINUE$/;"	l	subroutine:RESIN	file:
6	restart.f	/^    6 FN1(ML+I)=EX1(M1+I-1)$/;"	l	subroutine:RESOUT	file:
6	table.f	/^    6 CONTINUE$/;"	l	subroutine:LOOKUP	file:
6	table.f	/^    6 CONTINUE$/;"	l	subroutine:NUMBR	file:
6	table.f	/^    6 CONTINUE$/;"	l	subroutine:SPLINE	file:
6	table.f	/^    6 XYNAM1(I,2)=YNAM(I)$/;"	l	subroutine:TABLE	file:
6	tdata.f	/^    6 FORMAT(' TIME BETWEEN OUTPUTS (DTIMOUT) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
6	timer.f	/^    6    FORMAT(\/1X,A35,5X,F12.3)$/;"	l	subroutine:TIMOUT	file:
6	tisdat.f	/^   6        FORMAT (\/' ERROR TIADAT: INVALID MODULUS')$/;"	l	subroutine:TIADAT	file:
6	tstep.f	/^    6       CONTINUE$/;"	l	subroutine:TSTEP2	file:
6	units.f	/^    6    DO 7 I=J,MXU2$/;"	l	subroutine:MAKESI	file:
6	units.f	/^    6 CONTINUE$/;"	l	subroutine:CONVRT	file:
6	visgrid.f	/^    6          FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')$/;"	l	subroutine:TECGRID	file:
6	visgrid.f	/^    6 FORMAT('ZONE T="WELL',I3,'"')$/;"	l	subroutine:VISGRID	file:
6	vistab.f	/^    6 CONTINUE$/;"	l	subroutine:VTABFIT	file:
6	vistab.f	/^    6 FORMAT(' TECPLOT LAYOUT OUTPUT FILE (TECPLOT)',T50,50A1)$/;"	l	subroutine:VTABINIT	file:
6	vistab.f	/^    6 FORMAT('$!VarSet |PLTTITLE| = "',50A1)$/;"	l	subroutine:VTABDAT	file:
6	vistab.f	/^    6 FORMAT(A100)$/;"	l	subroutine:CPYLAYOUT	file:
60	comp.f	/^   60 KERR=0$/;"	l	subroutine:CPEXP	file:
60	eidata.f	/^  60     FORMAT(\/'ERROR: INVALID ROCK HARDENING MODEL SPECIFIED')$/;"	l	subroutine:EIADAT	file:
60	idata.f	/^   60       DUB1=DUB1+DXREC(I,N)$/;"	l	subroutine:SETGEOM	file:
60	idata.f	/^   60       DUB1=DUB1+DXREC(I,N)$/;"	l	subroutine:SETGEOMNEW	file:
60	putil.f	/^   60 FORMAT(\/\/)$/;"	l	subroutine:PROCOUT	file:
60	restart.f	/^   60 WRITE(*,*) ' ERROR - INVALID MODEL NUMBER IN RESTART HEADER'$/;"	l	subroutine:RESIN	file:
60	table.f	/^   60 FORMAT (\/' ERROR # 411; NO PROGRAM')$/;"	l	subroutine:TABLE	file:
60	utility0.f90	/^60 format(i8,5x,i8,5x,F15.8)$/;"	l	subroutine:well_geometry	file:
600	elastic.f	/^ 600  IF (NNTIM.EQ.2) THEN$/;"	l	subroutine:HYPRE_POROHEX	file:
600	idata.f	/^  600       FORMAT (\/' ERROR 502; NO Y LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
61	comp.f	/^   61 I=I+1$/;"	l	subroutine:CPEXP	file:
61	comp.f	/^   61 R(K)=DEXP(R(I))$/;"	l	subroutine:EXEC	file:
61	eidata.f	/^  61     FORMAT(\/'ERROR: INVALID ROCK HARDENING COEFFICIENT SPECIFIED')$/;"	l	subroutine:EIADAT	file:
61	idata.f	/^   61       DUB2=DUB2+DYREC(I,N)$/;"	l	subroutine:SETGEOM	file:
61	idata.f	/^   61       DUB2=DUB2+DYREC(I,N)$/;"	l	subroutine:SETGEOMNEW	file:
61	many.f	/^   61    DO 64 ID=I1G,I2G,ITS$/;"	l	subroutine:GETMP	file:
61	restart.f	/^   61 MODACT=1$/;"	l	subroutine:RESIN	file:
62	comp.f	/^   62 IF (R(I).LT.0.D0) GO TO 405$/;"	l	subroutine:EXEC	file:
62	eidata.f	/^  62     FORMAT(\/'ERROR: INVALID ROCK HARDENING COEFFICIENT SPECIFIED')$/;"	l	subroutine:EIADAT	file:
62	idata.f	/^   62       DUB3=DUB3+DZREC(I,N)$/;"	l	subroutine:SETGEOM	file:
62	idata.f	/^   62       DUB3=DUB3+DZREC(I,N)$/;"	l	subroutine:SETGEOMNEW	file:
62	many.f	/^   62    DO 65 ID=I1G,I2G,ITS$/;"	l	subroutine:GETMP	file:
62	restart.f	/^   62 MODACT=2$/;"	l	subroutine:RESIN	file:
63	comp.f	/^   63 R(K)=DABS(R(I))$/;"	l	subroutine:EXEC	file:
63	idata.f	/^   63       FORMAT(I5,3G15.6)$/;"	l	subroutine:SETGEOM	file:
63	idata.f	/^   63       FORMAT(I5,3G15.6)$/;"	l	subroutine:SETGEOMNEW	file:
63	many.f	/^   63    DO 66 ID=I1G,I2G,ITS$/;"	l	subroutine:GETMP	file:
63	restart.f	/^   63 MODACT=3$/;"	l	subroutine:RESIN	file:
64	comp.f	/^   64 IF (R(I).LT.0.D0) GO TO 404$/;"	l	subroutine:EXEC	file:
64	many.f	/^   64    PBUF4A(LP)=0.$/;"	l	subroutine:GETMP	file:
64	restart.f	/^   64 MODACT=4$/;"	l	subroutine:RESIN	file:
65	comp.f	/^   65 R(K)=DSIN(R(I))$/;"	l	subroutine:EXEC	file:
65	many.f	/^   65    PBUF8A(LP)=0.D0$/;"	l	subroutine:GETMP	file:
65	restart.f	/^   65 MODACT=5$/;"	l	subroutine:RESIN	file:
66	comp.f	/^   66 R(K)=DCOS(R(I))$/;"	l	subroutine:EXEC	file:
66	estep.f	/^  66  MC_SKIPPED = 1$/;"	l	subroutine:EITER	file:
66	iwell.f	/^   66 MODACT=0$/;"	l	subroutine:IWELLS	file:
66	many.f	/^   66    IPBUF4A(LP)=0$/;"	l	subroutine:GETMP	file:
66	restart.f	/^   66 MODACT=6$/;"	l	subroutine:RESIN	file:
666	elastic.f	/^  666   continue$/;"	l	subroutine:HYPRE_POROHEX	file:
666	hypre.f	/^  666   continue$/;"	l	subroutine:HYPRE_IPARS_EVFEM	file:
67	comp.f	/^   67 R(K)=DTAN(R(I))$/;"	l	subroutine:EXEC	file:
67	estep.f	/^  67  CONTINUE$/;"	l	subroutine:EITER	file:
67	many.f	/^   67    DO 4 IP=1,NUMPRC$/;"	l	subroutine:GETMP	file:
67	restart.f	/^   67 MODACT=7$/;"	l	subroutine:RESIN	file:
68	comp.f	/^   68 LL=R(I)$/;"	l	subroutine:EXEC	file:
69	comp.f	/^   69 R(K)=DASIN(R(I))$/;"	l	subroutine:EXEC	file:
69	restart.f	/^   69 MODACT=9$/;"	l	subroutine:RESIN	file:
7	comp.f	/^    7 IF (R(I).EQ.R(J)) THEN$/;"	l	subroutine:EXEC	file:
7	comp.f	/^    7 NN=1$/;"	l	subroutine:NUMGET	file:
7	ebdary.f	/^    7 DO 40 I=1,4$/;"	l	subroutine:EGETVAL	file:
7	eidata.f	/^  7   FORMAT(\/'ERROR: DISPOUT_T CAN NOT BE USED TOGETHER WITH DISPOUT_C$/;"	l	subroutine:EISDAT	file:
7	hypre.f	/^    7 FORMAT('Print level for hypre =',T45,I5)$/;"	l	subroutine:HYPREI	file:
7	idata.f	/^    7       FORMAT (\/' ERROR 502; NO Z LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
7	idata.f	/^    7    FORMAT (\/' ERROR 502; NO Z LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOM	file:
7	idata.f	/^    7    FORMAT(5X,'FIRST, LAST, AND STEP K FOR OUTPUT (KFIRST,KLAST,'$/;"	l	subroutine:GETGAPI	file:
7	idata.f	/^    7    FORMAT(I4,4X,I8)$/;"	l	subroutine:GETIDAT	file:
7	idata.f	/^    7 FORMAT(\/' SIMULATION MODEL',T56,'MULTI MODEL')$/;"	l	subroutine:GETSCAL	file:
7	idata.f	/^    7 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
7	impfa.f	/^    7 CONTINUE$/;"	l	subroutine:TRANC2	file:
7	initial.f	/^    7 CONTINUE$/;"	l	subroutine:DEPTH1_TOP	file:
7	initial.f	/^    7 CONTINUE$/;"	l	subroutine:TRANC1	file:
7	ipars.f	/^    7    CALL GETNUM (ACTTIM(2),KEY,J,K)$/;"	l	subroutine:NEXTIME	file:
7	ipars.f	/^    7    FORMAT(G23.16)$/;"	l	subroutine:OPENIO	file:
7	ipars.f	/^    7 MODACT=0$/;"	l	subroutine:IPARS	file:
7	ipars.f	/^    7 NEWT=0     ! FLOW NEWTON COUNTER (FOR CURRENT COUPLING ITERATION)$/;"	l	subroutine:STEP	file:
7	iwell.f	/^    7    WRITE (NFOUT,8) J,WELDIAM(J,I),WELSKIN(J,I)*$/;"	l	subroutine:IWELLS	file:
7	many.f	/^    7          CONTINUE$/;"	l	subroutine:COMMI	file:
7	many.f	/^    7    IF (N.EQ.480) GO TO 8$/;"	l	subroutine:GETMP	file:
7	many.f	/^    7 CONTINUE$/;"	l	subroutine:EXMLST	file:
7	owell.f	/^    7          DO 8 L=40,1,-1$/;"	l	subroutine:WELLPRTC	file:
7	owell.f	/^    7       DO 8 L=40,1,-1$/;"	l	subroutine:WELLPRT	file:
7	owell.f	/^    7       FORMAT(6G15.5)$/;"	l	subroutine:WELLDSK	file:
7	prop.f	/^    7    FORMAT(\/' ROCK  MODEL    Sorw      Sorg     RELC1     RELC2',$/;"	l	subroutine:SETREL3	file:
7	prtout.f	/^    7    CONTINUE$/;"	l	subroutine:GEAPRT	file:
7	prtout.f	/^    7 T(K)=TT1(J)$/;"	l	subroutine:MAKTIT	file:
7	putil.f	/^    7       CONTINUE$/;"	l	subroutine:ELEGET	file:
7	putil.f	/^    7       CONTINUE$/;"	l	subroutine:ELEPUT	file:
7	read1.f	/^    7 IF (ISUNTD.AND.NOTINDX) THEN$/;"	l	subroutine:GETNUM	file:
7	read1.f	/^    7 IF (LQ) THEN$/;"	l	subroutine:READER	file:
7	read2.f	/^    7 DO 40 I=1,4$/;"	l	subroutine:GETVAL	file:
7	read3.f	/^    7 DO 40 I=1,4$/;"	l	subroutine:GETVAL2	file:
7	restart.f	/^    7 FORMAT(' WRITING RESTART FILE ',A40\/$/;"	l	subroutine:RESOUT	file:
7	table.f	/^    7     FMB(K)=' '$/;"	l	subroutine:PRTSPL	file:
7	table.f	/^    7 B(IS-1)=(A(IS-1,NP)-DUM)\/A(IS-1,IS-1)$/;"	l	subroutine:LINSOV	file:
7	table.f	/^    7 DO 8 I=J,60$/;"	l	subroutine:TABLE	file:
7	table.f	/^    7 FORMAT (\/' ERROR # 408; INDEPENDENT VARIABLE',G14.6,$/;"	l	subroutine:LOOKUP	file:
7	table.f	/^    7 IF (ISUNTDT) THEN$/;"	l	subroutine:NUMBR	file:
7	table.f	/^    7 LL=LL+1$/;"	l	subroutine:SPLINE	file:
7	tdata.f	/^    7 FORMAT(' NEXT RESTART OUTPUT (TIMRES) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
7	timer.f	/^    7       TIMAVE(I)=TIMCUR(I)$/;"	l	subroutine:TIMOUT	file:
7	tisdat.f	/^   7        FORMAT (\/' ERROR TIADAT: INVALID POISSON')$/;"	l	subroutine:TIADAT	file:
7	tivdat.f	/^ 7    CONTINUE$/;"	l	subroutine:TINIT2	file:
7	tstep.f	/^    7    FORMAT(' WELL',I3,' QWI',G11.4,' QWP',G11.4,' BHP',F8.2)$/;"	l	subroutine:TSTEP2	file:
7	units.f	/^    7    UBOT(NBOT)=USI1(I)$/;"	l	subroutine:MAKESI	file:
7	units.f	/^    7 NI=I$/;"	l	subroutine:CONVRT	file:
7	visgrid.f	/^    7    FORMAT(3F10.2,I3)$/;"	l	subroutine:TECGRID	file:
7	visgrid.f	/^    7 FORMAT(' I=2, J=1, K=1, F=POINT, C=BLACK,',$/;"	l	subroutine:VISGRID	file:
7	vistab.f	/^    7 CONTINUE$/;"	l	subroutine:CPYLAYOUT	file:
7	vistab.f	/^    7 J=I$/;"	l	subroutine:VTABDAT	file:
7	vistab.f	/^    7 ZONAM1(J+1)='F'$/;"	l	subroutine:VTABFIT	file:
70	comp.f	/^   70 R(K)=DATAN(R(I))$/;"	l	subroutine:EXEC	file:
70	utility0.f90	/^70 format(i8,5x,i8,5x,F15.8)$/;"	l	subroutine:well_geometry	file:
700	idata.f	/^  700       FORMAT (\/' ERROR 502; NO Z LOCATIONS DEFINED')$/;"	l	subroutine:SETGEOMNEW	file:
71	comp.f	/^   71 R(K)=DSINH(R(I))$/;"	l	subroutine:EXEC	file:
72	comp.f	/^   72 R(K)=DCOSH(R(I))$/;"	l	subroutine:EXEC	file:
73	comp.f	/^   73 R(K)=RANDOM(0)$/;"	l	subroutine:EXEC	file:
73	restart.f	/^   73 MODACT=13$/;"	l	subroutine:RESIN	file:
74	comp.f	/^   74 LL=R(I)+.00001D0$/;"	l	subroutine:EXEC	file:
76	restart.f	/^   76 MODACT=16$/;"	l	subroutine:RESIN	file:
77	idata.f	/^   77 FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:GETGAPI	file:
77	idata.f	/^   77 FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:GETSCAL	file:
77	idata.f	/^   77 FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:MAKEMAP	file:
77	idata.f	/^   77 FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:SETGEOM	file:
77	idata.f	/^   77 FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:SETGEOMNEW	file:
77	iwell.f	/^   77    FORMAT(\/' Input file ERROR for ',A)$/;"	l	subroutine:IWELLS	file:
77	restart.f	/^   77 MODACT=17$/;"	l	subroutine:RESIN	file:
77	table.f	/^   77 CONTINUE$/;"	l	subroutine:TABLE	file:
78	idata.f	/^   78    FORMAT(\/' Error in ',A)$/;"	l	subroutine:SETGEOM	file:
78	idata.f	/^   78 FORMAT(\/' Error in ',A)$/;"	l	subroutine:GETSCAL	file:
78	restart.f	/^   78 MODACT=18$/;"	l	subroutine:RESIN	file:
79	restart.f	/^   79 MODACT=19$/;"	l	subroutine:RESIN	file:
8	comp.f	/^    8 IF (ND.GT.0.OR.NEE.GT.0) RETURN$/;"	l	subroutine:NUMGET	file:
8	comp.f	/^    8 IF (R(I).GT.R(J)) THEN$/;"	l	subroutine:EXEC	file:
8	eidata.f	/^  8   FORMAT(\/'ERROR: DISPOUT_B CAN NOT BE USED TOGETHER WITH DISPOUT_C$/;"	l	subroutine:EISDAT	file:
8	hypre.f	/^    8 FORMAT('Measure type for hypre =',T45,I5)$/;"	l	subroutine:HYPREI	file:
8	idata.f	/^    8       FORMAT(5X,'NX =',I6,5X,'NY =',I6,5X,'NZ =',I6)$/;"	l	subroutine:GETGAPI	file:
8	idata.f	/^    8    FORMAT (\/' ERROR 506; INPUT OF KEYOUT ARRAY FAILED')$/;"	l	subroutine:SETGEOM	file:
8	idata.f	/^    8 CONTINUE$/;"	l	subroutine:GETIDAT	file:
8	idata.f	/^    8 CONTINUE$/;"	l	subroutine:GETROCK	file:
8	impfa.f	/^    8 DUM1=DUM2$/;"	l	subroutine:TRANC2	file:
8	initial.f	/^    8    CONTINUE$/;"	l	subroutine:DEPTH1_TOP	file:
8	initial.f	/^    8 DUM1=DUM2$/;"	l	subroutine:TRANC1	file:
8	ipars.f	/^    8    CLOSE (NFRIN)$/;"	l	subroutine:OPENIO	file:
8	ipars.f	/^    8    CONTINUE$/;"	l	subroutine:STEP	file:
8	ipars.f	/^    8    READ (NFIN,1,END=2) REC$/;"	l	subroutine:NEXTIME	file:
8	iwell.f	/^    8    FORMAT(' INTERVAL',I3,', DIAMETER =',G11.4,'ft, SKIN =',G11.4\/$/;"	l	subroutine:IWELLS	file:
8	many.f	/^    8 MSGTAG(MTM)=MSGTAG(MTM)+1$/;"	l	subroutine:GETMP	file:
8	owell.f	/^    8          CONTINUE$/;"	l	subroutine:WELLPRTC	file:
8	owell.f	/^    8       CONTINUE$/;"	l	subroutine:WELLPRT	file:
8	prop.f	/^    8    CONTINUE$/;"	l	subroutine:SETREL3	file:
8	prtout.f	/^    8    CONTINUE$/;"	l	subroutine:GEAPRT	file:
8	read1.f	/^    8    A(LAST+J)=BLOCK(J)$/;"	l	subroutine:READER	file:
8	read1.f	/^    8    CONTINUE$/;"	l	subroutine:GETNUM	file:
8	restart.f	/^    8    FORMAT(6I9)$/;"	l	subroutine:RESOUT	file:
8	table.f	/^    8    CONTINUE$/;"	l	subroutine:NUMBR	file:
8	table.f	/^    8 CONTINUE$/;"	l	subroutine:TABLE	file:
8	table.f	/^    8 DO 12 I=2,NMJ$/;"	l	subroutine:SPLINE	file:
8	table.f	/^    8 DUM1=VALUES(NENTY)$/;"	l	subroutine:LOOKUP	file:
8	table.f	/^    8 DUM=DUM+B(J)*A(IS-1,J)$/;"	l	subroutine:LINSOV	file:
8	tdata.f	/^    8 FORMAT(' TIME BETWEEN RESTART OUTPUTS (DTIMRES) =',T45,F12.3,$/;"	l	subroutine:GETTIMD	file:
8	timer.f	/^    8       TIMAVE(J)=TIMAVE(J)+TIMCUR(J)$/;"	l	subroutine:TIMOUT	file:
8	tisdat.f	/^   8        FORMAT (\/' ERROR TIADAT: INVALID BIOT')$/;"	l	subroutine:TIADAT	file:
8	tivdat.f	/^    8    FORMAT(' J =',I5,4X,'K =',I5,4X,'FAULT BLOCK =',I4,4X,$/;"	l	subroutine:TINIT2	file:
8	units.f	/^    8    UBOT(NBOT)=USI1(I)$/;"	l	subroutine:MAKESI	file:
8	units.f	/^    8 NO=0$/;"	l	subroutine:CONVRT	file:
8	visgrid.f	/^    8    FORMAT('1 2 3 4 5 6 7 8')$/;"	l	subroutine:TECGRID	file:
8	visgrid.f	/^    8 FORMAT(4F10.2)$/;"	l	subroutine:VISGRID	file:
8	vistab.f	/^    8 J=I$/;"	l	subroutine:VTABDAT	file:
8	vistab.f	/^    8 WRITE (NFTABLAY,9) (REC1(J),J=1,K)$/;"	l	subroutine:CPYLAYOUT	file:
80	many.f	/^   80 CALL EXMLST ()$/;"	l	subroutine:COMMI	file:
800	idata.f	/^  800    FORMAT (\/' ERROR 506; INPUT OF KEYOUT ARRAY FAILED')$/;"	l	subroutine:SETGEOMNEW	file:
801	comp.f	/^  801 KERR=1$/;"	l	subroutine:CPPRG	file:
802	comp.f	/^  802 KERR=2$/;"	l	subroutine:CPPRG	file:
803	comp.f	/^  803 KERR=3$/;"	l	subroutine:CPPRG	file:
804	comp.f	/^  804 KERR=4$/;"	l	subroutine:CPPRG	file:
805	comp.f	/^  805 KERR=5$/;"	l	subroutine:CPPRG	file:
806	comp.f	/^  806 KERR=6$/;"	l	subroutine:CPPRG	file:
807	comp.f	/^  807 KERR=7$/;"	l	subroutine:CPPRG	file:
808	comp.f	/^  808 KERR=8$/;"	l	subroutine:CPPRG	file:
809	comp.f	/^  809 KERR=9$/;"	l	subroutine:CPPRG	file:
810	comp.f	/^  810 KERR=10$/;"	l	subroutine:CPPRG	file:
811	comp.f	/^  811 KERR=11$/;"	l	subroutine:CPPRG	file:
812	comp.f	/^  812 KERR=12$/;"	l	subroutine:CPPRG	file:
813	comp.f	/^  813 KERR=13$/;"	l	subroutine:CPPRG	file:
814	comp.f	/^  814 KERR=14$/;"	l	subroutine:CPPRG	file:
815	comp.f	/^  815 KERR=15$/;"	l	subroutine:CPPRG	file:
816	comp.f	/^  816 KERR=16$/;"	l	subroutine:CPPRG	file:
817	comp.f	/^  817 KERR=17$/;"	l	subroutine:CPPRG	file:
818	comp.f	/^  818 KERR=18$/;"	l	subroutine:CPPRG	file:
893	comp.f	/^  893    FORMAT(I5,2X,A6,3I5,I6)$/;"	l	subroutine:CPPRG	file:
894	comp.f	/^  894    WRITE (NFOUT,893) J,VNAM(J),(KVDAT(L,J),L=1,4)$/;"	l	subroutine:CPPRG	file:
895	comp.f	/^  895    FORMAT(7I5)$/;"	l	subroutine:CPPRG	file:
896	comp.f	/^  896    WRITE (NFOUT,895) J,(KODE(L,J),L=1,4)$/;"	l	subroutine:CPPRG	file:
897	comp.f	/^  897 IF (DEBUG) THEN$/;"	l	subroutine:CPPRG	file:
898	comp.f	/^  898 LINERR=NSTAT$/;"	l	subroutine:CPPRG	file:
899	comp.f	/^  899 ERRMSG=ERRS(KERR)$/;"	l	subroutine:CPPRG	file:
9	comp.f	/^    9 IF (NEE.GT.0) RETURN$/;"	l	subroutine:NUMGET	file:
9	comp.f	/^    9 IF (R(I).LT.R(J)) THEN$/;"	l	subroutine:EXEC	file:
9	eidata.f	/^  9   FORMAT(\/' ELASTIC PROPERTIES OUT  (PROPOUT)',T60,A10$/;"	l	subroutine:EISDAT	file:
9	hypre.f	/^    9 FORMAT('Setup type for hypre =',T45,I5)$/;"	l	subroutine:HYPREI	file:
9	idata.f	/^    9    FORMAT (\/' ERROR 501; MODEL NOT SPECIFIED FOR ALL BLOCKS')$/;"	l	subroutine:SETGEOM	file:
9	idata.f	/^    9    FORMAT (\/' ERROR 501; MODEL NOT SPECIFIED FOR ALL BLOCKS')$/;"	l	subroutine:SETGEOMNEW	file:
9	idata.f	/^    9 CONTINUE$/;"	l	subroutine:GETGAPI	file:
9	idata.f	/^    9 CONTINUE$/;"	l	subroutine:GETIDAT	file:
9	idata.f	/^    9 FORMAT(\/' SIMULATION MODEL',T56,'SINGLE PHASE_EXPLICIT')$/;"	l	subroutine:GETSCAL	file:
9	idata.f	/^    9 LENTA(I)=0$/;"	l	subroutine:GETROCK	file:
9	ipars.f	/^    9       CONTINUE$/;"	l	subroutine:STEP	file:
9	ipars.f	/^    9 IF (BATCH) THEN$/;"	l	subroutine:OPENIO	file:
9	many.f	/^    9 CALL MPI_TEST(IREQ(NM),FLAG,ISTAT,IERR)$/;"	l	subroutine:EXMLST	file:
9	owell.f	/^    9          WRITE (NWFCUM,5) (WN(L,NW),L=1,LN),CL,SP,$/;"	l	subroutine:WELLPRTC	file:
9	owell.f	/^    9       WRITE (NFOUT,5) (WN(L,NW),L=1,LN),CL,SP,(TH(L,KD),L=1,LT)$/;"	l	subroutine:WELLPRT	file:
9	prop.f	/^    9    FORMAT(I4,I6,6F10.4)$/;"	l	subroutine:SETREL3	file:
9	prtout.f	/^    9    FORMAT(\/' K =',I4,' PLANE IS IDENTICAL TO K =',I4,$/;"	l	subroutine:GEAPRT	file:
9	read1.f	/^    9    CALL CONVRT(A(J),UNTSTD,FACMU,FACAU,KODRET,E)$/;"	l	subroutine:GETNUM	file:
9	read1.f	/^    9 LAST=LAST+1$/;"	l	subroutine:READER	file:
9	restart.f	/^    9    FORMAT(5G23.16)$/;"	l	subroutine:RESOUT	file:
9	table.f	/^    9    CALL CONVRT(A(J),UNTS(KXYU),FACMU(KXYU),FACAU(KXYU),KODRET,E)$/;"	l	subroutine:NUMBR	file:
9	table.f	/^    9 CONTINUE$/;"	l	subroutine:SPLINE	file:
9	table.f	/^    9 FORMAT(1X,A8,5G14.7)$/;"	l	subroutine:PRTTAB	file:
9	table.f	/^    9 I=I2+NENTY-I1+1$/;"	l	subroutine:LOOKUP	file:
9	table.f	/^    9 NP=N+1$/;"	l	subroutine:LINSOV	file:
9	table.f	/^    9 NUMDAT=0$/;"	l	subroutine:TABLE	file:
9	tdata.f	/^    9    FORMAT(' MINIMUM TIME STEP (DTIMMIN) =',T45,F12.3,1X,A20)$/;"	l	subroutine:GETTIMD	file:
9	tivdat.f	/^    9    FORMAT(T5,'I',T9,'P, psi',T23,'DEPTH, ft')$/;"	l	subroutine:TINIT2	file:
9	twell.f	/^    9 IF((NHISUSE == 0).AND.(NSTEP < 1)) TE=TIM$/;"	l	subroutine:TWELL	file:
9	units.f	/^    9    DO 10 I=J,MXU2$/;"	l	subroutine:MAKESI	file:
9	units.f	/^    9 NO=I$/;"	l	subroutine:CONVRT	file:
9	visgrid.f	/^    9       FORMAT(' ERROR # 418, USER PROGRAM ERROR IN DEPTHMOD')$/;"	l	subroutine:VISGRID	file:
9	vistab.f	/^    9 FORMAT('$!VarSet |XAXTITLE| = "',50A1)$/;"	l	subroutine:VTABDAT	file:
9	vistab.f	/^    9 FORMAT(100A1)$/;"	l	subroutine:CPYLAYOUT	file:
90	ebdary.f	/^   90 IF (L-LV1.GT.65) THEN$/;"	l	subroutine:EGETVAL	file:
90	read2.f	/^   90 IF (L-LV1.GT.65) THEN$/;"	l	subroutine:GETVAL	file:
90	read3.f	/^   90 IF (L-LV1.GT.65) THEN$/;"	l	subroutine:GETVAL2	file:
900	comp.f	/^  900 CALL CPEXP(PROG,IC1,IC2,KODE,R,VNAM,KVDAT,CARRAY,LCSTG,KERR,$/;"	l	subroutine:CPPRG	file:
901	comp.f	/^  901 KERR=1$/;"	l	subroutine:CPEXP	file:
902	comp.f	/^  902 KERR=2$/;"	l	subroutine:CPEXP	file:
903	comp.f	/^  903 KERR=3$/;"	l	subroutine:CPEXP	file:
904	comp.f	/^  904 KERR=4$/;"	l	subroutine:CPEXP	file:
905	comp.f	/^  905 KERR=5$/;"	l	subroutine:CPEXP	file:
906	comp.f	/^  906 KERR=6$/;"	l	subroutine:CPEXP	file:
907	comp.f	/^  907 KERR=7$/;"	l	subroutine:CPEXP	file:
908	comp.f	/^  908 KERR=8$/;"	l	subroutine:CPEXP	file:
909	comp.f	/^  909 KERR=9$/;"	l	subroutine:CPEXP	file:
91	ebdary.f	/^   91 M=M+1$/;"	l	subroutine:EGETVAL	file:
91	idata.f	/^   91    XREC(I+1,N)=XREC(I,N)+DXREC(I,N)$/;"	l	subroutine:SETGEOM	file:
91	idata.f	/^   91    XREC(I+1,N)=XREC(I,N)+DXREC(I,N)$/;"	l	subroutine:SETGEOMNEW	file:
91	read2.f	/^   91 M=M+1$/;"	l	subroutine:GETVAL	file:
91	read3.f	/^   91 M=M+1$/;"	l	subroutine:GETVAL2	file:
910	comp.f	/^  910 KDIM=.TRUE.$/;"	l	subroutine:CPPRG	file:
910	comp.f	/^  910 KERR=10$/;"	l	subroutine:CPEXP	file:
910	tbdary.f	/^ 910  continue$/;"	l	subroutine:buildFDIR	file:
911	comp.f	/^  911 KERR=11$/;"	l	subroutine:CPEXP	file:
912	comp.f	/^  912 KERR=12$/;"	l	subroutine:CPEXP	file:
913	comp.f	/^  913 KERR=13$/;"	l	subroutine:CPEXP	file:
914	comp.f	/^  914 KERR=14$/;"	l	subroutine:CPEXP	file:
915	comp.f	/^  915 KERR=15$/;"	l	subroutine:CPEXP	file:
916	comp.f	/^  916 KERR=16$/;"	l	subroutine:CPEXP	file:
92	ebdary.f	/^   92 CALL PUTERR(NER,E,A(NS),M,L-NS+1)$/;"	l	subroutine:EGETVAL	file:
92	idata.f	/^   92    YREC(J+1,N)=YREC(J,N)+DYREC(J,N)$/;"	l	subroutine:SETGEOM	file:
92	idata.f	/^   92    YREC(J+1,N)=YREC(J,N)+DYREC(J,N)$/;"	l	subroutine:SETGEOMNEW	file:
92	read2.f	/^   92 CALL PUTERR(NER,E,A(NS),M,L-NS+1)$/;"	l	subroutine:GETVAL	file:
92	read3.f	/^   92 CALL PUTERR(NER,E,A(NS),M,L-NS+1)$/;"	l	subroutine:GETVAL2	file:
920	comp.f	/^  920 CALL NUMGET(PROG(IC1),IC2-IC1+1,N,VAL,K)$/;"	l	subroutine:CPPRG	file:
920	tbdary.f	/^ 920  continue$/;"	l	subroutine:buildF1Neum	file:
93	idata.f	/^   93    ZREC(K+1,N)=ZREC(K,N)+DZREC(K,N)$/;"	l	subroutine:SETGEOM	file:
93	idata.f	/^   93    ZREC(K+1,N)=ZREC(K,N)+DZREC(K,N)$/;"	l	subroutine:SETGEOMNEW	file:
930	comp.f	/^  930 NKODU=NKODU+1$/;"	l	subroutine:CPPRG	file:
930	tbdary.f	/^ 930  continue$/;"	l	subroutine:buildF2Neum	file:
940	comp.f	/^  940 J=1$/;"	l	subroutine:CPPRG	file:
941	comp.f	/^  941 L=I$/;"	l	subroutine:CPPRG	file:
942	comp.f	/^  942 CALL CPEXP(PROG,IC1,L,KODE,R,VNAM,KVDAT,CARRAY,LCSTG,KERR,$/;"	l	subroutine:CPPRG	file:
95	ebdary.f	/^   95 LQ=.TRUE.$/;"	l	subroutine:EGETVAL	file:
95	read2.f	/^   95 LQ=.TRUE.$/;"	l	subroutine:GETVAL	file:
95	read3.f	/^   95 LQ=.TRUE.$/;"	l	subroutine:GETVAL2	file:
950	comp.f	/^  950 NDOU=NDOU+1$/;"	l	subroutine:CPPRG	file:
950	tbdary.f	/^ 950  continue$/;"	l	subroutine:getRHSbd	file:
951	comp.f	/^  951 IC1=IC1+1$/;"	l	subroutine:CPPRG	file:
952	comp.f	/^  952 CONTINUE$/;"	l	subroutine:CPPRG	file:
953	comp.f	/^  953    CONTINUE$/;"	l	subroutine:CPPRG	file:
954	comp.f	/^  954 CONTINUE$/;"	l	subroutine:CPPRG	file:
955	comp.f	/^  955 KODE(1,NKODU-2)=28$/;"	l	subroutine:CPPRG	file:
96	ebdary.f	/^   96 CONTINUE$/;"	l	subroutine:EGETVAL	file:
96	read2.f	/^   96 CONTINUE$/;"	l	subroutine:GETVAL	file:
96	read3.f	/^   96 CONTINUE$/;"	l	subroutine:GETVAL2	file:
960	comp.f	/^  960 GO TO 10$/;"	l	subroutine:CPPRG	file:
97	ebdary.f	/^   97 LQ=.TRUE.$/;"	l	subroutine:EGETVAL	file:
97	read2.f	/^   97 LQ=.TRUE.$/;"	l	subroutine:GETVAL	file:
97	read3.f	/^   97 LQ=.TRUE.$/;"	l	subroutine:GETVAL2	file:
970	comp.f	/^  970 IF (NIFU.EQ.0.OR.KNDIF(NIFU).NE.1) GO TO 813$/;"	l	subroutine:CPPRG	file:
98	ebdary.f	/^   98 NERR=NERR+1$/;"	l	subroutine:EGETVAL	file:
98	read2.f	/^   98 NERR=NERR+1$/;"	l	subroutine:GETVAL	file:
98	read3.f	/^   98 NERR=NERR+1$/;"	l	subroutine:GETVAL2	file:
980	comp.f	/^  980 IF (NIFU.EQ.0.OR.KNDIF(NIFU).EQ.0) GO TO 813$/;"	l	subroutine:CPPRG	file:
99	divide.f	/^   99 CONTINUE$/;"	l	subroutine:DIVIDE	file:
99	earray.f	/^   99 WRITE(0,*) 'ERROR IN EFRAC_ARRAY,KERR=',KERR$/;"	l	subroutine:EFRAC_ARRAY	file:
99	earray.f	/^   99 WRITE(0,*) 'Errors in EARRAY'$/;"	l	subroutine:EARRAY	file:
99	fcns.f	/^   99 format(A20,2X,I4,2X,3(I4),2X,3(E12.3))$/;"	l	subroutine:CWCprint	file:
99	mfarray.f	/^   99 RETURN$/;"	l	subroutine:MFARRAY	file:
99	tarray.f	/^   99 RETURN$/;"	l	subroutine:TARRAY	file:
990	comp.f	/^  990 CALL CPEXP(PROG,IC1,IC2,KODE,R,VNAM,KVDAT,CARRAY,LCSTG,KERR,$/;"	l	subroutine:CPPRG	file:
991	comp.f	/^  991 KODE(J,NKODU)=VREGR(I)$/;"	l	subroutine:CPPRG	file:
999	comp.f	/^  999 ERRMSG=ERRS(KERR)$/;"	l	subroutine:CPEXP	file:
999	fcns.f	/^  999 format(A20,2X,I2,2X,3(I4),2X,27(E12.3))$/;"	l	subroutine:CWEPRINT	file:
999	pre_prcss0.f90	/^999 return$/;"	l	subroutine:isort	file:
A	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
A	scrat1.f	/^      CHAR/;"	v	module:scrat1mod
ACROSSEDGE	tetgen.h	/^                    TOUCHEDGE, TOUCHFACE, ACROSSVERT, ACROSSEDGE, ACROSSFACE, $/;"	e	enum:tetgenmesh::interresult
ACROSSFACE	tetgen.h	/^                    TOUCHEDGE, TOUCHFACE, ACROSSVERT, ACROSSEDGE, ACROSSFACE, $/;"	e	enum:tetgenmesh::interresult
ACROSSSEG	tetgen.h	/^                    COLLISIONFACE, ACROSSSEG, ACROSSSUB};$/;"	e	enum:tetgenmesh::interresult
ACROSSSUB	tetgen.h	/^                    COLLISIONFACE, ACROSSSEG, ACROSSSUB};$/;"	e	enum:tetgenmesh::interresult
ACROSSVERT	tetgen.h	/^                    TOUCHEDGE, TOUCHFACE, ACROSSVERT, ACROSSEDGE, ACROSSFACE, $/;"	e	enum:tetgenmesh::interresult
ACTIVE_NODE	model_module0.f90	/^INTEGER, ALLOCATABLE:: NODE_ST_GDOF(:),ACTIVE_NODE(/;"	v	module:system
ACTIVE_NODE_LID	model_module0.f90	/^                       LID_2IJK(:,:),ACTIVE_NODE_LID(/;"	v	module:system
ACTTIM	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
ACUTEVERTEX	tetgen.h	/^  enum verttype {UNUSEDVERTEX, DUPLICATEDVERTEX, RIDGEVERTEX, ACUTEVERTEX,$/;"	e	enum:tetgenmesh::verttype
ADD_ROCK_DEN	elastic.f	/^      SUBROUTINE ADD_ROCK_DEN(/;"	s
AIR	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
ALLZONES	visual.h	/^     &    VIS_BINARY, TECEXISTS, ALLZONES, N_VIS_BINARY,$/;"	v
APPENDMAP	initial.f	/^      SUBROUTINE APPENDMAP(/;"	s
APPROXIMANT	eprojections.f	/^      SUBROUTINE APPROXIMANT(/;"	s
APPROXIMANT_NEWTON	eprojections.f	/^      SUBROUTINE APPROXIMANT_NEWTON(/;"	s
ARR	visual9.f	/^        DOUBLE PRECISION, ALLOCATABLE :: ARR(/;"	k	type:tecbinblk
AddFace	impfa.f	/^      subroutine AddFace(/;"	s
AddaxToby	fcns.f	/^      SUBROUTINE AddaxToby(/;"	s
BADELEMENT	tetgen.h	/^                     INSTAR, BADELEMENT};$/;"	e	enum:tetgenmesh::locateresult
BATCH	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
BB	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
BBB	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
BCDIRICHLET	mpfaary.h	/^      INTEGER BCNEUMANN,BCDIRICHLET,BCNOFLOW,BCROBIN$/;"	v
BCF	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
BCNEUMANN	mpfaary.h	/^      INTEGER BCNEUMANN,BCDIRICHLET,BCNOFLOW,BCROBIN$/;"	v
BCNOFLOW	mpfaary.h	/^      INTEGER BCNEUMANN,BCDIRICHLET,BCNOFLOW,BCROBIN$/;"	v
BD2	bdaryin.f	809;"	c	subroutine:BDPROG
BD2	bdaryin.f	873;"	c	subroutine:BDMOD
BDARYIJK	ebdary.h	/^     &         N_TRACBD,ITYPE_BOUNDARY,BDARYIJK,N_DISPBD,N_TYPEBD,$/;"	v
BDARYIN	bdaryin.f	/^      SUBROUTINE BDARYIN /;"	s
BDCLEARFLUX	bdaryout.f	/^      SUBROUTINE BDCLEARFLUX(/;"	s
BDMOD	bdaryin.f	/^      SUBROUTINE BDMOD /;"	s
BDPROG	bdaryin.f	/^      SUBROUTINE BDPROG /;"	s
BINARY_INPUTS	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
BLACKI	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
BLOCK	layout.h	/^C  XYZ111(i,n) = X, Y, AND Z VALUES OF OUTSIDE CORNER OF GRID BLOCK 1,1,1$/;"	v
BND_DEP	boundary.h	/^     &     BND_DEP,$/;"	v
BND_FLUX	boundary.h	/^      COMMON \/BDBAL\/ BND_FLUX,BNDOUT$/;"	v
BND_OUT	bdaryout.f	/^      SUBROUTINE BND_OUT(/;"	s
BND_VOL	boundary.h	/^     &     BND_VOL,$/;"	v
BODYFORCE_INPUT	emodel.h	/^      LOGICAL  PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
BODYFORCE_INPUT	emodel.h	/^     &         PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
BOUNDSET	bdaryin.f	/^      SUBROUTINE BOUNDSET(/;"	s
BUGKEY	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
BUGOPEN	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
BUILDA	buildmpfa.f	/^      SUBROUTINE BUILDA(/;"	s
BUILDB	buildmpfa.f	/^      SUBROUTINE BUILDB(/;"	s
BUILDFGRAV	buildmpfa.f	/^      SUBROUTINE BUILDFGRAV(/;"	s
BULKDEN_1PH	elastic.f	/^      SUBROUTINE BULKDEN_1PH(/;"	s
BULKDEN_2PH	elastic.f	/^      SUBROUTINE BULKDEN_2PH(/;"	s
BULKUPSCALE	eprojections.f	/^      SUBROUTINE BULKUPSCALE /;"	s
BaTriLinG27	fcns.f	/^      subroutine BaTriLinG27(/;"	s
BasisTrilin	fcns.f	/^      double precision function BasisTrilin(/;"	f
C	boundary.h	/^C     &     ,BFLUX$/;"	v
C	layout.h	/^C    6 = MPFA boundary treating as internal boundary, nonmatching case$/;"	v
C	rock.h	/^C     &       ,FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
C	rock.h	/^C     &       ,FRACK0,FRACK1$/;"	v
C	wells.h	/^C               = 2 ==> WATER INJECTION, MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 3 ==> GAS INJECTION, PRESSURE SPECIFIED$/;"	v
C	wells.h	/^C               = 31 ==> PRODUCTION, PRESSURE SPECIFIED$/;"	v
C	wells.h	/^C               = 32 ==> PRODUCTION, TOTAL MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 33 ==> PRODUCTION, OIL MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 34 ==> PRODUCTION, GAS MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 35 ==> PRODUCTION, WATER MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 36 ==> PRODUCTION, WATER+OIL MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 37 ==> PRODUCTION, TOTAL RESERVOIR VOLUME RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 38 ==> PRODUCTION, OIL RESERVOIR VOLUME RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 39 ==> PRODUCTION, GAS RESERVOIR VOLUME RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 4 ==> GAS INJECTION, MASS RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 5 ==> WATER INJECTION, RESERVOIR VOLUME RATE SPECIFIED$/;"	v
C	wells.h	/^C               = 6 ==> GAS INJECTION, RESERVOIR VOLUME RATE SPECIFIED$/;"	v
C	wells.h	/^C     & ,SXT(2*(13+1))$/;"	v
CALCA	buildmpfa.f	/^      SUBROUTINE CALCA(/;"	s
CALCAINVTRAN	impfa.f	/^      SUBROUTINE CALCAINVTRAN(/;"	s
CALCFGRAV	buildmpfa.f	/^      SUBROUTINE CALCFGRAV(/;"	s
CALCPERMINV	buildmpfa.f	/^      SUBROUTINE CALCPERMINV(/;"	s
CALCSOURCE	terrcalc.f	/^      SUBROUTINE CALCSOURCE(/;"	s
CALC_EDGE_VEL_MID1	terrcalc.f	/^      SUBROUTINE CALC_EDGE_VEL_MID1(/;"	s
CALC_EDGE_VEL_MID2	terrcalc.f	/^      SUBROUTINE CALC_EDGE_VEL_MID2(/;"	s
CALC_GELEI	hypre.f	/^      SUBROUTINE CALC_GELEI(/;"	s
CALC_GSAVE_MULTIRATE	tprop.f	/^      SUBROUTINE CALC_GSAVE_MULTIRATE /;"	s
CALC_GSAVE_OLDTIM1	tprop.f	/^      SUBROUTINE CALC_GSAVE_OLDTIM1 /;"	s
CALC_GSAVE_OLDTIMP	tprop.f	/^      SUBROUTINE CALC_GSAVE_OLDTIMP /;"	s
CALC_GSAVE_OLDTIMP4	tprop.f	/^      SUBROUTINE CALC_GSAVE_OLDTIMP4 /;"	s
CALC_ILOW_IHIGH	hypre.f	/^      SUBROUTINE CALC_ILOW_IHIGH(/;"	s
CALC_KONVG_N_AUX	tprop.f	/^      SUBROUTINE CALC_KONVG_N_AUX /;"	s
CALC_LSIZE	hypre.f	/^      SUBROUTINE CALC_LSIZE(/;"	s
CALC_P_SUP_ERR1	terrcalc.f	/^      SUBROUTINE CALC_P_SUP_ERR1(/;"	s
CALC_P_SUP_ERR2	terrcalc.f	/^      SUBROUTINE CALC_P_SUP_ERR2(/;"	s
CALLWELLIJK3	impfa.f	/^      SUBROUTINE CALLWELLIJK3(/;"	s
CC2ANSIex	makefile	/^CC2ANSIex = .#(S)cpluscomm2ansi$/;"	m
CELL	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	t	typeref:struct:cell	file:
CENTERJAC	buildmpfa.f	/^      SUBROUTINE CENTERJAC(/;"	s
CHANGE_MECH_BC	pre_prcss0.f90	/^SUBROUTINE CHANGE_MECH_BC(/;"	s
CHAR	cputime.c	/^   typedef unsigned char    CHAR;        \/\/ fortran character$/;"	t	file:
CHAR	ctypes.h	/^   typedef unsigned char    CHAR;        \/\/ fortran character$/;"	t
CHECK	putil.f	/^      SUBROUTINE CHECK /;"	s
CHEM	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
CLEARWELLS	twell.f	/^      SUBROUTINE CLEARWELLS /;"	s
CLOSE_GEA	ipars.f	/^      SUBROUTINE CLOSE_GEA(/;"	s
CMFMFE	moddefs.h	/^     &	TRCHEM,POROHEX,CMFMFE,SIMFMFE,HIMFMFE,AHYDROI$/;"	v
CMPDRV	comp.f	/^      SUBROUTINE CMPDRV(/;"	s
CMPSPC	comp.f	286;"	c	subroutine:CMPDRV
COARSEN_TYPE	hypre.h	/^     &   COARSEN_TYPE,MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                &$/;"	v
COARSEN_TYPE	hypre.h	/^     &   HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,COARSEN_TYPE,                      &$/;"	v
COEFB	emodel.h	/^      REAL*8  COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COEFB	emodel.h	/^     &         COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COEFM	emodel.h	/^      REAL*8  COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COEFM	emodel.h	/^     &         COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COEFN	emodel.h	/^      REAL*8  COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COEFN	emodel.h	/^     &         COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
COLLISIONFACE	tetgen.h	/^                    COLLISIONFACE, ACROSSSEG, ACROSSSUB};$/;"	e	enum:tetgenmesh::interresult
COMMI	many.f	/^      SUBROUTINE COMMI /;"	s
COMP	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
COMPPRDEN	tbdary.f	/^      SUBROUTINE COMPPRDEN(/;"	s
COMPUTERESID	ecompute.f	/^      SUBROUTINE COMPUTERESID(/;"	s
COMPUTE_KONVG_NORM	tprop.f	/^      SUBROUTINE COMPUTE_KONVG_NORM(/;"	s
COMPUTE_NORM	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
COMP_HEAD	tvisual.f	/^      SUBROUTINE COMP_HEAD(/;"	s
COMP_HEADW	tvisual.f	/^      SUBROUTINE COMP_HEADW(/;"	s
CONNECT	visual9.f	/^        INTEGER*4, ALLOCATABLE :: CONNECT(/;"	k	type:tecbinblk
CONVRT	units.f	/^      SUBROUTINE CONVRT /;"	s
COORD2DISP	elastic.f	/^      SUBROUTINE COORD2DISP(/;"	s
COORD2PERM	buildmpfa.f	/^      SUBROUTINE COORD2PERM(/;"	s
COPY	makefile	/^COPY=cp$/;"	m
COPYARYR8	fcns.f	/^      SUBROUTINE COPYARYR8(/;"	s
COPYIT	makefile	/^COPYIT=$(COPY) $? $(WORK)$/;"	m
COPYIT1	makefile	/^COPYIT1=$(COPY) $< $(WORK)$/;"	m
COPYLRHS	buildmpfa.f	/^      SUBROUTINE COPYLRHS(/;"	s
COPYLTRAN	buildmpfa.f	/^      SUBROUTINE COPYLTRAN(/;"	s
COUNTE	initial.f	/^      SUBROUTINE COUNTE /;"	s
COUPLED_ITER	hypre.h	/^     &   COUPLED_ITER,POROHEXLINT$/;"	v
COUPLED_ITER	hypre.h	/^     &   COUPLED_ITER,POROHEXLINT,HYPRE_EVFEM,DBGEV$/;"	v
COUPLE_FLAG	emodel.h	/^      LOGICAL COUPLE_FLAG,GRAVITY_FLAG,INITIAL_FLAG$/;"	v
COUPLE_FLAG	emodel.h	/^     &    COUPLE_FLAG,GRAVITY_FLAG,INITIAL_FLAG$/;"	v
CPEXP	comp.f	/^      SUBROUTINE CPEXP(/;"	s
CPINIT	comp.f	/^      SUBROUTINE CPINIT(/;"	s
CPPRG	comp.f	/^      SUBROUTINE CPPRG(/;"	s
CPYARYI4	initial.f	/^      SUBROUTINE CPYARYI4 /;"	s
CPYARYR4	initial.f	/^      SUBROUTINE CPYARYR4 /;"	s
CPYARYR8	initial.f	/^      SUBROUTINE CPYARYR8 /;"	s
CPYARYR8N	initial.f	/^      SUBROUTINE CPYARYR8N(/;"	s
CPYINITPORE	elastic.f	/^      SUBROUTINE CPYINITPORE(/;"	s
CPYLAYOUT	vistab.f	/^      SUBROUTINE CPYLAYOUT(/;"	s
CPYPERMTOR8	elastic.f	/^      SUBROUTINE CPYPERMTOR8(/;"	s
CREATE	idata.f	/^      SUBROUTINE CREATE /;"	s
CURRENT	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
CURRENT	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
CVACOMP	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVACONC	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP$/;"	v
CVACONC	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVADENS	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP$/;"	v
CVADENS	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVADIST	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVAMASS	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVAPERM	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVAPRES	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVATEMP	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVATIME	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVAVISC	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP$/;"	v
CVAVISC	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVAVOLL	unitsex.h	/^     & CVAMASS,CVADIST,CVAVOLL,CVATIME,CVATEMP,CVAPRES,CVAPERM,$/;"	v
CVAWELG	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP$/;"	v
CVAWELG	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVAWELL	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP$/;"	v
CVAWELL	unitsex.h	/^     & CVAWELL,CVAWELG,CVAVISC,CVADENS,CVACONC,CVACOMP,$/;"	v
CVMCOMP	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVMCONC	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVMDENS	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVMDIST	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMDIST	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMMASS	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMMASS	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMPERM	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMPERM	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMPRES	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMPRES	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMTEMP	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMTEMP	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMTIME	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMTIME	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMVISC	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVMVOLL	unitsex.h	/^     $ CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMVOLL	unitsex.h	/^     & CVMMASS,CVMDIST,CVMVOLL,CVMTIME,CVMTEMP,CVMPRES,CVMPERM,$/;"	v
CVMWELG	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVMWELL	unitsex.h	/^     & CVMWELL,CVMWELG,CVMVISC,CVMDENS,CVMCONC,CVMCOMP,$/;"	v
CVTOL	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
CVTOL	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
CVTOL1	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
CVTOL1	tbaldat.h	/^     & CVTOL1, CVTOL2, WELI(50), WELP(50),$/;"	v
CVTOL2	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
CVTOL2	tbaldat.h	/^     & CVTOL1, CVTOL2, WELI(50), WELP(50),$/;"	v
CWCprint	fcns.f	/^      subroutine CWCprint(/;"	s
CWEPRINT	fcns.f	/^      subroutine CWEPRINT(/;"	s
CYCLE_TYPE	hypre.h	/^      INTEGER LSOL_ITMAX,HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,                   &$/;"	v
CYCLE_TYPE	hypre.h	/^     &   HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,COARSEN_TYPE,                      &$/;"	v
Cells	readdatc.c	/^CELL * Cells;$/;"	v
CurrentModel	memory.h	/^MEX int   CurrentModel;		\/\/ which model is currently active$/;"	v
DATASPACES	layout.h	/^     &  DATASPACES,MPI_EXTERNAL,ADAPTIVITY$/;"	v
DATS	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
DATTL	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
DCOFN	wells.h	/^     & DCOFN,ELEXYZ,ELELAMI,TIMHIS$/;"	v
DCOFW	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
DEADVERTEX	tetgen.h	/^                 FREEVOLVERTEX, NREGULARVERTEX, DEADVERTEX};$/;"	e	enum:tetgenmesh::verttype
DEALII	layout.h	/^      LOGICAL MYBLK,MODPROC,MFMFE_BRICKS,PLOT_MYPRC,DEALII,$/;"	v
DEBUGW	ipars.f	/^      SUBROUTINE DEBUGW /;"	s
DEBUG_FLAGS	makefile	/^DEBUG_FLAGS=1 $/;"	m
DEBUG_GEA	ipars.f	/^      SUBROUTINE DEBUG_GEA(/;"	s
DEBUG_GEA_MPFA	ipars.f	/^      SUBROUTINE DEBUG_GEA_MPFA(/;"	s
DEFAULT	read1.f	/^      SUBROUTINE DEFAULT /;"	s
DELTIM	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
DELTIM	control.h	/^      REAL*8 TIM,DELTIM,RTIMIN,ACTTIM(10),DTIMOUT,DTIMRES,STEPMULT,            &$/;"	v
DEP	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
DEP	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
DEPBOT	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
DEPMP	bdaryin.f	996;"	c	subroutine:DOBDARYW
DEPTH1	initial.f	/^      SUBROUTINE DEPTH1 /;"	s
DEPTH1_TOP	initial.f	/^      SUBROUTINE DEPTH1_TOP /;"	s
DEPTH2	initial.f	/^      SUBROUTINE DEPTH2 /;"	s
DEPTH3	impfa.f	/^      SUBROUTINE DEPTH3 /;"	s
DEPTOP	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
DINIT	tfluidsc.h	/^      COMMON \/TFLUIDS\/FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
DINIT	tfluidsc.h	/^      REAL*4 FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
DINIT	tfluidsc.h	/^C  DINIT  = INITIAL REFERENCE DEPTH, ft$/;"	v
DIRname	visual.c	/^char DIRname [MAXFNAMELEN] ;$/;"	v
DISJOINT	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	e	enum:tetgenmesh::interresult
DISP2COORD	elastic.f	/^      SUBROUTINE DISP2COORD(/;"	s
DISPOUT	emodel.h	/^      INTEGER  PEFLOW,NERRC,DISPOUT,MECH_BC_NCASE$/;"	v
DISPOUT	emodel.h	/^     &         PEFLOW,NERRC,DISPOUT,                                           &$/;"	v
DISP_BC_RESIDUE	model_module0.f90	/^REAL(KIND=DOUBLE), ALLOCATABLE:: DISP_BC_RESIDUE(/;"	v	module:system
DIVIDE	divide.f	/^      SUBROUTINE DIVIDE /;"	s
DNfromNeighbor	impfa.f	/^      subroutine DNfromNeighbor(/;"	s
DOBDARY	bdaryin.f	/^      SUBROUTINE DOBDARY(/;"	s
DOBDARYW	bdaryin.f	/^      SUBROUTINE DOBDARYW(/;"	s
DODEPTH	prop.f	/^      SUBROUTINE DODEPTH /;"	s
DOROCK	prop.f	/^      SUBROUTINE DOROCK /;"	s
DOROCK2	impfa.f	/^      SUBROUTINE DOROCK2 /;"	s
DOWN	layout.h	/^      REAL*8 GRAV,GMAG,DOWN,XREC,YREC,ZREC,CONV_FACTOR$/;"	v
DP_FACE	ebdary.h	/^     &         IBD_FACE,DP_FACE,IBD_DIR,IBD_TYPE,IFACE$/;"	v
DRESID	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
DTIMMAX	control.h	/^     & DVISOUT,DTIMMUL,DTIMMAX,DTIMMIN,DTIMTOL,BALANCE(MXNUMEQ,MXMOD,8),       &$/;"	v
DTIMMIN	control.h	/^     & DVISOUT,DTIMMUL,DTIMMAX,DTIMMIN,DTIMTOL,BALANCE(MXNUMEQ,MXMOD,8),       &$/;"	v
DTIMMUL	control.h	/^     & DVISOUT,DTIMMUL,DTIMMAX,DTIMMIN,DTIMTOL,BALANCE(MXNUMEQ,MXMOD,8),       &$/;"	v
DTIMOUT	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
DTIMRES	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
DTIMTOL	control.h	/^     & DVISOUT,DTIMMUL,DTIMMAX,DTIMMIN,DTIMTOL,BALANCE(MXNUMEQ,MXMOD,8),       &$/;"	v
DTSTAB	control.h	/^     & DTSTAB,                                                                 &$/;"	v
DUPLICATEDVERTEX	tetgen.h	/^  enum verttype {UNUSEDVERTEX, DUPLICATEDVERTEX, RIDGEVERTEX, ACUTEVERTEX,$/;"	e	enum:tetgenmesh::verttype
DVISOUT	control.h	/^     & DVISOUT,DTIMMUL,DTIMMAX,DTIMMIN,DTIMTOL,BALANCE(MXNUMEQ,MXMOD,8),       &$/;"	v
DWELBHP	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
DWELDEN	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
DXREC	layout.h	/^      REAL*4 DXREC,DYREC,DZREC,XYZ111$/;"	v
DYDX	utldat.h	/^      COMMON \/TABLES\/ TABX,TABY,DYDX,TRANC1(76),VALUES(20000),$/;"	v
DYDX	utldat.h	/^      REAL*8 TABX,TABY,DYDX,TRANC1,VALUES,XYZERO$/;"	v
DYREC	layout.h	/^      REAL*4 DXREC,DYREC,DZREC,XYZ111$/;"	v
DZREC	layout.h	/^      REAL*4 DXREC,DYREC,DZREC,XYZ111$/;"	v
EARRAY	earray.f	/^      SUBROUTINE EARRAY /;"	s
EAVERAGE_DISP	elastic.f	/^      SUBROUTINE EAVERAGE_DISP(/;"	s
EBDARY	ebdary.f	/^      SUBROUTINE EBDARY(/;"	s
EBDARY_BE	ebdary.f	/^      SUBROUTINE EBDARY_BE(/;"	s
EBDARY_BEWI4	ebdary.f	/^      SUBROUTINE EBDARY_BEWI4(/;"	s
EBDARY_BEWR8	ebdary.f	/^      SUBROUTINE EBDARY_BEWR8(/;"	s
EBDARY_BE_WRK	ebdary.f	/^      SUBROUTINE EBDARY_BE_WRK(/;"	s
EBDARY_DP	ebdary.f	/^      SUBROUTINE EBDARY_DP(/;"	s
EBDARY_DPWI4	ebdary.f	/^      SUBROUTINE EBDARY_DPWI4(/;"	s
EBDARY_DPWR8	ebdary.f	/^      SUBROUTINE EBDARY_DPWR8(/;"	s
EBDARY_FACES	ebdary.f	/^      SUBROUTINE EBDARY_FACES(/;"	s
EBDARY_UPDATE	ebdary.f	/^      SUBROUTINE EBDARY_UPDATE(/;"	s
EBDARY_WRK_BE	ebdary.f	/^      SUBROUTINE EBDARY_WRK_BE(/;"	s
EBUILDKEYCP	elastic.f	/^      SUBROUTINE EBUILDKEYCP(/;"	s
EBUILDKEYCPW	elastic.f	/^      SUBROUTINE EBUILDKEYCPW(/;"	s
ECOMPACTFG	elastic.f	/^      SUBROUTINE ECOMPACTFG(/;"	s
ECOMPACTI4	elastic.f	/^      SUBROUTINE ECOMPACTI4(/;"	s
ECOMPACTR8	elastic.f	/^      SUBROUTINE ECOMPACTR8(/;"	s
ECOMPACT_GELEI	elastic.f	/^      SUBROUTINE ECOMPACT_GELEI(/;"	s
ECUTTIME	estep.f	/^      SUBROUTINE ECUTTIME(/;"	s
EDGEBOUNDS	eprojections.f	/^      SUBROUTINE EDGEBOUNDS(/;"	s
EDISP_BE_WRK	ebdary.f	/^      SUBROUTINE EDISP_BE_WRK(/;"	s
EDISP_FACES	ebdary.f	/^      SUBROUTINE EDISP_FACES(/;"	s
EDISP_WRK_BE	ebdary.f	/^      SUBROUTINE EDISP_WRK_BE(/;"	s
EFACE_BE_WRK	ebdary.f	/^      SUBROUTINE EFACE_BE_WRK(/;"	s
EFACE_WRK_BE	ebdary.f	/^      SUBROUTINE EFACE_WRK_BE(/;"	s
EFFEC_MEAN_STRESS	elastic.f	/^      SUBROUTINE EFFEC_MEAN_STRESS(/;"	s
EFRAC_AFFINE	elastic.f	/^      SUBROUTINE EFRAC_AFFINE(/;"	s
EFRAC_ARRAY	earray.f	/^      SUBROUTINE EFRAC_ARRAY(/;"	s
EGETVAL	ebdary.f	/^      SUBROUTINE EGETVAL /;"	s
EGETVALS	ebdary.f	/^      ENTRY EGETVALS /;"	e	subroutine:EGETVAL
EGET_GELEI_LSIZE	elastic.f	/^      SUBROUTINE EGET_GELEI_LSIZE(/;"	s
EGHIGH	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
EGHIGH	rock.h	/^C  EGLOW,EGHIGH = GAS KR EXPONENT$/;"	v
EGLOW	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
EIADAT	eidata.f	/^      SUBROUTINE EIADAT(/;"	s
EISDAT	eidata.f	/^      SUBROUTINE EISDAT(/;"	s
EITER	estep.f	/^      SUBROUTINE EITER /;"	s
EIVDAT	eivdat.f	/^      SUBROUTINE EIVDAT(/;"	s
ELECONS	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
ELEDUM	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
ELEGEOM	wells.h	/^     &       ELEGEOM,ELEDEP$/;"	v
ELEGET	putil.f	/^      SUBROUTINE ELEGET /;"	s
ELEIN	fcns.f	/^      logical function ELEIN(/;"	f
ELELAMI	wells.h	/^     & DCOFN,ELEXYZ,ELELAMI,TIMHIS$/;"	v
ELELEN	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
ELEPERM	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
ELEPUT	putil.f	/^      SUBROUTINE ELEPUT /;"	s
ELERATE	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
ELEXYZ	wells.h	/^     & DCOFN,ELEXYZ,ELELAMI,TIMHIS$/;"	v
ELE_NR_TOL	model_module0.f90	/^   real(kind=double) ELE_NR_TOL /;"	v	module:control
ELM_MAX_ITER	model_module0.f90	/^   integer ELM_MAX_ITER /;"	v	module:control
EMASS_1NC	ecompute.f	/^      SUBROUTINE EMASS_1NC(/;"	s
EMASS_2NC	ecompute.f	/^      SUBROUTINE EMASS_2NC(/;"	s
ENCSEGMENT	tetgen.h	/^                     ENCVERTEX, ENCSEGMENT, ENCSUBFACE, NEARVERTEX, NONREGULAR,$/;"	e	enum:tetgenmesh::locateresult
ENCSUBFACE	tetgen.h	/^                     ENCVERTEX, ENCSEGMENT, ENCSUBFACE, NEARVERTEX, NONREGULAR,$/;"	e	enum:tetgenmesh::locateresult
ENCVERTEX	tetgen.h	/^                     ENCVERTEX, ENCSEGMENT, ENCSUBFACE, NEARVERTEX, NONREGULAR,$/;"	e	enum:tetgenmesh::locateresult
ENODE_UPDATE	elastic.f	/^      SUBROUTINE ENODE_UPDATE(/;"	s
ENTRYP	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
EPC	rock.h	/^     &       EPC,PCLOW,IFTTHETA$/;"	v
EPRES_BE_WRK	ebdary.f	/^      SUBROUTINE EPRES_BE_WRK(/;"	s
EPRES_WRK_BE	ebdary.f	/^      SUBROUTINE EPRES_WRK_BE(/;"	s
EPROCOUTPUT	elastic.f	/^      SUBROUTINE EPROCOUTPUT(/;"	s
EPROP	eidata.f	/^      SUBROUTINE EPROP(/;"	s
EPROP_DEFAULT	eidata.f	/^      SUBROUTINE EPROP_DEFAULT(/;"	s
EPRTBDDISP	elastic.f	/^      SUBROUTINE EPRTBDDISP(/;"	s
EPRTBDDISPW	elastic.f	/^      SUBROUTINE EPRTBDDISPW(/;"	s
EPRTDISP	elastic.f	/^      SUBROUTINE EPRTDISP(/;"	s
EPRTPRES	elastic.f	/^      SUBROUTINE EPRTPRES(/;"	s
EPSXX	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
EPSXX	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
EPSYY	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
EPSYY	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
EP_CUTBACK_FLAG	emodel.h	/^      INTEGER EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,            &$/;"	v
EP_CUTBACK_FLAG	emodel.h	/^     &      EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,              &$/;"	v
EP_SOLVER_FLAG	emodel.h	/^     &        MODEL_EP,EP_SOLVER_FLAG,NLOADSTEPS,CR_TYPE$/;"	v
EP_SOLVER_FLAG	emodel.h	/^     &      MODEL_EP,EP_TOL,MAT_TOL,EP_SOLVER_FLAG,NLOADSTEPS,                 &$/;"	v
EP_TOL	emodel.h	/^      REAL*8  EP_TOL,MAT_TOL$/;"	v
EP_TOL	emodel.h	/^     &      MODEL_EP,EP_TOL,MAT_TOL,EP_SOLVER_FLAG,NLOADSTEPS,                 &$/;"	v
EQUIT	erest.f	/^      SUBROUTINE EQUIT /;"	s
ERESTI	erest.f	/^      SUBROUTINE ERESTI(/;"	s
ERESTO	erest.f	/^      SUBROUTINE ERESTO /;"	s
ERGEAOUT	erest.f	/^      SUBROUTINE ERGEAOUT /;"	s
ERSR8	erest.f	/^      SUBROUTINE ERSR8 /;"	s
ESAVE	estep.f	/^      SUBROUTINE ESAVE(/;"	s
ESETARYI4N	ecompute.f	/^      SUBROUTINE ESETARYI4N(/;"	s
ESETARYR8N	ecompute.f	/^      SUBROUTINE ESETARYR8N(/;"	s
ESETUP_CRAC_IBC	elastic.f	/^      SUBROUTINE ESETUP_CRAC_IBC(/;"	s
ESETUP_ELEM_NODE	esetup3d.f	/^      SUBROUTINE ESETUP_ELEM_NODE(/;"	s
ESETUP_FNODE_TYPE	elastic.f	/^      SUBROUTINE ESETUP_FNODE_TYPE(/;"	s
ESETUP_FRAC_PROFILE	elastic.f	/^      SUBROUTINE ESETUP_FRAC_PROFILE(/;"	s
ESETUP_KEYOUT	esetup3d.f	/^      SUBROUTINE ESETUP_KEYOUT(/;"	s
ESETUP_OFNODE	elastic.f	/^      SUBROUTINE ESETUP_OFNODE(/;"	s
ESETUP_POROHEX	estep.f	/^      SUBROUTINE ESETUP_POROHEX(/;"	s
ESETUP_POROHEXW	estep.f	/^      SUBROUTINE ESETUP_POROHEXW(/;"	s
ESETVNAM	ebdary.f	/^      SUBROUTINE ESETVNAM(/;"	s
ESTDOUTA	estdout.f	/^      SUBROUTINE ESTDOUTA /;"	s
ESTDOUTS	estdout.f	/^      SUBROUTINE ESTDOUTS /;"	s
ESTEP1	estep.f	/^      SUBROUTINE ESTEP1 /;"	s
ESTEP2	estep.f	/^      SUBROUTINE ESTEP2 /;"	s
ESTEP3	estep.f	/^      SUBROUTINE ESTEP3 /;"	s
ESTRSOUT	emodel.h	/^      LOGICAL  PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
ESTRSOUT	emodel.h	/^     &         PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
ETDATA	eidata.f	/^      SUBROUTINE ETDATA(/;"	s
ETYPEBD_BE_WRK	ebdary.f	/^      SUBROUTINE ETYPEBD_BE_WRK(/;"	s
ETYPEBD_WRK_BE	ebdary.f	/^      SUBROUTINE ETYPEBD_WRK_BE(/;"	s
EUNFOLDFG	elastic.f	/^      SUBROUTINE EUNFOLDFG(/;"	s
EUNFOLDI4	elastic.f	/^      SUBROUTINE EUNFOLDI4(/;"	s
EUNFOLDR8	elastic.f	/^      SUBROUTINE EUNFOLDR8(/;"	s
EUNFOLD_GELEI	elastic.f	/^      SUBROUTINE EUNFOLD_GELEI(/;"	s
EUPDATECR	ecompute.f	/^      SUBROUTINE EUPDATECR(/;"	s
EVIS_INIT	evisual.f	/^      SUBROUTINE EVIS_INIT /;"	s
EVIS_OUTPUT	evisual.f	/^      SUBROUTINE EVIS_OUTPUT /;"	s
EVIS_TRANSL	evisual.f	/^      SUBROUTINE EVIS_TRANSL(/;"	s
EV_PRCBLK	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
EWHIGH	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
EWHIGH	rock.h	/^C  EWLOW,EWHIGH = WETTING PHASE KR EXPONENT$/;"	v
EWLOW	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
EXCDRV	comp.f	/^      ENTRY EXCDRV(/;"	e	subroutine:CMPDRV
EXEC	comp.f	/^      SUBROUTINE EXEC(/;"	s
EXENAM	makefile	/^EXENAM=ipars$/;"	m
EXMLST	many.f	/^      SUBROUTINE EXMLST /;"	s
EXTCOMP	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
EXTCOMP	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
EXTCONC	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
EXTCONC	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
EXTDENS	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
EXTDENS	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
EXTDIST	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTDIST	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTMASS	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTMASS	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTPERM	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTPERM	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTPRES	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTPRES	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTTEMP	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTTEMP	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTTIME	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTTIME	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTUIN	tdata.f	/^      SUBROUTINE EXTUIN /;"	s
EXTVISC	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
EXTVISC	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTVOLL	unitsex.h	/^      CHARACTER*20 EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,$/;"	v
EXTVOLL	unitsex.h	/^     & EXTMASS,EXTDIST,EXTVOLL,EXTTIME,EXTTEMP,EXTPRES,EXTPERM,$/;"	v
EXTWELG	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELG	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTWELG	unitsex.h	/^C         appear in EXTWELG, otherwise SCFEXT is set to FALSE.  Note that if$/;"	v
EXTWELGC	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELGC	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTWELL	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELL	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTWELLC	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELLC	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTWELX	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELX	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EXTWELXC	unitsex.h	/^     & EXTPERM,EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,$/;"	v
EXTWELXC	unitsex.h	/^     & EXTWELL,EXTWELLC,EXTWELG,EXTWELGC,EXTWELX,EXTWELXC,EXTVISC,$/;"	v
EcalcGELEI	elastic.f	/^      SUBROUTINE EcalcGELEI(/;"	s
EcalcLELEI_LSIZE	elastic.f	/^      SUBROUTINE EcalcLELEI_LSIZE(/;"	s
ElementArea	impfa.f	/^      subroutine ElementArea(/;"	s
External	unitsex.h	/^C Value External = (Value Internal) * CVMxxxx + CVAxxxx$/;"	v
F	tarydat.h	/^C  N_AINVF = A^(-1)*F, F = GRAVITY + CAPILLARY PRESSURE + BC (REAL*8)$/;"	v
FACAU	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
FACEBOUNDS	eprojections.f	/^      SUBROUTINE FACEBOUNDS(/;"	s
FACEINFO	eprojections.f	/^      SUBROUTINE FACEINFO /;"	s
FACETVERTEX	tetgen.h	/^                 FACETVERTEX, VOLVERTEX, FREESEGVERTEX, FREEFACETVERTEX, $/;"	e	enum:tetgenmesh::verttype
FACMU	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
FACMU	readdat.h	/^      REAL*8 FACMU,FACAU$/;"	v
FACMU	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
FILE	evisual.h	/^C NAME IN INPUT FILE,  IN TEC FILE, IPARS NAME$/;"	v
FILENAMESIZE	tetgen.h	39;"	d
FILL_N_MYPRC	initial.f	/^      SUBROUTINE FILL_N_MYPRC(/;"	s
FINDBELSW	bdaryin.f	/^      SUBROUTINE FINDBELSW(/;"	s
FINDCURVATURE	eprojections.f	/^      SUBROUTINE FINDCURVATURE(/;"	s
FINDTANGENT	eprojections.f	/^      SUBROUTINE FINDTANGENT(/;"	s
FIND_AREA	bdaryin.f	/^      REAL*4 FUNCTION FIND_AREA(/;"	f
FINERR	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
FINERR	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
FLAGBLK	blkary.h	/^     &   NPAY,START1,GLOBAL,FLAGBLK,NONMATCHING,HETEROGENEOUS$/;"	v
FLCMP	tfluidsc.h	/^      COMMON \/TFLUIDS\/FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
FLCMP	tfluidsc.h	/^C  FLCMP = FLUID COMPRESSABILITY, 1\/psi$/;"	v
FLITNP	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
FLITNP	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
FLOWMODEL	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
FLOWMODEL	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
FLOWTOMECHANICS	eprojections.f	/^      SUBROUTINE FLOWTOMECHANICS /;"	s
FLOWTOMECHANICSHETERO	eprojections.f	/^      SUBROUTINE FLOWTOMECHANICSHETERO /;"	s
FLOWTOMECHANICSNONMATCHING	eprojections.f	/^      SUBROUTINE FLOWTOMECHANICSNONMATCHING /;"	s
FLOW_COMM	blkary.h	/^     &   NEW_COMM,NEW_RANK,FLOW_COMM,$/;"	v
FLOW_ERR_MB1	ecompute.f	/^      SUBROUTINE FLOW_ERR_MB1(/;"	s
FLOW_ERR_MB2	ecompute.f	/^      SUBROUTINE FLOW_ERR_MB2(/;"	s
FLUXOM	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
FLUXOM	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
FLVIS	tfluidsc.h	/^      COMMON \/TFLUIDS\/FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
FLVIS	tfluidsc.h	/^      REAL*4 FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
FLVIS	tfluidsc.h	/^C  FLVIS = FLUID VISCOSITY, cp$/;"	v
FMODBLK	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
FNDUNT	units.f	/^      SUBROUTINE FNDUNT /;"	s
FORMIN	restc.h	/^      LOGICAL FORMIN,FORMOUT$/;"	v
FORMIN	restc.h	/^     &   FORMIN,FORMOUT$/;"	v
FORMSURFACE_HEX	eprojections.f	/^      SUBROUTINE FORMSURFACE_HEX(/;"	s
FORTSUB	cputime.c	/^   typedef void             FORTSUB;     \/\/ fortran calling convention$/;"	t	file:
FORTSUB	ctypes.h	/^   typedef void             FORTSUB;     \/\/ fortran calling convention C 7.0$/;"	t
FORTSUB	ctypes.h	/^   typedef void             FORTSUB;     \/\/ fortran calling convention$/;"	t
FRACFACE	fracture.h	/^     &               FRACFACE,FRACFACEPROC$/;"	v
FRACI0	rock.h	/^C     &       ,FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACI0	rock.h	/^C     &       FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACI1	rock.h	/^C     &       ,FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACI1	rock.h	/^C     &       FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACJ0	rock.h	/^C     &       ,FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACJ0	rock.h	/^C     &       FRACI0,FRACI1,FRACJ0,FRACJ1$/;"	v
FRACK0	rock.h	/^C     &       ,FRACK0,FRACK1$/;"	v
FRACP	rock.h	/^     &       ,FRACP,FRACPERM,FRACPORO$/;"	v
FRACPERM	rock.h	/^     &       ,FRACP,FRACPERM,FRACPORO$/;"	v
FRACWIDTH	fracture.h	/^      COMMON\/FRACCOM\/PFN,FRACWIDTH,FRACWIDTH_TMP,NUMFRACFACE,$/;"	v
FRACWIDTH_TMP	fracture.h	/^      COMMON\/FRACCOM\/PFN,FRACWIDTH,FRACWIDTH_TMP,NUMFRACFACE,$/;"	v
FREEFACETVERTEX	tetgen.h	/^                 FACETVERTEX, VOLVERTEX, FREESEGVERTEX, FREEFACETVERTEX, $/;"	e	enum:tetgenmesh::verttype
FREESEGVERTEX	tetgen.h	/^                 FACETVERTEX, VOLVERTEX, FREESEGVERTEX, FREEFACETVERTEX, $/;"	e	enum:tetgenmesh::verttype
FREEVOLVERTEX	tetgen.h	/^                 FREEVOLVERTEX, NREGULARVERTEX, DEADVERTEX};$/;"	e	enum:tetgenmesh::verttype
F_TOLERANCE	tbaldat.h	/^     & F_TOLERANCE,$/;"	v
FaceCenterCorner	tbdary.f	/^      subroutine FaceCenterCorner(/;"	s
Filename	readdatc.c	/^static char Filename [MAXFNAMELEN];$/;"	v	file:
GAMMA_C	control.h	/^      COMMON\/MRATECOM\/GAMMA_C,TOTAL_NUM_LIN_ITER_M,                            &$/;"	v
GCITER	control.h	/^     &   GCITERMAX,NCUT,GCITER,NEWT_TL,BINARY_INPUTS$/;"	v
GCITER	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
GCITERMAX	control.h	/^     &   GCITERMAX,NCUT,GCITER,NEWT_TL,BINARY_INPUTS$/;"	v
GCITERMAX	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
GCITER_C	control.h	/^     &   GCITER_C, M_ITER, COUP_ITRN$/;"	v
GCITER_C	control.h	/^     &   MULTIRATE_FLAG,Q_MULTIRATE, GCITER_C, M_ITER, COUP_ITRN$/;"	v
GEAFILE	ipars.f	/^      CHARACTER*80 :: GEAFILE /;"	v	module:geamod
GEAPRT	prtout.f	/^      SUBROUTINE GEAPRT /;"	s
GEAUNIT	ipars.f	/^      INTEGER :: GEAUNIT /;"	v	module:geamod
GEA_BINARY	ipars.f	/^      LOGICAL :: GEA_BINARY /;"	v	module:geamod
GEA_EXISTS	ipars.f	/^      LOGICAL :: GEA_EXISTS /;"	v	module:geamod
GELEI_UPDATE	elastic.f	/^      SUBROUTINE GELEI_UPDATE(/;"	s
GEOMOUT	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
GEOMOUT	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
GETA	buildmpfa.f	/^      SUBROUTINE GETA(/;"	s
GETAINVTRAN	impfa.f	/^      SUBROUTINE GETAINVTRAN(/;"	s
GETB	buildmpfa.f	/^      SUBROUTINE GETB(/;"	s
GETBLK	read1.f	/^      SUBROUTINE GETBLK /;"	s
GETCOLSVALS_27PT	hypre.f	/^      SUBROUTINE GETCOLSVALS_27PT(/;"	s
GETCOLSVALS_7PT	hypre.f	/^      SUBROUTINE GETCOLSVALS_7PT(/;"	s
GETCOLSVALS_7PT_2VAR	hypre.f	/^      SUBROUTINE GETCOLSVALS_7PT_2VAR(/;"	s
GETCOLSVALS_7PT_R8	hypre.f	/^      SUBROUTINE GETCOLSVALS_7PT_R8(/;"	s
GETCORNERLOCAL	buildmpfa.f	/^      SUBROUTINE GETCORNERLOCAL(/;"	s
GETDOFINDEX	buildmpfa.f	/^      SUBROUTINE GETDOFINDEX(/;"	s
GETFACECENTER	impfa.f	/^      SUBROUTINE GETFACECENTER(/;"	s
GETFGRAV	buildmpfa.f	/^      SUBROUTINE GETFGRAV(/;"	s
GETFLAG	eprojections.f	/^      SUBROUTINE GETFLAG(/;"	s
GETGAPI	idata.f	/^      SUBROUTINE GETGAPI /;"	s
GETGRDA	read1.f	/^      SUBROUTINE GETGRDA /;"	s
GETIDAT	idata.f	/^      SUBROUTINE GETIDAT /;"	s
GETJAC	eprojections.f	/^      SUBROUTINE GETJAC(/;"	s
GETLOCALCOF	mpfa_tran.f	/^      SUBROUTINE GETLOCALCOF(/;"	s
GETLOCALRES	mpfa_tran.f	/^      SUBROUTINE GETLOCALRES(/;"	s
GETLOCALRHS	mpfa_tran.f	/^      SUBROUTINE GETLOCALRHS(/;"	s
GETMATRHS	mpfa_tran.f	/^      SUBROUTINE GETMATRHS(/;"	s
GETMATRIX	eprojections.f	/^      SUBROUTINE GETMATRIX(/;"	s
GETMP	many.f	/^      SUBROUTINE GETMP /;"	s
GETNAM	comp.f	/^      SUBROUTINE GETNAM /;"	s
GETNUM	read1.f	/^      SUBROUTINE GETNUM /;"	s
GETNUMELE	eprojections.f	/^      SUBROUTINE GETNUMELE(/;"	s
GETPOINT	eprojections.f	/^      SUBROUTINE GETPOINT(/;"	s
GETPOR	rockutil.f	/^      SUBROUTINE GETPOR$/;"	s
GETPOREVOLUME	elastic.f	/^      SUBROUTINE GETPOREVOLUME(/;"	s
GETPOROSITY	elastic.f	/^      SUBROUTINE GETPOROSITY(/;"	s
GETPROJECTORS	eprojections.f	/^      SUBROUTINE GETPROJECTORS /;"	s
GETRHS	eprojections.f	/^      SUBROUTINE GETRHS(/;"	s
GETRHS_NEWTON	eprojections.f	/^      SUBROUTINE GETRHS_NEWTON(/;"	s
GETROCK	idata.f	/^      SUBROUTINE GETROCK /;"	s
GETSCAL	idata.f	/^      SUBROUTINE GETSCAL /;"	s
GETSOURCEINDEX	bdaryin.f	/^      SUBROUTINE GETSOURCEINDEX(/;"	s
GETSTG	comp.f	/^      SUBROUTINE GETSTG /;"	s
GETTDAT	tdata.f	/^      SUBROUTINE GETTDAT /;"	s
GETTIMD	tdata.f	/^      SUBROUTINE GETTIMD /;"	s
GETTSCL	tdata.f	/^      SUBROUTINE GETTSCL /;"	s
GETUPDATEDVAR1	elastic.f	/^      SUBROUTINE GETUPDATEDVAR1(/;"	s
GETUPDATEDVAR2	elastic.f	/^      SUBROUTINE GETUPDATEDVAR2(/;"	s
GETUPMOB	mpfa_tran.f	/^      SUBROUTINE GETUPMOB(/;"	s
GETVAL	read2.f	/^      SUBROUTINE GETVAL /;"	s
GETVAL2	read3.f	/^      SUBROUTINE GETVAL2 /;"	s
GETVALS	read2.f	/^      ENTRY GETVALS /;"	e	subroutine:GETVAL
GETVALS2	read3.f	/^      ENTRY GETVALS2 /;"	e	subroutine:GETVAL2
GETX	eprojections.f	/^      SUBROUTINE GETX /;"	s
GET_CLOSEST_PLANE	impfa.f	/^      SUBROUTINE GET_CLOSEST_PLANE(/;"	s
GET_GELEI_LSIZE	hypre.f	/^      SUBROUTINE GET_GELEI_LSIZE(/;"	s
GET_VISPARAMS	visout.f	/^      SUBROUTINE GET_VISPARAMS /;"	s
GET_VISVARS	visout.f	/^      SUBROUTINE GET_VISVARS(/;"	s
GLOBAL	blkary.h	/^     &   NPAY,START1,GLOBAL,FLAGBLK,NONMATCHING,HETEROGENEOUS$/;"	v
GMAG	layout.h	/^      REAL*8 GRAV,GMAG,DOWN,XREC,YREC,ZREC,CONV_FACTOR$/;"	v
GPoint1	visual4.c	/^POINTS  GPoint1[MAXSLI],GPoint2[MAXSLI];$/;"	v
GPoint2	visual4.c	/^POINTS  GPoint1[MAXSLI],GPoint2[MAXSLI];$/;"	v
GRAV	layout.h	/^      COMMON \/LAYOUT\/ GRAV,GMAG(10),DOWN(3,10),$/;"	v
GRAVITY_FLAG	emodel.h	/^      LOGICAL COUPLE_FLAG,GRAVITY_FLAG,INITIAL_FLAG$/;"	v
GRAVITY_FLAG	emodel.h	/^     &    COUPLE_FLAG,GRAVITY_FLAG,INITIAL_FLAG$/;"	v
GRDAIN	read1.f	/^      SUBROUTINE GRDAIN /;"	s
GRDBIN4	read1.f	/^      SUBROUTINE GRDBIN4(/;"	s
GRDBIN8	read1.f	/^      SUBROUTINE GRDBIN8(/;"	s
GRDBINCOM	read1.f	615;"	c	subroutine:GETGRDA
GRDBINCOM	read1.f	789;"	c	subroutine:GRDBIN4
GRDBINCOM	read1.f	877;"	c	subroutine:GRDBIN8
GSAVE_FOR_MULTIRATE	tprop.f	/^       SUBROUTINE GSAVE_FOR_MULTIRATE(/;"	s
GSAVE_OLDTIMP	tprop.f	/^      SUBROUTINE GSAVE_OLDTIMP(/;"	s
GSAVE_OLDTIMP_MR	tprop.f	/^      SUBROUTINE GSAVE_OLDTIMP_MR(/;"	s
GTOL	ipars.f	/^      REAL*8 :: GTOL /;"	v	module:geamod
Ganis	visual.h	/^c Ben Ganis, Gergina Pencheva 2\/7\/13   added VIS_DIR$/;"	v
GetEdgeSteinerParamOnFace	tetgen.h	/^  typedef void (* GetEdgeSteinerParamOnFace)(void*, int, REAL, int, REAL*);$/;"	t	class:tetgenio
GetSteinerOnEdge	tetgen.h	/^  typedef void (* GetSteinerOnEdge)(void*, int, REAL, REAL*);$/;"	t	class:tetgenio
GetSteinerOnFace	tetgen.h	/^  typedef void (* GetSteinerOnFace)(void*, int, REAL*, REAL*);$/;"	t	class:tetgenio
GetVertexParamOnEdge	tetgen.h	/^  typedef REAL (* GetVertexParamOnEdge)(void*, int, int);$/;"	t	class:tetgenio
GetVertexParamOnFace	tetgen.h	/^  typedef void (* GetVertexParamOnFace)(void*, int, int, REAL*);$/;"	t	class:tetgenio
HAVBAS	vistabc.h	/^      COMMON \/VISTABC\/ TECPLT,TECLAY,HAVBAS,NFTABPLT,NFTABLAY,$/;"	v
HDEPMOD	rockpg.h	/^      LOGICAL HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HDEPMOD	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HEADOUT	tvisual.h	/^      COMMON \/TVIS\/ HEADOUT, POTOUT$/;"	v
HEADOUT	tvisual.h	/^      LOGICAL HEADOUT, POTOUT$/;"	v
HIMFMFE	moddefs.h	/^     &	TRCHEM,POROHEX,CMFMFE,SIMFMFE,HIMFMFE,AHYDROI$/;"	v
HISPASS	putil.f	/^      SUBROUTINE HISPASS /;"	s
HPORMOD	rockpg.h	/^      LOGICAL HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HPORMOD	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HXPRMOD	rockpg.h	/^      LOGICAL HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HXPRMOD	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HYDROE	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
HYDROI	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
HYPREI	hypre.f	/^      SUBROUTINE HYPREI(/;"	s
HYPRE_ALLOCATE	hypre.f	/^      SUBROUTINE HYPRE_ALLOCATE(/;"	s
HYPRE_EVFEM	hypre.h	/^      LOGICAL HYPRE_EVFEM,DBGEV$/;"	v
HYPRE_EVFEM	hypre.h	/^     &   COUPLED_ITER,POROHEXLINT,HYPRE_EVFEM,DBGEV$/;"	v
HYPRE_EVFEM_FILL	hypre.f	/^      SUBROUTINE HYPRE_EVFEM_FILL(/;"	s
HYPRE_EVFEM_SOLN	hypre.f	/^      SUBROUTINE HYPRE_EVFEM_SOLN(/;"	s
HYPRE_IPARS_EVFEM	hypre.f	/^      SUBROUTINE HYPRE_IPARS_EVFEM(/;"	s
HYPRE_POROHEX	elastic.f	/^      SUBROUTINE HYPRE_POROHEX(/;"	s
HYPRE_ROWS	model_module0.f90	/^INTEGER, ALLOCATABLE:: NODE_ST_GDOF(:),ACTIVE_NODE(:),HYPRE_ROWS(/;"	v	module:system
HYPRE_SOLVE	hypre.f	/^      SUBROUTINE HYPRE_SOLVE(/;"	s
HYPRE_SOL_ID	hypre.h	/^      INTEGER LSOL_ITMAX,HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,                   &$/;"	v
HYPRE_SOL_ID	hypre.h	/^     &   HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,COARSEN_TYPE,                      &$/;"	v
HYPRMOD	rockpg.h	/^      LOGICAL HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HYPRMOD	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
HZ	cputime.c	60;"	d	file:
I1	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: I1,I2,I3$/;"	m	class:REFERENCE
I1AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
I2	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: I1,I2,I3$/;"	v
I2	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: R4,I2,I3$/;"	v
I2	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: R8,I2,I3$/;"	v
I2	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
I2AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
I2AP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
I2GETM	many.f	/^      SUBROUTINE I2GETM /;"	s
I2GETS	prtout.f	/^      SUBROUTINE I2GETS /;"	s
I2UPDATE	many.f	/^      SUBROUTINE I2UPDATE /;"	s
I2UPDATE2	many.f	/^      SUBROUTINE I2UPDATE2 /;"	s
I4	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
I4GETM	many.f	/^      SUBROUTINE I4GETM /;"	s
I4GETS	prtout.f	/^      SUBROUTINE I4GETS /;"	s
I4UPDATE	many.f	/^      SUBROUTINE I4UPDATE /;"	s
I4UPDATE2	many.f	/^      SUBROUTINE I4UPDATE2 /;"	s
I4UTIL	blkary.h	/^     & ,I4UTIL,I4UTIL1,I4UTIL2$/;"	v
I4UTIL1	blkary.h	/^     & ,I4UTIL,I4UTIL1,I4UTIL2$/;"	v
I4UTIL2	blkary.h	/^     & ,I4UTIL,I4UTIL1,I4UTIL2$/;"	v
I5	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
I6	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
I6	msjunk.h	/^      INTEGER*4 I6(*),I7(*)$/;"	v
I7	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
I8	msjunk.h	/^      INTEGER*4 I2(*),I4(*),I5(*),I6(*),I7(*),I8(*),I9(*)$/;"	v
IBCPRES	mpfaary.h	/^      INTEGER IBCPRES,DUALFACE$/;"	v
IBD_DIR	ebdary.h	/^     &         IBD_FACE,DP_FACE,IBD_DIR,IBD_TYPE,IFACE$/;"	v
IBD_FACE	ebdary.h	/^     &         IBD_FACE,DP_FACE,IBD_DIR,IBD_TYPE,IFACE$/;"	v
IBD_TYPE	ebdary.h	/^     &         IBD_FACE,DP_FACE,IBD_DIR,IBD_TYPE,IFACE$/;"	v
IDIML	readdat.h	/^     &        KERRGA,NUMRGA,IDIML,JDIML,KDIML$/;"	v
IDIML	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
IFPERM	visual.h	/^      LOGICAL   IFPERM,IFWELL,IFVISINIT$/;"	v
IFPERM	visual.h	/^     &    N_VISDUM,IFPERM,IFWELL,IFVISINIT,$/;"	v
IFTTHETA	rock.h	/^     &       EPC,PCLOW,IFTTHETA$/;"	v
IFVISINIT	visual.h	/^     &    N_VISDUM,IFPERM,IFWELL,IFVISINIT,$/;"	v
IFWELL	visual.h	/^      LOGICAL   IFPERM,IFWELL,IFVISINIT$/;"	v
IFWELL	visual.h	/^     &    N_VISDUM,IFPERM,IFWELL,IFVISINIT,$/;"	v
IGLT	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
IGLT	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
IHIGH	hypre.h	/^     &   LSIZE,PSIZE,ILOW,IHIGH,                                               &$/;"	v
ILAY	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
ILOW	hypre.h	/^     &   LSIZE,ILOW,IHIGH$/;"	v
ILOW	hypre.h	/^     &   LSIZE,PSIZE,ILOW,IHIGH,                                               &$/;"	v
INDEX1	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
INDEX2	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
INDEXL	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
INFLAG	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL1(:),VAL3(:),SKIP(:),INFLAG(/;"	v	module:eprojmod
INFOname	visual.c	/^char INFOname [MAXFNAMELEN] ; \/\/ root name for the info vis file$/;"	v
INITARYI4	fcns.f	/^      SUBROUTINE INITARYI4(/;"	s
INITARYR4	fcns.f	/^      SUBROUTINE INITARYR4(/;"	s
INITARYR8	fcns.f	/^      SUBROUTINE INITARYR8(/;"	s
INOROUT	eprojections.f	/^      SUBROUTINE INOROUT /;"	s
INPUTLINESIZE	tetgen.h	43;"	d
INSTAR	tetgen.h	/^                     INSTAR, BADELEMENT};$/;"	e	enum:tetgenmesh::locateresult
INSTR	units.f	/^      SUBROUTINE INSTR /;"	s
INTCOMP	unitsex.h	/^     & INTDENS,INTCONC,INTCOMP,STBEXT,SCFEXT$/;"	v
INTCONC	unitsex.h	/^     & INTDENS,INTCONC,INTCOMP,STBEXT,SCFEXT$/;"	v
INTCONC	unitsex.h	/^     & INTVISC,INTDENS,INTCONC,INTCOMP$/;"	v
INTDENS	unitsex.h	/^     & INTDENS,INTCONC,INTCOMP,STBEXT,SCFEXT$/;"	v
INTDENS	unitsex.h	/^     & INTVISC,INTDENS,INTCONC,INTCOMP$/;"	v
INTDIST	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
INTDIST	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
INTERSECT	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	e	enum:tetgenmesh::interresult
INTERSECTION	eprojections.f	/^      SUBROUTINE INTERSECTION(/;"	s
INTERSECT_PLANE_LINE	impfa.f	/^      SUBROUTINE INTERSECT_PLANE_LINE(/;"	s
INTETRAHEDRON	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
INTMASS	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
INTMASS	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
INTPERM	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTPERM	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTPRES	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTPRES	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTRPS	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
INTTEMP	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTTEMP	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTTIME	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
INTTIME	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTVISC	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTVISC	unitsex.h	/^     & INTVISC,INTDENS,INTCONC,INTCOMP$/;"	v
INTVOLL	unitsex.h	/^     & EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,INTTIME,$/;"	v
INTVOLL	unitsex.h	/^     & EXTVISC,EXTDENS,EXTCONC,EXTCOMP,INTMASS,INTDIST,INTVOLL,$/;"	v
INTWELG	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTWELG	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTWELL	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTWELL	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
INTWELX	unitsex.h	/^     & INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,INTVISC,$/;"	v
INTWELX	unitsex.h	/^     & INTTIME,INTTEMP,INTPRES,INTPERM,INTWELL,INTWELG,INTWELX,$/;"	v
IPARS	ipars.f	/^      SUBROUTINE IPARS(/;"	s
IPARS_METIS	divide.f	/^      SUBROUTINE IPARS_METIS(/;"	s
IPARS_SCL_NAMES	evisual.h	/^      DATA IPARS_SCL_NAMES \/$/;"	v
IPARS_SCL_NAMES	tvisual.h	/^      DATA IPARS_SCL_NAMES \/$/;"	v
IPARS_SCL_OFFSETS	evisual.h	/^      DATA IPARS_SCL_OFFSETS \/$/;"	v
IPARS_SCL_OFFSETS	tvisual.h	/^      DATA IPARS_SCL_OFFSETS \/$/;"	v
IPARS_VEC_NAMES	tvisual.h	/^      DATA IPARS_VEC_NAMES \/$/;"	v
IPARS_VEC_OFFSETS	tvisual.h	/^      DATA IPARS_VEC_OFFSETS \/$/;"	v
IPARS_face_node	model_module0.f90	/^integer IPARS_face_node(/;"	v	module:system
IPARS_face_order	model_module0.f90	/^integer gmsh_order(8),IPARS_order(8),IPARS_face_order(/;"	v	module:system
IPARS_face_transfer_to_elastic_solver	post_prcss0.f90	/^subroutine IPARS_face_transfer_to_elastic_solver$/;"	s
IPARS_node_on_face	post_prcss0.f90	/^subroutine IPARS_node_on_face$/;"	s
IPARS_order	model_module0.f90	/^integer gmsh_order(8),IPARS_order(/;"	v	module:system
IPARS_transfer_to_elastic_solver	post_prcss0.f90	/^subroutine IPARS_transfer_to_elastic_solver$/;"	s
IREG	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
IRM1	tbaldat.h	/^      INTEGER IRM1,JRM1,KRM1,$/;"	v
IRM1	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
IRM1	tbaldat.h	/^C  RMA1, IRM1 = MAXIMUM RESIDUAL AND ITS LOCATION$/;"	v
ISAP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
ISAP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
ISUNT	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
ISUNT	readdat.h	/^      LOGICAL ISUNT,ISUNTD,NOTINDX,NOERASE$/;"	v
ISUNTD	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
ISUNTD	readdat.h	/^      LOGICAL ISUNT,ISUNTD,NOTINDX,NOERASE$/;"	v
ITERATIONS	control.h	/^!  ITLINR  = TOTAL NUMBER OF LINEAR ITERATIONS, NEWTONIAN ITERATIONS,$/;"	v
ITEST	terrcalc.h	/^!  ITEST  = TEST NUMBER FOR MANUFACTURED SOLUTION, SOURCE FUNCTION$/;"	v
ITLINR	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
ITLINR	control.h	/^     & MODELON(MXMOD),MODEQS(MXMOD),MODEL,NBEMC(MXMOD),ITLINR,ITNEWTR,         &$/;"	v
ITLINT	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
ITLINT	control.h	/^     & NEWT,MAXITS,ITLINT,MSGTAG(MXMOD+1),                                     &$/;"	v
ITNEWTR	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
ITNEWTR	control.h	/^     & MODELON(MXMOD),MODEQS(MXMOD),MODEL,NBEMC(MXMOD),ITLINR,ITNEWTR,         &$/;"	v
ITYPE_BOUNDARY	ebdary.h	/^     &         N_TRACBD,ITYPE_BOUNDARY,BDARYIJK,N_DISPBD,N_TYPEBD,$/;"	v
IUTIL	table.f	/^      SUBROUTINE IUTIL /;"	s
IVPARM	ipars.f	/^      SUBROUTINE IVPARM /;"	s
IWELLS	iwell.f	/^      SUBROUTINE IWELLS /;"	s
J	layout.h	/^C  L = 1,2 ==> J,K GLOBAL INDEXES OF MESSAGE DATA$/;"	v
J	wells.h	/^C       (1-3,m) = I,J,K$/;"	v
J1AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
J1AP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
J2AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
J2AP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
J2_deriv	utility0.f90	/^subroutine J2_deriv(/;"	s
JAIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
JAIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
JBIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
JBIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
JDIML	readdat.h	/^     &        KERRGA,NUMRGA,IDIML,JDIML,KDIML$/;"	v
JDIML	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
JGLT	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
JGLT	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
JLAY	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
JLAY	layout.h	/^C  ILAY,JLAY,KLAY = NUMBER OF COMMUNICATION LAYERS IN 3 DIRECTIONS$/;"	v
JRM1	tbaldat.h	/^      INTEGER IRM1,JRM1,KRM1,$/;"	v
JRM1	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
JSAP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
JSAP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
JacMat	fcns.f	/^      subroutine JacMat(/;"	s
K1AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
K1AP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
K2AP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
K2AP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
KBND_BLK	boundary.h	/^     &     KBND_BLK,$/;"	v
KDIM	compc.h	/^      LOGICAL KDIM,KSTG,LSUBR$/;"	v
KDIM	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
KDIML	readdat.h	/^     & KDIML,LOCBLK(3000),LENBLK(3000),UNTSTD(60),$/;"	v
KE	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
KERRGA	readdat.h	/^     &        KERRGA,NUMRGA,IDIML,JDIML,KDIML$/;"	v
KERRGA	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
KGHIGH	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
KGHIGH	rock.h	/^C  KGLOW,KGHIGH = GAS ENDPOINT KR AT LOW AND HIGH TRAPPING NUMBER$/;"	v
KGLOW	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
KGLT	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
KGLT	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
KHISOUT	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
KILLPRC	many.f	/^      SUBROUTINE KILLPRC /;"	s
KILL_IPARS	many.f	/^      SUBROUTINE KILL_IPARS(/;"	s
KIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
KIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
KLAY	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
KLAY	layout.h	/^C  ILAY,JLAY,KLAY = NUMBER OF COMMUNICATION LAYERS IN 3 DIRECTIONS$/;"	v
KNDARY	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
KNDARY	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
KNDGRD	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
KNDHIS	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
KPU	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
KRM1	tbaldat.h	/^      INTEGER IRM1,JRM1,KRM1,$/;"	v
KRM1	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
KRNW0	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
KRW0	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
KSAP	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
KSAP	output.h	/^C  I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP = INDEX RANGES FOR GRID$/;"	v
KSTDO	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
KSTG	compc.h	/^      LOGICAL KDIM,KSTG,LSUBR$/;"	v
KSTG	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
KTU	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
KWCF	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
KWELL	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
KWFILE	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
KWHIGH	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
KWHIGH	rock.h	/^C  KWLOW,KWHIGH = WETTING PHASE ENDPOINT KR AT LOW AND HIGH TRAPPING NUMBER$/;"	v
KWLOW	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
KWPERM	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
KXTRPS	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
K_DIM	hypre.h	/^     &   COARSEN_TYPE,MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                &$/;"	v
K_DIM	hypre.h	/^     &   MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                             &$/;"	v
Kerr	readdatc.c	/^_F_EXTERN_(void) myreadpar_err(_F_INTEGER *Kerr);$/;"	v
L2UPDATE	many.f	/^      SUBROUTINE L2UPDATE /;"	s
L2UPDATE2	many.f	/^      SUBROUTINE L2UPDATE2 /;"	s
L2_norm	utility0.f90	/^subroutine L2_norm(/;"	s
L2_norm_leve_1	utility0.f90	/^subroutine L2_norm_leve_1(/;"	s
L2_norm_leve_u	utility0.f90	/^subroutine L2_norm_leve_u(/;"	s
L4UPDATE	many.f	/^      SUBROUTINE L4UPDATE /;"	s
L4UPDATE2	many.f	/^      SUBROUTINE L4UPDATE2 /;"	s
LAST	scrat1.f	/^      INTEGER :: LAST,/;"	v	module:scrat1mod
LDUM	scrat1.f	/^      INTEGER :: LAST, LDUM$/;"	v	module:scrat1mod
LEVELA	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
LEVELA	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
LEVELB	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
LEVELB	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
LEVELC	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
LEVELC	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
LEVELD	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
LEVELD	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
LEVELE	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
LEVELE	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
LEVERR	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
LEVERR	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
LIBS	makefile	/^LIBS = $(FRAMELIB) $(BLOCKSLIB) $(MODELLIB) $(SOLVELIB) $(GRAPHLIB) $(PARALLIB) \\$/;"	m
LID_2IJK	model_module0.f90	/^INTEGER, ALLOCATABLE:: NODE_ST_GDOF(:),ACTIVE_NODE(:),HYPRE_ROWS(:),OFNODE_GNUM_TMP(:),&$/;"	v	module:system
LINSOV	table.f	/^      SUBROUTINE LINSOV /;"	s
LINSYSW	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
LOCBLK	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
LOCBND	boundary.h	/^     &     LOCBND,$/;"	v
LOCDO	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
LOFFBND	boundary.h	/^     &     LOFFBND,$/;"	v
LOOKUP	table.f	/^      SUBROUTINE LOOKUP /;"	s
LSIZE	hypre.h	/^     &   LSIZE,ILOW,IHIGH$/;"	v
LSIZE	hypre.h	/^     &   LSIZE,PSIZE,ILOW,IHIGH,                                               &$/;"	v
LSOL_ITMAX	hypre.h	/^      INTEGER LSOL_ITMAX,HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,                   &$/;"	v
LSOL_ITMAX	hypre.h	/^     &   LSOL_ITMAX,                                                           &$/;"	v
LSOL_TOL	hypre.h	/^      COMMON \/HYPRE\/ LSOL_TOL,STRONG_THRES,TRUNC_FACTOR,                       &$/;"	v
LSTFUN	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
LSTIND	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
LSUBR	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
L_2_delta_u	model_module0.f90	/^real(kind=double) L_2_u,L_2_delta_u,/;"	v	module:model_type
L_2_u	model_module0.f90	/^real(kind=double) L_2_u,/;"	v	module:model_type
L_dof_st	model_module0.f90	/^integer e_id_1,e_id_2,node_dof_L,node_dof_R,R_dof_st,L_dof_st$/;"	v	module:model_type
M	layout.h	/^C  PRCMAP(M) = PROCESSOR ASSIGNMENTS FOR EACH GRID COLUMN IN EACH$/;"	v
MAKDIR	makefile	/^MAKDIR=..$(S)make$(S)$/;"	m
MAKEMAP	idata.f	/^      SUBROUTINE MAKEMAP /;"	s
MAKESI	units.f	/^      SUBROUTINE MAKESI /;"	s
MAKNAM	bdaryin.f	/^      SUBROUTINE MAKNAM(/;"	s
MAKTIT	prtout.f	/^      SUBROUTINE MAKTIT /;"	s
MANDEL_BC	ecompute.f	/^      SUBROUTINE MANDEL_BC(/;"	s
MANDEL_CAL_A	ecompute.f	/^      SUBROUTINE MANDEL_CAL_A(/;"	s
MANDEL_E	emodel.h	/^     &       SKEMPTON,MANDEL_FORCE,MANDEL_NUU,MANDEL_NU,MANDEL_E,              &$/;"	v
MANDEL_ERR	ecompute.f	/^      SUBROUTINE MANDEL_ERR(/;"	s
MANDEL_FORCE	emodel.h	/^     &       SKEMPTON,MANDEL_FORCE,MANDEL_NUU,MANDEL_NU,MANDEL_E,              &$/;"	v
MANDEL_NU	emodel.h	/^     &       SKEMPTON,MANDEL_FORCE,MANDEL_NUU,MANDEL_NU,MANDEL_E,              &$/;"	v
MANDEL_NUU	emodel.h	/^     &       SKEMPTON,MANDEL_FORCE,MANDEL_NUU,MANDEL_NU,MANDEL_E,              &$/;"	v
MANDEL_PERM	emodel.h	/^     &       MANDEL_PERM,MANDEL_XSIZE,MANDEL_YSIZE,MANDEL_MU$/;"	v
MANDEL_PRINT	ecompute.f	/^      SUBROUTINE MANDEL_PRINT(/;"	s
MANDEL_SOLN	ecompute.f	/^      SUBROUTINE MANDEL_SOLN(/;"	s
MANDEL_XSIZE	emodel.h	/^     &       MANDEL_PERM,MANDEL_XSIZE,MANDEL_YSIZE,MANDEL_MU$/;"	v
MANDEL_YSIZE	emodel.h	/^     &       MANDEL_PERM,MANDEL_XSIZE,MANDEL_YSIZE,MANDEL_MU$/;"	v
MAPPING	fcns.f	/^      INTEGER FUNCTION MAPPING(/;"	f
MAPTENSORQUAD	buildmpfa.f	/^      SUBROUTINE MAPTENSORQUAD(/;"	s
MAP_TO_PLANE	impfa.f	/^      SUBROUTINE MAP_TO_PLANE(/;"	s
MATINV	utility0.f90	/^      SUBROUTINE MATINV /;"	s
MAT_MAX_ITER	model_module0.f90	/^   integer MAT_MAX_ITER /;"	v	module:control
MAT_NR_TOL	model_module0.f90	/^   real(kind=double) MAT_NR_TOL$/;"	v	module:control
MAT_TOL	emodel.h	/^     &      MODEL_EP,EP_TOL,MAT_TOL,EP_SOLVER_FLAG,NLOADSTEPS,                 &$/;"	v
MAXANAM	memory.h	24;"	d
MAXARG	memory.h	25;"	d
MAXARY	memory.h	23;"	d
MAXBLK	memory.h	20;"	d
MAXBLK	readdatc.c	14;"	d	file:
MAXBLK	visualc.h	65;"	d
MAXBNAM	memory.h	22;"	d
MAXEXT	extvar.c	41;"	d	file:
MAXFNAMELEN	readdatc.c	13;"	d	file:
MAXFNAMELEN	visualc.h	64;"	d
MAXIT	putil.f	/^      SUBROUTINE MAXIT /;"	s
MAXITI	putil.f	/^      SUBROUTINE MAXITI /;"	s
MAXITS	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
MAXITS	control.h	/^     & NEWT,MAXITS,ITLINT,MSGTAG(MXMOD+1),                                     &$/;"	v
MAXMODELS	visual.h	/^      INTEGER MAXVISVARS, MAXMODELS, MAXVISFLAG$/;"	v
MAXNAM	extvar.c	42;"	d	file:
MAXNUM	visual9.f	/^        INTEGER :: NUMELE,NUMNOD,MAXNUM$/;"	k	type:tecbinblk
MAXPRC	memory.h	21;"	d
MAXREF	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
MAXSLI	visualc.h	66;"	d
MAXSTRLEN	visualc.h	63;"	d
MAXVISVARS	visualc.h	62;"	d
MAX_ITERATION_GL	emodel.h	/^      INTEGER EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,            &$/;"	v
MAX_ITERATION_GL	emodel.h	/^     &      EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,              &$/;"	v
MAX_ITERATION_LOC	emodel.h	/^      INTEGER EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,            &$/;"	v
MAX_ITERATION_LOC	emodel.h	/^     &      EP_CUTBACK_FLAG, MAX_ITERATION_GL, MAX_ITERATION_LOC,              &$/;"	v
MAX_LEVELS	hypre.h	/^     &   NUM_SWEEPS,MAX_LEVELS,PRINT_SOL,PRINT_LEVEL,                          &$/;"	v
MBPOROE	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
MC_SKIPPED	control.h	/^      INTEGER TOTAL_NUM_LIN_ITER_M,TOTAL_NUM_LIN_ITER_F, MC_SKIPPED,           &$/;"	v
MC_SKIPPED	control.h	/^     &   TOTAL_NUM_LIN_ITER_F,MC_SKIPPED,MULTIRATE_FLAG,Q_MULTIRATE,           &$/;"	v
MEASURE_TYPE	hypre.h	/^     &   COARSEN_TYPE,MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                &$/;"	v
MEASURE_TYPE	hypre.h	/^     &   MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                             &$/;"	v
MECHANICSTOFLOW	eprojections.f	/^      SUBROUTINE MECHANICSTOFLOW /;"	s
MECHANICSTOFLOWHETERO	eprojections.f	/^      SUBROUTINE MECHANICSTOFLOWHETERO /;"	s
MECHANICSTOFLOWNONMATCHING	eprojections.f	/^      SUBROUTINE MECHANICSTOFLOWNONMATCHING /;"	s
MECH_BC_NCASE	emodel.h	/^     &         SDPM,PLOT_PERM_CHANGE,TYPESDP,MECH_BC_NCASE,                    &$/;"	v
MEDIT	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
MEIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
MEIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
MEM_GLOBALS	memman1.c	18;"	d	file:
MEM_GLOBALS	memory.h	39;"	d
MEQ	memory.h	34;"	d
MEQ	memory.h	38;"	d
MESH	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
METHOD	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
MEX	memory.h	33;"	d
MEX	memory.h	37;"	d
MEX	memory.h	41;"	d
MFARRAY	mfarray.f	/^      SUBROUTINE MFARRAY /;"	s
MFILE	output.h	/^C  MFILE  = USER OUTPUT FILE MAP FOR COMP.FOR$/;"	v
MFMFE_BRICKS	layout.h	/^      LOGICAL MYBLK,MODPROC,MFMFE_BRICKS,PLOT_MYPRC,DEALII,$/;"	v
MIDPOINTS	blkary.h	/^      COMMON \/BLKARY2\/MIDPOINTS,$/;"	v
MINIT	putil.f	/^      SUBROUTINE MINIT /;"	s
MINITI	putil.f	/^      SUBROUTINE MINITI /;"	s
MMIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
MMIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
MMODEL	moddefs.h	/^      integer BLACKP, BLACKI, COMP, CHEM, HYDROI, HYDROE, MMODEL,              &$/;"	v
MODACT	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
MODACT	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
MODBLK	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MODEL	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MODEL	control.h	/^     & MODELON(MXMOD),MODEQS(MXMOD),MODEL,NBEMC(MXMOD),ITLINR,ITNEWTR,         &$/;"	v
MODELLIB	makefile	/^MODELLIB = $(HYDROILIB) $(HYDROELIB) $(SINGLEILIB) $(SINGLEELIB) \\$/;"	m
MODELOBJ	makefile	/^MODELOBJ = $(EOBJ) $(HYDROIOBJ) $(HYDROEOBJ) $(SINGLEIOBJ) $(SINGLEEOBJ) \\$/;"	m
MODEL_EP	emodel.h	/^     &        MODEL_EP,EP_SOLVER_FLAG,NLOADSTEPS,CR_TYPE$/;"	v
MODEL_EP	emodel.h	/^     &      MODEL_EP,EP_TOL,MAT_TOL,EP_SOLVER_FLAG,NLOADSTEPS,                 &$/;"	v
MODEL_EP	emodel.h	/^! MODEL_EP         = ELASTOPLASTIC MODEL$/;"	v
MODEQS	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MODPROC	layout.h	/^      LOGICAL MYBLK,MODPROC,MFMFE_BRICKS,PLOT_MYPRC,DEALII,$/;"	v
MODREL	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
MODULE_POST_PRCSS	master-big0.f90	/^SUBROUTINE MODULE_POST_PRCSS(/;"	s
MODWEL	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
MPFABELSWNEW	mpfa_tran.f	/^      SUBROUTINE MPFABELSWNEW(/;"	s
MPFA_INIT	impfa.f	/^      SUBROUTINE MPFA_INIT(/;"	s
MPFA_PERMINV	buildmpfa.f	/^      SUBROUTINE MPFA_PERMINV(/;"	s
MPFA_POR_REF	buildmpfa.f	/^      SUBROUTINE MPFA_POR_REF(/;"	s
MPFA_POR_VOL	buildmpfa.f	/^      SUBROUTINE MPFA_POR_VOL(/;"	s
MPFA_SET_AINV_TRAN	impfa.f	/^      SUBROUTINE MPFA_SET_AINV_TRAN(/;"	s
MPI_EXTERNAL	layout.h	/^     &  DATASPACES,MPI_EXTERNAL,ADAPTIVITY$/;"	v
MPeszynska	visual.h	/^c MPeszynska, 9\/25\/98   changed some parameters to be keyword dependent$/;"	v
MSGIND	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
MSGOUT	putil.f	/^      SUBROUTINE MSGOUT /;"	s
MSGRCVF	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MSGRCVL	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
MSGS	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MSGSNDF	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MSGSNDL	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MSGSRC	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MSGTAG	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
MSGTAG1	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MSGTAG2	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MSGTRG	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
MULTIRATE_FLAG	control.h	/^     &   MULTIRATE_FLAG,Q_MULTIRATE, GCITER_C, M_ITER, COUP_ITRN$/;"	v
MULTIRATE_FLAG	control.h	/^     &   TOTAL_NUM_LIN_ITER_F,MC_SKIPPED,MULTIRATE_FLAG,Q_MULTIRATE,           &$/;"	v
MXBLKS	control.h	/^      INTEGER MXMOD,MXBLKS,MXNUMEQ,MXBINARY$/;"	v
MXBLKS	control.h	/^     & MODBLK(MXBLKS),FMODBLK(MXBLKS),NUMEQS(MXBLKS),MXNUMEQS,                 &$/;"	v
MXFRACFACE	fracture.h	/^      INTEGER MXFRAC, MXFRACFACE, NUMFRAC$/;"	v
MXINTBIG	eprojections.f	/^      INTEGER :: MXINTBIG /;"	v	module:eprojmod
MXINTPOINT	eprojections.f	/^      INTEGER :: MXINTPOINT /;"	v	module:eprojmod
MXINTSMALL	eprojections.f	/^      INTEGER :: MXINTSMALL /;"	v	module:eprojmod
MXNUMEQ	control.h	/^      INTEGER MXMOD,MXBLKS,MXNUMEQ,MXBINARY$/;"	v
MXNUMEQS	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
MXNUMEQS	control.h	/^     & MODBLK(MXBLKS),FMODBLK(MXBLKS),NUMEQS(MXBLKS),MXNUMEQS,                 &$/;"	v
MYBLK	layout.h	/^      LOGICAL MYBLK,MODPROC,MFMFE_BRICKS,PLOT_MYPRC,DEALII,$/;"	v
MYHIS	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
MYPID	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
MYPID	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
MYPRC	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
MYPRC	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
MYPRC	control.h	/^!              FOR 1 PROCESSOR, MYPRC = 0$/;"	v
M_ITER	control.h	/^     &   GCITER_C, M_ITER, COUP_ITRN$/;"	v
M_ITER	control.h	/^     &   MULTIRATE_FLAG,Q_MULTIRATE, GCITER_C, M_ITER, COUP_ITRN$/;"	v
MatTranTo	fcns.f	/^      subroutine MatTranTo(/;"	s
N	layout.h	/^C  N0MAP(N) = BASE LOCATION FOR BLOCK N IN PRCMAP$/;"	v
N1KVD	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NACTMOD	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
NACTMOD	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
NACTTIM	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NACTTIM	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NARS	output.h	/^     & NARS,NEORS,NERRP,MFILE$/;"	v
NBEMC	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
NBIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
NBLKG	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
NBLKG	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
NBND_REG	boundary.h	/^     &     NBND_REG,$/;"	v
NBND_SUBREG	boundary.h	/^     &     NBND_SUBREG,$/;"	v
NBND_TYPE	boundary.h	/^     &     NBND_TYPE,$/;"	v
NBWELI	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
NCHRL	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NCUT	control.h	/^     &   GCITERMAX,NCUT,GCITER,NEWT_TL,BINARY_INPUTS$/;"	v
NCUT	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
ND4GA	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
ND4GA	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
NDOU	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NEARVERTEX	tetgen.h	/^                     ENCVERTEX, ENCSEGMENT, ENCSUBFACE, NEARVERTEX, NONREGULAR,$/;"	e	enum:tetgenmesh::locateresult
NEMOD	layout.h	/^     & MSGS,NEMOD,MSGTRG,MSGSRC,LSTIND,MSGSNDF,MSGSNDL,MSGRCVF,$/;"	v
NEORS	output.h	/^     & NARS,NEORS,NERRP,MFILE$/;"	v
NERIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
NERIN	restc.h	/^      INTEGER NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN$/;"	v
NERRC	emodel.h	/^      INTEGER  PEFLOW,NERRC,DISPOUT,MECH_BC_NCASE$/;"	v
NERRC	emodel.h	/^     &         PEFLOW,NERRC,DISPOUT,                                           &$/;"	v
NERRP	output.h	/^     & NARS,NEORS,NERRP,MFILE$/;"	v
NETOTR	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
NETOTR0	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
NEUMTOREF	tbdary.f	/^      SUBROUTINE NEUMTOREF(/;"	s
NEWT	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
NEWT	control.h	/^     & NEWT,MAXITS,ITLINT,MSGTAG(MXMOD+1),                                     &$/;"	v
NEWTON	eprojections.f	/^      SUBROUTINE NEWTON(/;"	s
NEWT_TL	control.h	/^     &   GCITERMAX,NCUT,GCITER,NEWT_TL,BINARY_INPUTS$/;"	v
NEWT_TL	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
NEW_COMM	blkary.h	/^     &        NEW_COMM,NEW_RANK,FLOW_COMM(10),$/;"	v
NEW_COMM	blkary.h	/^     &   NEW_COMM,NEW_RANK,FLOW_COMM,$/;"	v
NEW_RANK	blkary.h	/^     &        NEW_COMM,NEW_RANK,FLOW_COMM(10),$/;"	v
NEW_RANK	blkary.h	/^     &   NEW_COMM,NEW_RANK,FLOW_COMM,$/;"	v
NEXFRE	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
NEXTIME	ipars.f	/^      SUBROUTINE NEXTIME /;"	s
NFBUG	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
NFBUG	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
NFIN	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NFIN	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NFINC	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
NFINC	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
NFLOWELE	eprojections.f	/^      INTEGER :: NMECHELE,NFLOWELE$/;"	v	module:eprojmod
NFOUT	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NFOUT	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NFPPG	vistabc.h	/^     & NFTABBAS,NFPPG,NPLOTS,$/;"	v
NFRESP	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
NFRESP	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
NFRIN	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NFRIN	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NFROUT	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NFROUT	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NFTABBAS	vistabc.h	/^     & NFTABBAS,NFPPG,NPLOTS,$/;"	v
NFTABLAY	vistabc.h	/^      COMMON \/VISTABC\/ TECPLT,TECLAY,HAVBAS,NFTABPLT,NFTABLAY,$/;"	v
NFTABPLT	vistabc.h	/^      COMMON \/VISTABC\/ TECPLT,TECLAY,HAVBAS,NFTABPLT,NFTABLAY,$/;"	v
NFUTIL	control.h	/^     &   NFUTIL,NFBUG,LEVERR,FLOWMODEL,MODACT,NEWT,MAXITS,ITLINT,MSGTAG,       &$/;"	v
NFUTIL	control.h	/^     & NACTMOD,NFUTIL,NFBUG,NFRESP,LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,         &$/;"	v
NFWELL	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NHISQ	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NHISUSE	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NIDIM	visual4.c	508;"	d	file:
NIDIM	visual4.c	514;"	d	file:
NIFU	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NIRU	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NJDIM	visual4.c	509;"	d	file:
NJDIM	visual4.c	515;"	d	file:
NKGSG	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
NKODL	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NKODU	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NKOSG	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
NKOSW	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
NKWSW	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
NLOADSTEPS	emodel.h	/^     &        MODEL_EP,EP_SOLVER_FLAG,NLOADSTEPS,CR_TYPE$/;"	v
NLOADSTEPS	emodel.h	/^     &      MODEL_EP,EP_TOL,MAT_TOL,EP_SOLVER_FLAG,NLOADSTEPS,                 &$/;"	v
NMECHELE	eprojections.f	/^      INTEGER :: NMECHELE,/;"	v	module:eprojmod
NMODIN	restc.h	/^      COMMON \/RESTC\/ NBIN,JAIN,JBIN,KIN,MEIN,MMIN,NERIN,NMODIN,$/;"	v
NOD2IJK	visual9.f	/^        INTEGER, ALLOCATABLE :: NODNUM(:,:,:),NOD2IJK(/;"	k	type:tecbinblk
NODE	visualc.h	/^typedef struct node { int i,j,k; } NODE;$/;"	t	typeref:struct:node
NODES	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
NODE_ST_GDOF	model_module0.f90	/^INTEGER, ALLOCATABLE:: NODE_ST_GDOF(/;"	v	module:system
NODNUM	visual9.f	/^        INTEGER, ALLOCATABLE :: NODNUM(/;"	k	type:tecbinblk
NOERASE	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
NONMATCHING	blkary.h	/^     &   NPAY,START1,GLOBAL,FLAGBLK,NONMATCHING,HETEROGENEOUS$/;"	v
NONREGULAR	tetgen.h	/^                     ENCVERTEX, ENCSEGMENT, ENCSUBFACE, NEARVERTEX, NONREGULAR,$/;"	e	enum:tetgenmesh::locateresult
NOTINDX	readdat.h	/^      COMMON \/READAT\/FACMU,FACAU,ISUNT,ISUNTD,NOERASE,NOTINDX,NBLKG,$/;"	v
NOTINDX	readdat.h	/^      LOGICAL ISUNT,ISUNTD,NOTINDX,NOERASE$/;"	v
NOUPDATE	many.f	/^      SUBROUTINE NOUPDATE /;"	s
NO_LU	model_module0.f90	/^integer bandL,load_only,NO_LU,/;"	v	module:system
NPAY	blkary.h	/^     &   NPAY,START1,GLOBAL,FLAGBLK,NONMATCHING,HETEROGENEOUS$/;"	v
NPCOW	rock.h	/^      INTEGER MXROCK,MODREL,NKOSW,NKWSW,NKOSG,NKGSG,NPCOW,NPCGO$/;"	v
NPGD	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
NPGR	rockpg.h	/^     &   NPGD,NPGR,KE,HDEPMOD,HPORMOD,HXPRMOD,HYPRMOD,HZPRMOD$/;"	v
NPLOTS	vistabc.h	/^     & NFTABBAS,NFPPG,NPLOTS,$/;"	v
NREGL	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NREGR	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NREGULARVERTEX	tetgen.h	/^                 FREEVOLVERTEX, NREGULARVERTEX, DEADVERTEX};$/;"	e	enum:tetgenmesh::verttype
NRONE	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NRU1	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NRU2	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NR_NUMBER	model_module0.f90	/^integer bandL,load_only,NO_LU,NR_NUMBER,/;"	v	module:system
NSTEP	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NSTEP	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NSTEPR	control.h	/^     &   ITLINR,ITNEWTR,NSTEPR,NFRESP,NACTMOD,NBEMC,NFINC,                     &$/;"	v
NSTEPR	control.h	/^     & NSTEPR,GCITERMAX,NCUT,GCITER,NEWT_TL,NFINC,BINARY_INPUTS,               &$/;"	v
NSTGL	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NSTGU	compc.h	/^     & NIFU,NREGR,NSTGU,KDIM,KSTG,NDOU,LSTFUN,LSUBR,N1KVD,NSTGL,NCHRL,$/;"	v
NTABBND	boundary.h	/^     &     NTABBND,$/;"	v
NTABPQ	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
NTBU	utldat.h	/^      INTEGER NTBU,NEXFRE,INTRPS,KXTRPS,INDEX1,INDEX2,INDEXL,KTRANS$/;"	v
NTYPGA	readdat.h	/^      INTEGER LENBLK,LOCBLK,NBLKG,IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,$/;"	v
NTYPGA	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
NUMBLK	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
NUMBR	table.f	/^      SUBROUTINE NUMBR /;"	s
NUMDO	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
NUMELE	visual9.f	/^        INTEGER :: NUMELE,/;"	k	type:tecbinblk
NUMELE	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
NUMELET	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
NUMEQS	control.h	/^     &   MSGTAG1,MSGTAG2,MODBLK,FMODBLK,MODEQS,MODEL,NUMEQS,MXNUMEQS,          &$/;"	v
NUMEQW	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NUMFRACFACE	fracture.h	/^      COMMON\/FRACCOM\/PFN,FRACWIDTH,FRACWIDTH_TMP,NUMFRACFACE,$/;"	v
NUMGET	comp.f	/^      SUBROUTINE NUMGET /;"	s
NUMLOC	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
NUMMODEL	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
NUMNOD	visual9.f	/^        INTEGER :: NUMELE,NUMNOD,/;"	k	type:tecbinblk
NUMPRC	control.h	/^      INTEGER NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,        &$/;"	v
NUMPRC	control.h	/^     & NACTTIM,NUMPRC,MYPRC,MYPID,NSTEP,NFIN,NFOUT,NFRIN,NFROUT,               &$/;"	v
NUMREG	output.h	/^      INTEGER I1AP,I2AP,ISAP,J1AP,J2AP,JSAP,K1AP,K2AP,KSAP,NUMREG,$/;"	v
NUMRGA	readdat.h	/^     &        KERRGA,NUMRGA,IDIML,JDIML,KDIML$/;"	v
NUMRGA	readdat.h	/^     & IGLT,JGLT,KGLT,KNDARY,NTYPGA,ND4GA,KERRGA,NUMRGA,IDIML,JDIML,$/;"	v
NUMTIM	times.h	/^      INTEGER NUMTIM,TIMKLS$/;"	v
NUMTMP	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
NUMVAL	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
NUMWEL	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NUM_SWEEPS	hypre.h	/^     &   NUM_SWEEPS,MAX_LEVELS,PRINT_SOL,PRINT_LEVEL,                          &$/;"	v
NVL	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NVU	compc.h	/^      COMMON \/COMPC\/NKODU,NKODL,NRU1,NRU2,NREGL,NVU,NVL,NIRU,NRONE,$/;"	v
NWELG	wells.h	/^     &        NHISQ,MYHIS,NFWELL,NUMWEL,NWELG,NUMEQW,NHISUSE,NTYPOUT$/;"	v
NWELLI	wells.h	/^      INTEGER LOCWEL,KNDHIS,KWELL,NBWELI,NWELLI,KWPERM,MODWEL,NTABPQ,$/;"	v
NWELPRC	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
NWFCUM	wells.h	/^     &        NWELPRC,LINSYSW,NUMELE,NUMELET,NWFCUM,KWCF,KWFILE,KHISOUT,$/;"	v
NXDIM	blkary.h	/^      COMMON \/BLKARY\/R8UTIL,R4UTIL,NXDIM,NYDIM,NZDIM$/;"	v
NYDIM	blkary.h	/^      COMMON \/BLKARY\/R8UTIL,R4UTIL,NXDIM,NYDIM,NZDIM$/;"	v
NYMAP	layout.h	/^     & MSGRCVL,MSGIND,NYMAP,KNDGRD,METHOD,EV_PRCBLK,NETOTR0,NETOTR,$/;"	v
NZDIM	blkary.h	/^      COMMON \/BLKARY\/R8UTIL,R4UTIL,NXDIM,NYDIM,NZDIM$/;"	v
N_AINVF	tarydat.h	/^     &   N_AINVF,N_UPMOBPROD,$/;"	v
N_BC_TYPE	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
N_BIOTA	earydat.h	/^      INTEGER  N_MODUL,             N_POISS,          N_BIOTA,                 &$/;"	v
N_BIOTA	earydat.h	/^     &         N_MODUL,             N_POISS,          N_BIOTA,                 &$/;"	v
N_BIOTAFLOW	tarydat.h	/^     &   N_MODULFLOW, N_POISSFLOW, N_BIOTAFLOW, N_VSTRAINN$/;"	v
N_BIOTM	earydat.h	/^     &         N_BIOTM,             N_ROCKD,          N_EDISP,                 &$/;"	v
N_BULK_DEN	earydat.h	/^     &         N_DISP_COMP,         N_BULK_DEN,       N_STRAINN,               &$/;"	v
N_COF	tarydat.h	/^     &   N_COF,N_RESID,N_VEL,N_PRES_ERR,$/;"	v
N_COFV	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
N_CR	tarydat.h	/^     &   N_CR, N_PV, N_PVN, N_REFPRES, N_DELTAP,$/;"	v
N_CR	tarydat.h	/^C  N_CR = ROCK COMPRESSIBILITY (1\/PSI)$/;"	v
N_CRAC_IBC	earydat.h	/^     &         N_STR_RESID,         N_CRAC_IBC,                                &$/;"	v
N_DELTAP	tarydat.h	/^     &   N_CR, N_PV, N_PVN, N_REFPRES, N_DELTAP,$/;"	v
N_DEPTH	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_DISPBD	ebdary.h	/^     &         N_TRACBD,ITYPE_BOUNDARY,BDARYIJK,N_DISPBD,N_TYPEBD,$/;"	v
N_DISP_COMP	earydat.h	/^     &         N_DISP_COMP,         N_BULK_DEN,       N_STRAINN,               &$/;"	v
N_DUNK	tarydat.h	/^      COMMON \/TBAH\/ N_PRES,N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_DUNK	tarydat.h	/^      INTEGER N_PRES, N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_DUNKV	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
N_ECON	earydat.h	/^     &         N_PRESS,             N_PRESSN,         N_ECON,                  &$/;"	v
N_ECR	earydat.h	/^     &         N_ECR,                                                          &$/;"	v
N_EDISP	earydat.h	/^     &         N_BIOTM,             N_ROCKD,          N_EDISP,                 &$/;"	v
N_EDISPN	earydat.h	/^     &         N_EDISPN,            N_VSTRAIN_INIT,   N_STRAIN,                &$/;"	v
N_EFLDEN	earydat.h	/^     &         N_ESAT,              N_EFLDEN,          N_EPV,                  &$/;"	v
N_ELEM_LID	earydat.h	/^     &         N_ELEM_LID,          N_NODE_LID,       N_FNODE_TYPE,            &$/;"	v
N_EMASS	earydat.h	/^     &         N_EMASS,                                                        &$/;"	v
N_EMSTRESS	earydat.h	/^     &         N_EMSTRESS,          N_EMSTRESS_REF,                            &$/;"	v
N_EMSTRESS_REF	earydat.h	/^     &         N_EMSTRESS,          N_EMSTRESS_REF,                            &$/;"	v
N_EPMD	earydat.h	/^     &         N_EPMD,                                                         &$/;"	v
N_EPV	earydat.h	/^     &         N_ESAT,              N_EFLDEN,          N_EPV,                  &$/;"	v
N_EPVN	earydat.h	/^     &         N_EPVN,              N_STRESS,         N_STRESSN,               &$/;"	v
N_EPV_FLOW	earydat.h	/^     &         N_EPV_FLOW,                                                     &$/;"	v
N_ESAT	earydat.h	/^     &         N_ESAT,              N_EFLDEN,          N_EPV,                  &$/;"	v
N_EVOL	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_FAREA	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_FDIM	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_FLDEN	tarydat.h	/^      COMMON \/TBAH\/ N_PRES,N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_FLDEN	tarydat.h	/^      INTEGER N_PRES, N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_FLDEN	tarydat.h	/^C  N_FLDEN = GRID-ELEMENT ARRAY NUMBER FOR FLUID DENSITY AT TIME N+1,$/;"	v
N_FLDEN3	tarydat.h	/^     &   N_FLDEN3, N_PRESN3, N_PVN3, N_PRESN_N1, N_PRESN_NM1,$/;"	v
N_FLDENN	tarydat.h	/^      COMMON \/TBAH\/ N_PRES,N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_FLDENN	tarydat.h	/^      INTEGER N_PRES, N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_FLDENN	tarydat.h	/^C  N_FLDENN = GRID-ELEMENT ARRAY NUMBER FOR FLUID DENSITY AT TIME N,$/;"	v
N_FLOW_ALPHA	earydat.h	/^     &         N_YIELD_ALPHA,       N_FLOW_ALPHA,                              &$/;"	v
N_FNODE_TYPE	earydat.h	/^     &         N_ELEM_LID,          N_NODE_LID,       N_FNODE_TYPE,            &$/;"	v
N_FPROP	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_GELEI	hypre.h	/^     &   N_HYPRE_ROWS,N_HYPRE_WORK,N_GELEI,                                    &$/;"	v
N_HARDEN_C1	earydat.h	/^     &         N_HARDEN_MODEL,      N_HARDEN_C1,                               &$/;"	v
N_HARDEN_C2	earydat.h	/^     &         N_HARDEN_C2,                                                    &$/;"	v
N_HARDEN_MODEL	earydat.h	/^     &         N_HARDEN_MODEL,      N_HARDEN_C1,                               &$/;"	v
N_HYPRE_ROWS	hypre.h	/^      INTEGER N_HYPRE_ROWS,N_HYPRE_WORK,N_GELEI$/;"	v
N_HYPRE_ROWS	hypre.h	/^     &   N_HYPRE_ROWS,N_HYPRE_WORK,N_GELEI,                                    &$/;"	v
N_HYPRE_WORK	hypre.h	/^      INTEGER N_HYPRE_ROWS,N_HYPRE_WORK,N_GELEI$/;"	v
N_HYPRE_WORK	hypre.h	/^     &   N_HYPRE_ROWS,N_HYPRE_WORK,N_GELEI,                                    &$/;"	v
N_I4U	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_I4U	blkary.h	/^C  N_R8U, N_R4U, N_I4U = ARRAY NUMBERS FOR R8UTIL, R4UTIL, AND I4UTIL$/;"	v
N_I4U1	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_I4U2	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_KCR	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_KEYCR_ELE	earydat.h	/^     &         N_UPDATE_I4,         N_KEYCR_ELE,                               &$/;"	v
N_KEYOUT_CR	earydat.h	/^     &         N_KEYOUT_CR,         N_PREF,           N_VSTRAIN,               &$/;"	v
N_KPU	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_KPU	blkary.h	/^C  N_KTU, N_KPU = ARRAY NUMBERS FOR KTU AND KPU$/;"	v
N_KTU	blkary.h	/^     & ,N_I4U,N_I4U1,N_I4U2,N_KTU,N_KPU,N_EVOL$/;"	v
N_MODUL	earydat.h	/^     &         N_MODUL,             N_POISS,          N_BIOTA,                 &$/;"	v
N_MODULFLOW	tarydat.h	/^     &   N_MODULFLOW, N_POISSFLOW, N_BIOTAFLOW, N_VSTRAINN$/;"	v
N_MPFAQU	mpfaary.h	/^      COMMON \/MPFAARY\/ N_XYPERM,N_YZPERM,N_XZPERM,N_MPFAQU$/;"	v
N_MYPRC	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
N_NODE_LID	earydat.h	/^     &         N_ELEM_LID,          N_NODE_LID,       N_FNODE_TYPE,            &$/;"	v
N_NODE_WIDTH	earydat.h	/^     &         N_OFNODE_GNUM,       N_NODE_WIDTH,     N_PROCN,                 &$/;"	v
N_OFNODE_AFFINE	earydat.h	/^     &         N_OFNODE_AFFINE,     N_OFNODE_KEYOUT,  N_OFNODE_LID,            &$/;"	v
N_OFNODE_DISP	earydat.h	/^     &         N_OFNODE_DISP,       N_OFNODE_L2GID,   N_OFNODE_GID,            &$/;"	v
N_OFNODE_GID	earydat.h	/^     &         N_OFNODE_DISP,       N_OFNODE_L2GID,   N_OFNODE_GID,            &$/;"	v
N_OFNODE_GNUM	earydat.h	/^     &         N_OFNODE_GNUM,       N_NODE_WIDTH,     N_PROCN,                 &$/;"	v
N_OFNODE_KEYOUT	earydat.h	/^     &         N_OFNODE_AFFINE,     N_OFNODE_KEYOUT,  N_OFNODE_LID,            &$/;"	v
N_OFNODE_L2GID	earydat.h	/^     &         N_OFNODE_DISP,       N_OFNODE_L2GID,   N_OFNODE_GID,            &$/;"	v
N_OFNODE_LID	earydat.h	/^     &         N_OFNODE_AFFINE,     N_OFNODE_KEYOUT,  N_OFNODE_LID,            &$/;"	v
N_PASSO	earydat.h	/^     &         N_PASSO,             N_YIELD_SIG0,                              &$/;"	v
N_PERMINV	mpfaary.h	/^     &       ,N_PERMINV,N_TRAN,N_AINV$/;"	v
N_POISS	earydat.h	/^      INTEGER  N_MODUL,             N_POISS,          N_BIOTA,                 &$/;"	v
N_POISS	earydat.h	/^     &         N_MODUL,             N_POISS,          N_BIOTA,                 &$/;"	v
N_POISSFLOW	tarydat.h	/^     &   N_MODULFLOW, N_POISSFLOW, N_BIOTAFLOW, N_VSTRAINN$/;"	v
N_POR	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_PORO	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_POROHEX_GELEI	earydat.h	/^     &         N_POROHEX_GELEI,                                                &$/;"	v
N_PORO_NEIGHBOR	earydat.h	/^     &         N_PORO_NEIGHBOR,                                                &$/;"	v
N_PORTRUE	blkary.h	/^      INTEGER N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_PORTRUE	blkary.h	/^     &   N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_PREF	earydat.h	/^     &         N_KEYOUT_CR,         N_PREF,           N_VSTRAIN,               &$/;"	v
N_PRES	tarydat.h	/^      COMMON \/TBAH\/ N_PRES,N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_PRES	tarydat.h	/^C  N_PRES = GRID-ELEMENT ARRAY NUMBER FOR FLUID PRESSURE AT TIME N+1,$/;"	v
N_PRESFACE	ebdary.h	/^     &         N_TRACFACE,N_PRESFACE,$/;"	v
N_PRESN	tarydat.h	/^      COMMON \/TBAH\/ N_PRES,N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_PRESN	tarydat.h	/^      INTEGER N_PRES, N_FLDEN, N_PRESN, N_FLDENN, N_DUNK,$/;"	v
N_PRESN	tarydat.h	/^C  N_PRESN = GRID-ELEMENT ARRAY NUMBER FOR FLUID PRESSURE AT TIME N,$/;"	v
N_PRESN3	tarydat.h	/^     &   N_FLDEN3, N_PRESN3, N_PVN3, N_PRESN_N1, N_PRESN_NM1,$/;"	v
N_PRESN_N1	tarydat.h	/^     &   N_FLDEN3, N_PRESN3, N_PVN3, N_PRESN_N1, N_PRESN_NM1,$/;"	v
N_PRESN_NM1	tarydat.h	/^     &   N_FLDEN3, N_PRESN3, N_PVN3, N_PRESN_N1, N_PRESN_NM1,$/;"	v
N_PRESS	earydat.h	/^     &         N_PRESS,             N_PRESSN,         N_ECON,                  &$/;"	v
N_PRESSN	earydat.h	/^     &         N_PRESS,             N_PRESSN,         N_ECON,                  &$/;"	v
N_PRES_ERR	tarydat.h	/^     &   N_COF,N_RESID,N_VEL,N_PRES_ERR,$/;"	v
N_PROCN	earydat.h	/^     &         N_OFNODE_GNUM,       N_NODE_WIDTH,     N_PROCN,                 &$/;"	v
N_PSTATE	earydat.h	/^     &         N_PSTATE,            N_PSTATEN,                                 &$/;"	v
N_PSTATEN	earydat.h	/^     &         N_PSTATE,            N_PSTATEN,                                 &$/;"	v
N_PSTRAIN	earydat.h	/^     &         N_PSTRAIN,           N_PSTRAINN,                                &$/;"	v
N_PSTRAINN	earydat.h	/^     &         N_PSTRAIN,           N_PSTRAINN,                                &$/;"	v
N_PV	tarydat.h	/^     &   N_CR, N_PV, N_PVN, N_REFPRES, N_DELTAP,$/;"	v
N_PVN	tarydat.h	/^     &   N_CR, N_PV, N_PVN, N_REFPRES, N_DELTAP,$/;"	v
N_PVN3	tarydat.h	/^     &   N_FLDEN3, N_PRESN3, N_PVN3, N_PRESN_N1, N_PRESN_NM1,$/;"	v
N_R4U	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_R4U	blkary.h	/^C  N_R8U, N_R4U, N_I4U = ARRAY NUMBERS FOR R8UTIL, R4UTIL, AND I4UTIL$/;"	v
N_R8U	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_RC	blkary.h	/^      INTEGER N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_RC	blkary.h	/^     &   N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_RCP	blkary.h	/^      INTEGER N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_RCP	blkary.h	/^     &   N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_RCV	blkary.h	/^      INTEGER N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_RCV	blkary.h	/^     &   N_PORTRUE,N_RC,N_RCP,N_RCV,$/;"	v
N_REFPRES	tarydat.h	/^     &   N_CR, N_PV, N_PVN, N_REFPRES, N_DELTAP,$/;"	v
N_RESID	tarydat.h	/^     &   N_COF,N_RESID,N_VEL,N_PRES_ERR,$/;"	v
N_RESIDV	blkary.h	/^     & ,N_BC_TYPE,N_MYPRC,N_DUNKV,N_COFV,N_RESIDV,KTU,KPU$/;"	v
N_ROCK	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_ROCKD	earydat.h	/^     &         N_BIOTM,             N_ROCKD,          N_EDISP,                 &$/;"	v
N_STRAIN	earydat.h	/^     &         N_EDISPN,            N_VSTRAIN_INIT,   N_STRAIN,                &$/;"	v
N_STRAINN	earydat.h	/^     &         N_DISP_COMP,         N_BULK_DEN,       N_STRAINN,               &$/;"	v
N_STRESS	earydat.h	/^     &         N_EPVN,              N_STRESS,         N_STRESSN,               &$/;"	v
N_STRESSN	earydat.h	/^     &         N_EPVN,              N_STRESS,         N_STRESSN,               &$/;"	v
N_STRESS_INIT	earydat.h	/^     &         N_STRESS_INIT,                                                  &$/;"	v
N_STR_RESID	earydat.h	/^     &         N_STR_RESID,         N_CRAC_IBC,                                &$/;"	v
N_TCOFX	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_TCOFY	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_TCOFZ	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_TDISP	earydat.h	/^     &         N_VSTRAIN_NM1,       N_TDISP,          N_PRESSVAL$/;"	v
N_TRACBD	ebdary.h	/^     &         N_TRACBD,ITYPE_BOUNDARY,BDARYIJK,N_DISPBD,N_TYPEBD,$/;"	v
N_TRACFACE	ebdary.h	/^     &         N_TRACFACE,N_PRESFACE,$/;"	v
N_TRAN	mpfaary.h	/^     &       ,N_PERMINV,N_TRAN,N_AINV$/;"	v
N_TYPEBD	ebdary.h	/^     &         N_TRACBD,ITYPE_BOUNDARY,BDARYIJK,N_DISPBD,N_TYPEBD,$/;"	v
N_UPDATE_FG	earydat.h	/^     &         N_UPDATE_R8,         N_UPDATE_FG,                               &$/;"	v
N_UPDATE_I4	earydat.h	/^     &         N_UPDATE_I4,         N_KEYCR_ELE,                               &$/;"	v
N_UPDATE_R8	earydat.h	/^     &         N_UPDATE_R8,         N_UPDATE_FG,                               &$/;"	v
N_UPMOBPROD	tarydat.h	/^     &   N_AINVF,N_UPMOBPROD,$/;"	v
N_VDIM	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_VEL	tarydat.h	/^     &   N_COF,N_RESID,N_VEL,N_PRES_ERR,$/;"	v
N_VISDUM	visual.h	/^     &    N_VISDUM,IFPERM,IFWELL,IFVISINIT,$/;"	v
N_VISDUM	visual.h	/^     &    N_VISDUM,VIS_NVARS,N_VIS_NVARS,$/;"	v
N_VISFLAG	visual.h	/^      COMMON \/visualc\/ VIS_VAL_NODAL, VISFLAG, N_VISFLAG,$/;"	v
N_VISFLAG	visual.h	/^      INTEGER	VISFLAG, N_VISFLAG,N_VIS_BINARY,$/;"	v
N_VIS_BINARY	visual.h	/^      INTEGER	VISFLAG, N_VISFLAG,N_VIS_BINARY,$/;"	v
N_VIS_BINARY	visual.h	/^     &    VIS_BINARY, TECEXISTS, ALLZONES, N_VIS_BINARY,$/;"	v
N_VIS_NVARS	visual.h	/^     &    N_VISDUM,VIS_NVARS,N_VIS_NVARS,$/;"	v
N_VIS_NVARS	visual.h	/^     &    VIS_NVARS,N_VIS_NVARS,$/;"	v
N_VIS_SCL	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,$/;"	v
N_VIS_SCL	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,N_VIS_VEC,VIS_NVEC,$/;"	v
N_VIS_SCL_FLOW	visual.h	/^     &    N_VIS_SCL_POROHEX,N_VIS_SCL_FLOW,$/;"	v
N_VIS_SCL_POROHEX	visual.h	/^     &    N_VIS_SCL_POROHEX,N_VIS_SCL_FLOW(MAXMODELS),$/;"	v
N_VIS_SCL_POROHEX	visual.h	/^     &    N_VIS_SCL_POROHEX,N_VIS_SCL_FLOW,$/;"	v
N_VIS_VARNAMES	visual.h	/^     &    N_VIS_VARNAMES,N_VIS_VARS,VIS_OFFSETS,VIS_VARNAMES,$/;"	v
N_VIS_VARNAMES	visual.h	/^     &    VIS_NAMELEN, N_VIS_VARNAMES,$/;"	v
N_VIS_VARS	visual.h	/^     &    N_VIS_VARNAMES,N_VIS_VARS,VIS_OFFSETS,VIS_VARNAMES,$/;"	v
N_VIS_VARS	visual.h	/^c N_VIS_VARS = contains IPARS pointers to the variables for diff. models$/;"	v
N_VIS_VEC	visual.h	/^     &    N_VIS_VEC,VIS_NVEC,N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_VEC	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,N_VIS_VEC,VIS_NVEC,$/;"	v
N_VIS_XREC	visual.h	/^     &    N_VIS_VEC,VIS_NVEC,N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_XREC	visual.h	/^     &    N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_YREC	visual.h	/^     &    N_VIS_VEC,VIS_NVEC,N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_YREC	visual.h	/^     &    N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_YREC	visual.h	/^c N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC - IPARS pointers to$/;"	v
N_VIS_ZREC	visual.h	/^     &    N_VIS_VEC,VIS_NVEC,N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_ZREC	visual.h	/^     &    N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
N_VIS_dXREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,$/;"	v
N_VIS_dXREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,VIS_NAMELEN,$/;"	v
N_VIS_dYREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,$/;"	v
N_VIS_dYREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,VIS_NAMELEN,$/;"	v
N_VIS_dZREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,$/;"	v
N_VIS_dZREC	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,VIS_NAMELEN,$/;"	v
N_VPROP	mpfaary.h	/^     &       ,N_KCR,N_VPROP,N_VDIM,N_FPROP,N_FDIM,N_FAREA$/;"	v
N_VSTRAIN	earydat.h	/^     &         N_KEYOUT_CR,         N_PREF,           N_VSTRAIN,               &$/;"	v
N_VSTRAIN_INIT	earydat.h	/^     &         N_EDISPN,            N_VSTRAIN_INIT,   N_STRAIN,                &$/;"	v
N_VSTRAIN_NM1	earydat.h	/^     &         N_VSTRAIN_NM1,       N_TDISP,          N_PRESSVAL$/;"	v
N_XC	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_XC	blkary.h	/^C  N_XC, N_YC, N_ZC = GRID BLOCK CORNER ARRAY NUMBERS (FT,REAL*4)$/;"	v
N_XPERM	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_XPERM_R8	earydat.h	/^     &         N_XPERM_R8,          N_YPERM_R8,       N_ZPERM_R8,              &$/;"	v
N_XPERM_REF	earydat.h	/^     &         N_XPERM_REF,         N_YPERM_REF,      N_ZPERM_REF,             &$/;"	v
N_XYPERM	mpfaary.h	/^      COMMON \/MPFAARY\/ N_XYPERM,N_YZPERM,N_XZPERM,N_MPFAQU$/;"	v
N_XYPERM	mpfaary.h	/^      INTEGER N_MPFAQU,N_XYPERM,N_YZPERM,N_XZPERM$/;"	v
N_XZPERM	mpfaary.h	/^      COMMON \/MPFAARY\/ N_XYPERM,N_YZPERM,N_XZPERM,N_MPFAQU$/;"	v
N_XZPERM	mpfaary.h	/^      INTEGER N_MPFAQU,N_XYPERM,N_YZPERM,N_XZPERM$/;"	v
N_YC	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_YC	blkary.h	/^C  N_XC, N_YC, N_ZC = GRID BLOCK CORNER ARRAY NUMBERS (FT,REAL*4)$/;"	v
N_YIELD_ALPHA	earydat.h	/^     &         N_YIELD_ALPHA,       N_FLOW_ALPHA,                              &$/;"	v
N_YIELD_SIG0	earydat.h	/^     &         N_PASSO,             N_YIELD_SIG0,                              &$/;"	v
N_YPERM	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_YPERM_R8	earydat.h	/^     &         N_XPERM_R8,          N_YPERM_R8,       N_ZPERM_R8,              &$/;"	v
N_YPERM_REF	earydat.h	/^     &         N_XPERM_REF,         N_YPERM_REF,      N_ZPERM_REF,             &$/;"	v
N_YZPERM	mpfaary.h	/^      COMMON \/MPFAARY\/ N_XYPERM,N_YZPERM,N_XZPERM,N_MPFAQU$/;"	v
N_YZPERM	mpfaary.h	/^      INTEGER N_MPFAQU,N_XYPERM,N_YZPERM,N_XZPERM$/;"	v
N_ZC	blkary.h	/^     & ,N_XC,N_YC,N_ZC,N_ROCK,N_POR,N_DEPTH,N_TCOFX,N_TCOFY,N_TCOFZ$/;"	v
N_ZC	blkary.h	/^C  N_XC, N_YC, N_ZC = GRID BLOCK CORNER ARRAY NUMBERS (FT,REAL*4)$/;"	v
N_ZPERM	blkary.h	/^     & ,N_PORO,N_XPERM,N_YPERM,N_ZPERM,N_R8U,N_R4U$/;"	v
N_ZPERM_R8	earydat.h	/^     &         N_XPERM_R8,          N_YPERM_R8,       N_ZPERM_R8,              &$/;"	v
N_ZPERM_REF	earydat.h	/^     &         N_XPERM_REF,         N_YPERM_REF,      N_ZPERM_REF,             &$/;"	v
N_matx_L	model_module0.f90	/^real(kind=double), allocatable:: N_matx_L(/;"	v	module:model_type
N_matx_R	model_module0.f90	/^real(kind=double), allocatable:: N_matx_L(:,:),N_matx_R(/;"	v	module:model_type
Nr	rock.h	/^C  ENTRYP(Nr) = ROCK ENTRY PRESSURE (psi)$/;"	v
Nr	rock.h	/^C  NPCGO(Nr) = TABLE NUMBERS FOR PCgo=Pg-Po, VS So (PCgo UNITS = psi)$/;"	v
Nr	rock.h	/^C  RPLMDAW(Nr) = WETTING PHASE COREY KR EXPONENT$/;"	v
Nr	rock.h	/^C  SATWC(Nr) = MINIMUM WATER SATURATION OR POLE FOR PCow TABLE$/;"	v
Numslices	visualc.h	/^static int Numslices=0;$/;"	v
O	makefile	/^O=.o$/;"	m
OBJS	makefile	/^OBJS = $(FRAMEOBJ) $(MODELOBJ) $(BLOCKSOBJ) $(SOLVEOBJ) $(GRAPHOBJ) $(PARALOBJ) $(MPFAOBJ) \\$/;"	m
OB_LAYER	blkary.h	/^      COMMON \/BIG\/ OB_LAYER,UB_LAYER$/;"	v
OB_LAYER	blkary.h	/^      INTEGER OB_LAYER,UB_LAYER$/;"	v
OFF	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
OFNODE_DISP_TMP	model_module0.f90	/^REAL(KIND=DOUBLE), ALLOCATABLE:: DISP_BC_RESIDUE(:),OFNODE_DISP_TMP(/;"	v	module:system
OFNODE_GNUM_TMP	model_module0.f90	/^INTEGER, ALLOCATABLE:: NODE_ST_GDOF(:),ACTIVE_NODE(:),HYPRE_ROWS(:),OFNODE_GNUM_TMP(/;"	v	module:system
ONEDGE	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
ONFACE	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
ONVERTEX	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
OPENBUG	stdout.f	/^      SUBROUTINE OPENBUG /;"	s
OPENIO	ipars.f	/^      SUBROUTINE OPENIO /;"	s
OPPS	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
OUTSIDE	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
PADD	cputime.c	/^   typedef void *           PADD;        \/\/ pointer for address only$/;"	t	file:
PADD	ctypes.h	/^   typedef void *           PADD;        \/\/ pointer for address only$/;"	t
PARALLWELLS	twell.f	/^      SUBROUTINE PARALLWELLS(/;"	s
PARDISO_POROHEX	gstiff0.f90	/^subroutine PARDISO_POROHEX(/;"	s
PASSIVEVARLIST	visual9.f	/^      INTEGER*4, ALLOCATABLE :: PASSIVEVARLIST(/;"	v	module:tecbinmod
PBUF8A	output.h	/^      REAL*8 PBUF8A,PBUF8B,PBUF8C,RBUFR8(3*480)$/;"	v
PBUF8B	output.h	/^      REAL*8 PBUF8A,PBUF8B,PBUF8C,RBUFR8(3*480)$/;"	v
PBUF8B	output.h	/^C  PBUF8A,PBUF8B,PBUF8C = MESSAGE, PRINT, AND RESTART BUFFERS$/;"	v
PBUF8C	output.h	/^      REAL*8 PBUF8A,PBUF8B,PBUF8C,RBUFR8(3*480)$/;"	v
PBUF8C	output.h	/^C  PBUF8A,PBUF8B,PBUF8C = MESSAGE, PRINT, AND RESTART BUFFERS$/;"	v
PCHAR	cputime.c	/^   typedef CHAR *           PCHAR;       \/\/ pointer to a CHARACTER STRING$/;"	t	file:
PCHAR	ctypes.h	/^   typedef CHAR *           PCHAR;       \/\/ pointer to a CHARACTER STRING$/;"	t
PCHAR	ctypes.h	/^   typedef _fcd             PCHAR;       \/\/ pointer to a CHARACTER STRING$/;"	t
PCHAR	ctypes.h	/^   typedef char *           PCHAR;       \/\/ pointer to a CHARACTER STRING$/;"	t
PCLOW	rock.h	/^     &       EPC,PCLOW,IFTTHETA$/;"	v
PEFLOW	emodel.h	/^     &         PEFLOW,NERRC,DISPOUT,                                           &$/;"	v
PEHYPRE	elastic.f	1685;"	c	subroutine:HYPRE_POROHEX
PEPORE_VOL	ecompute.f	/^      SUBROUTINE PEPORE_VOL(/;"	s
PEPVTOL	emodel.h	/^     &         PEPVTOL,                                                        &$/;"	v
PEPV_ERR	ecompute.f	/^      SUBROUTINE PEPV_ERR(/;"	s
PEPV_ERR_MB	ecompute.f	/^      SUBROUTINE PEPV_ERR_MB(/;"	s
PERM2COORD	buildmpfa.f	/^      SUBROUTINE PERM2COORD(/;"	s
PERMCPY	visout.f	/^      SUBROUTINE PERMCPY /;"	s
PERMOUT	visout.f	/^      SUBROUTINE PERMOUT(/;"	s
PERMSCALE	rockutil.f	/^      SUBROUTINE PERMSCALE$/;"	s
PERR_L2L2	terrcalc.h	/^      COMMON \/TERRCOM\/PERR_SUB,PERR_LinftyL2,PERR_L2L2,$/;"	v
PERR_LinftyL2	terrcalc.h	/^      COMMON \/TERRCOM\/PERR_SUB,PERR_LinftyL2,PERR_L2L2,$/;"	v
PERR_SUB	terrcalc.h	/^      COMMON \/TERRCOM\/PERR_SUB,PERR_LinftyL2,PERR_L2L2,$/;"	v
PESETARYR8N	ecompute.f	/^      SUBROUTINE PESETARYR8N(/;"	s
PEXACT	terrcalc.f	/^      REAL*8 FUNCTION PEXACT(/;"	f
PE_PERM	elastic.f	/^      SUBROUTINE PE_PERM(/;"	s
PE_UPPERM	elastic.f	/^      SUBROUTINE PE_UPPERM(/;"	s
PFN	fracture.h	/^      COMMON\/FRACCOM\/PFN,FRACWIDTH,FRACWIDTH_TMP,NUMFRACFACE,$/;"	v
PHASE_NAMES	moddefs.h	/^      DATA PHASE_NAMES \/                                                       &$/;"	v
PHYMOD	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
PI	tetgen.h	/^  static REAL PI;$/;"	m	class:tetgenmesh
PINIT	tfluidsc.h	/^C  PINIT  = INITIAL FLUID PRESSURE AT REFERENCE DEPTH, psi$/;"	v
PINT2	cputime.c	/^   typedef int *            PINT2;       \/\/ pointer to a INTEGER$/;"	t	file:
PINT2	ctypes.h	/^   typedef int *            PINT2;       \/\/ pointer to a INTEGER$/;"	t
PINT4	cputime.c	/^   typedef int *            PINT4;       \/\/ pointer to a INTEGER$/;"	t	file:
PINT4	ctypes.h	/^   typedef int *            PINT4;       \/\/ pointer to a INTEGER$/;"	t
PLIMIT	wells.h	/^     & SPQ,PLIMIT,$/;"	v
PLOG2	cputime.c	/^   typedef int *            PLOG2;       \/\/ pointer to a LOGICAL$/;"	t	file:
PLOG2	ctypes.h	/^   typedef int *            PLOG2;       \/\/ pointer to a LOGICAL$/;"	t
PLOG4	cputime.c	/^   typedef int *            PLOG4;       \/\/ pointer to a LOGICAL$/;"	t	file:
PLOG4	ctypes.h	/^   typedef int *            PLOG4;       \/\/ pointer to a LOGICAL$/;"	t
PLOT_MYPRC	layout.h	/^      LOGICAL MYBLK,MODPROC,MFMFE_BRICKS,PLOT_MYPRC,DEALII,$/;"	v
PLOT_PERM_CHANGE	emodel.h	/^     &         SDPM,PLOT_PERM_CHANGE,TYPESDP,MECH_BC_NCASE,                    &$/;"	v
PLY	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
POINT	eprojections.f	/^      REAL*8, ALLOCATABLE :: VOL1(:,:),VOL2(:,:),POINT(/;"	v	module:eprojmod
POINTS	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	t	typeref:struct:point
POLL	putil.f	/^      SUBROUTINE POLL /;"	s
POLY	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
POROHEX	moddefs.h	/^     &	TRCHEM,POROHEX,CMFMFE,SIMFMFE,HIMFMFE,AHYDROI$/;"	v
POROHEXLINT	hypre.h	/^     &   COUPLED_ITER,POROHEXLINT,HYPRE_EVFEM,DBGEV$/;"	v
POROHEX_COPY_EDISP	elastic.f	/^      SUBROUTINE POROHEX_COPY_EDISP(/;"	s
POROHEX_GFSIZE	hypre.h	/^     &   POROHEX_GSIZE,POROHEX_GFSIZE,                                         &$/;"	v
POROHEX_GSIZE	hypre.h	/^     &   POROHEX_GSIZE,POROHEX_GFSIZE,                                         &$/;"	v
POROHEX_IFLOWER	hypre.h	/^     &   POROHEX_LFSIZE,POROHEX_IFLOWER,POROHEX_IFUPPER,                       &$/;"	v
POROHEX_IFUPPER	hypre.h	/^     &   POROHEX_LFSIZE,POROHEX_IFLOWER,POROHEX_IFUPPER,                       &$/;"	v
POROHEX_ILOWER	hypre.h	/^      INTEGER POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                     &$/;"	v
POROHEX_ILOWER	hypre.h	/^     &   POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                          &$/;"	v
POROHEX_IUPPER	hypre.h	/^      INTEGER POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                     &$/;"	v
POROHEX_IUPPER	hypre.h	/^     &   POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                          &$/;"	v
POROHEX_LALLELEM	hypre.h	/^     &   POROHEX_LALLSIZE,POROHEX_LFALLSIZE,POROHEX_LALLELEM,                  &$/;"	v
POROHEX_LALLSIZE	hypre.h	/^     &   POROHEX_LALLSIZE,POROHEX_LFALLSIZE,POROHEX_LALLELEM,                  &$/;"	v
POROHEX_LFALLSIZE	hypre.h	/^     &   POROHEX_LALLSIZE,POROHEX_LFALLSIZE,POROHEX_LALLELEM,                  &$/;"	v
POROHEX_LFSIZE	hypre.h	/^     &   POROHEX_LFSIZE,POROHEX_IFLOWER,POROHEX_IFUPPER,                       &$/;"	v
POROHEX_LSIZE	hypre.h	/^      INTEGER POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                     &$/;"	v
POROHEX_LSIZE	hypre.h	/^     &   POROHEX_LSIZE,POROHEX_ILOWER,POROHEX_IUPPER,                          &$/;"	v
POROHEX_POST_PRCSS	estep.f	/^      SUBROUTINE POROHEX_POST_PRCSS(/;"	s
POROHEX_POST_PRCSSW	estep.f	/^      SUBROUTINE POROHEX_POST_PRCSSW(/;"	s
PORP	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
PORP	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
POR_VOL	elastic.f	/^      SUBROUTINE POR_VOL(/;"	s
PRCMAP	layout.h	/^      INTEGER PRCMAP,NUMBLK,ILAY,JLAY,KLAY,MAXREF,NUMTMP,NUMMODEL,$/;"	v
PRCMAPN	layout.h	/^      INTEGER PRCMAPN, N0MAPN$/;"	v
PREAL4	cputime.c	/^   typedef float *          PREAL4;      \/\/ pointer to a REAL*4$/;"	t	file:
PREAL4	ctypes.h	/^   typedef float *          PREAL4;      \/\/ pointer to a REAL*4$/;"	t
PREAL8	cputime.c	/^   typedef double *         PREAL8;      \/\/ pointer to a REAL*8$/;"	t	file:
PREAL8	ctypes.h	/^   typedef double *         PREAL8;      \/\/ pointer to a REAL*8$/;"	t
PRECOND_ID	hypre.h	/^     &   COARSEN_TYPE,MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                &$/;"	v
PRECOND_ID	hypre.h	/^     &   MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                             &$/;"	v
PRESVAL	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
PRESVAL	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
PRES_LOAD_FBC	model_module0.f90	/^REAL(KIND=DOUBLE),ALLOCATABLE:: TRAC_BC(:,:),TRAC_FBC(:,:),PRES_LOAD_FBC(/;"	v	module:system
PRE_PRCSS2	pre_prcss0.f90	/^SUBROUTINE PRE_PRCSS2(/;"	s
PRINT	output.h	/^C  PBUF8A,PBUF8B,PBUF8C = MESSAGE, PRINT, AND RESTART BUFFERS$/;"	v
PRINT1D	fcns.f	/^      SUBROUTINE PRINT1D(/;"	s
PRINT1DI4	fcns.f	/^      SUBROUTINE PRINT1DI4(/;"	s
PRINT2D	fcns.f	/^      SUBROUTINE PRINT2D(/;"	s
PRINT3D	fcns.f	/^      SUBROUTINE PRINT3D(/;"	s
PRINTSYSARY	fcns.f	/^      SUBROUTINE PRINTSYSARY(/;"	s
PRINT_LEVEL	hypre.h	/^     &   NUM_SWEEPS,MAX_LEVELS,PRINT_SOL,PRINT_LEVEL,                          &$/;"	v
PRINT_SOL	hypre.h	/^     &   NUM_SWEEPS,MAX_LEVELS,PRINT_SOL,PRINT_LEVEL,                          &$/;"	v
PRINT_VM_INFO	divide.f	/^      SUBROUTINE PRINT_VM_INFO(/;"	s
PROCOUT	putil.f	/^      SUBROUTINE PROCOUT /;"	s
PROJECTION_OPERATORS	eprojections.f	/^      SUBROUTINE PROJECTION_OPERATORS(/;"	s
PROPOUT	emodel.h	/^      LOGICAL  PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
PROPOUT	emodel.h	/^     &         PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
PRTSPL	table.f	/^      SUBROUTINE PRTSPL /;"	s
PRTTAB	table.f	/^      SUBROUTINE PRTTAB /;"	s
PRTTIT	prtout.f	/^      SUBROUTINE PRTTIT /;"	s
PRTVEC4	prtout.f	/^      SUBROUTINE PRTVEC4 /;"	s
PSIZE	hypre.h	/^     &   LSIZE,PSIZE,ILOW,IHIGH,                                               &$/;"	v
PSTATEOUT	emodel.h	/^     &         PSTRNOUT,PSTATEOUT,                                             &$/;"	v
PSTATEOUT	emodel.h	/^     &         PSTRNOUT,PSTATEOUT,NO_ELASTIC_NEWTON$/;"	v
PSTRNOUT	emodel.h	/^     &         PSTRNOUT,PSTATEOUT,                                             &$/;"	v
PSTRNOUT	emodel.h	/^     &         PSTRNOUT,PSTATEOUT,NO_ELASTIC_NEWTON$/;"	v
PUTBT	read2.f	/^      SUBROUTINE PUTBT /;"	s
PUTCS	read2.f	/^      SUBROUTINE PUTCS /;"	s
PUTERR	read1.f	/^      SUBROUTINE PUTERR /;"	s
PUTI2	read2.f	/^      SUBROUTINE PUTI2 /;"	s
PUTI4	read2.f	/^      SUBROUTINE PUTI4 /;"	s
PUTL2	read2.f	/^      SUBROUTINE PUTL2 /;"	s
PUTL4	read2.f	/^      SUBROUTINE PUTL4 /;"	s
PUTR4	read2.f	/^      SUBROUTINE PUTR4 /;"	s
PUTUTIT	iwell.f	/^      SUBROUTINE PUTUTIT /;"	s
PV3_KEY	visual.h	/^C      COMMON \/VISPV3\/ PV3_KEY,PV3_LIM1,PV3_LIM2,IFPV3$/;"	v
PV3_LIM1	visual.h	/^C      COMMON \/VISPV3\/ PV3_KEY,PV3_LIM1,PV3_LIM2,IFPV3$/;"	v
PV3_LIM2	visual.h	/^C      COMMON \/VISPV3\/ PV3_KEY,PV3_LIM1,PV3_LIM2,IFPV3$/;"	v
Point1	visual4.c	139;"	d	file:
Point1	visual4.c	430;"	d	file:
Point1	visual4.c	452;"	d	file:
Point1	visual4.c	96;"	d	file:
Point2	visual4.c	140;"	d	file:
Point2	visual4.c	431;"	d	file:
Point2	visual4.c	453;"	d	file:
Point2	visual4.c	97;"	d	file:
QCOFN	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
QCOFW	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
QFLOC	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
QRESID	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
Q_MULTIRATE	control.h	/^     &   MULTIRATE_FLAG,Q_MULTIRATE, GCITER_C, M_ITER, COUP_ITRN$/;"	v
Q_MULTIRATE	control.h	/^     &   TOTAL_NUM_LIN_ITER_F,MC_SKIPPED,MULTIRATE_FLAG,Q_MULTIRATE,           &$/;"	v
QuadG27	fcns.f	/^      subroutine QuadG27(/;"	s
R4	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: R4,I2,I3$/;"	m	class:REFERENCE
R4GETM	many.f	/^      SUBROUTINE R4GETM /;"	s
R4GETS	prtout.f	/^      SUBROUTINE R4GETS /;"	s
R4UPDATE	many.f	/^      SUBROUTINE R4UPDATE /;"	s
R4UPDATE2	many.f	/^      SUBROUTINE R4UPDATE2 /;"	s
R4UTIL	blkary.h	/^      COMMON \/BLKARY\/R8UTIL,R4UTIL,NXDIM,NYDIM,NZDIM$/;"	v
R4UTIL	blkary.h	/^C  N_R8U, N_R4U, N_I4U = ARRAY NUMBERS FOR R8UTIL, R4UTIL, AND I4UTIL$/;"	v
R8	msjunk.h	/^      !MS$ATTRIBUTES REFERENCE :: R8,I2,I3$/;"	m	class:REFERENCE
R8GETM	many.f	/^      SUBROUTINE R8GETM /;"	s
R8GETS	prtout.f	/^      SUBROUTINE R8GETS /;"	s
R8UPDATE	many.f	/^      SUBROUTINE R8UPDATE /;"	s
R8UPDATE2	many.f	/^      SUBROUTINE R8UPDATE2 /;"	s
R8UTIL	blkary.h	/^      COMMON \/BLKARY\/R8UTIL,R4UTIL,NXDIM,NYDIM,NZDIM$/;"	v
R8UTIL	blkary.h	/^C  R8UTIL = UTILITY VARIABLE (REAL*8)$/;"	v
RANDOM	comp.f	/^      FUNCTION RANDOM(/;"	f
READER	read1.f	/^      SUBROUTINE READER /;"	s
READ_GEA	ipars.f	/^      SUBROUTINE READ_GEA(/;"	s
READ_GEA_MPFA	ipars.f	/^      SUBROUTINE READ_GEA_MPFA(/;"	s
REAL	tetgen.h	35;"	d
RECT	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	t	typeref:struct:rectcells
RECTL	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	t	typeref:struct:rectlist
REFPERM	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
REFPORO	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
RELAX_TYPE	hypre.h	/^      INTEGER LSOL_ITMAX,HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,                   &$/;"	v
RELAX_TYPE	hypre.h	/^     &   HYPRE_SOL_ID,RELAX_TYPE,CYCLE_TYPE,COARSEN_TYPE,                      &$/;"	v
RELPERM3	prop.f	/^      SUBROUTINE RELPERM3 /;"	s
RESIDM	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
RESIDM	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
RESIDM	tbaldat.h	/^C  RESIDM = MAXIMUM RESIDUAL (ABSOLUTE VALUE)$/;"	v
RESIDP	emodel.h	/^      REAL*8  COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
RESIDP	emodel.h	/^     &         COEFB,COEFM,COEFN,RESIDP,RESIDO$/;"	v
RESIDT	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
RESIDT	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
RESIN	restart.f	/^      SUBROUTINE RESIN /;"	s
RESOUT	restart.f	/^      SUBROUTINE RESOUT /;"	s
RET_OLDTIMP_MR	tprop.f	/^      SUBROUTINE RET_OLDTIMP_MR(/;"	s
RGEAIN	restart.f	/^      SUBROUTINE RGEAIN /;"	s
RGEAOUT	restart.f	/^      SUBROUTINE RGEAOUT /;"	s
RIDGEVERTEX	tetgen.h	/^  enum verttype {UNUSEDVERTEX, DUPLICATEDVERTEX, RIDGEVERTEX, ACUTEVERTEX,$/;"	e	enum:tetgenmesh::verttype
RMA1	tbaldat.h	/^     & RESIDM,RESIDT,RMA1,QFLOC,ELERATE,FLUXOM,FLITNP,$/;"	v
RNBLK	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
RNBLK	rockpg.h	/^C  RNBLK   = PROGRAM EXTERNAL VARIABLES     BLOCK NUMBER$/;"	v
ROCKPROG	prop.f	/^      SUBROUTINE ROCKPROG /;"	s
ROOTname	visual.c	/^char ROOTname [MAXFNAMELEN] ; \/\/ root name for the vis output files$/;"	v
RPLMDA	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
RPLMDAIM	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
RPLMDANW	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
RPLMDAW	rock.h	/^     &       RPLMDAW,RPLMDANW,RPLMDAIM,REFPERM,REFPORO,KRW0,$/;"	v
RRI4	putil.f	/^      SUBROUTINE RRI4 /;"	s
RRR4	putil.f	/^      SUBROUTINE RRR4 /;"	s
RRR8	putil.f	/^      SUBROUTINE RRR8 /;"	s
RSI4	restart.f	/^      SUBROUTINE RSI4 /;"	s
RSINI4	restart.f	/^      SUBROUTINE RSINI4 /;"	s
RSINL4	restart.f	/^      SUBROUTINE RSINL4 /;"	s
RSINR4	restart.f	/^      SUBROUTINE RSINR4 /;"	s
RSINR8	restart.f	/^      SUBROUTINE RSINR8 /;"	s
RSL4	restart.f	/^      SUBROUTINE RSL4 /;"	s
RSR4	restart.f	/^      SUBROUTINE RSR4 /;"	s
RSR8	restart.f	/^      SUBROUTINE RSR8 /;"	s
RSSI4	putil.f	/^      SUBROUTINE RSSI4 /;"	s
RSSR4	putil.f	/^      SUBROUTINE RSSR4 /;"	s
RSSR8	putil.f	/^      SUBROUTINE RSSR8 /;"	s
RTIMIN	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
RTIMIN	control.h	/^      REAL*8 TIM,DELTIM,RTIMIN,ACTTIM(10),DTIMOUT,DTIMRES,STEPMULT,            &$/;"	v
R_dof_st	model_module0.f90	/^integer e_id_1,e_id_2,node_dof_L,node_dof_R,R_dof_st,/;"	v	module:model_type
Readpar_error	readdatc.c	/^static int Readpar_error=0;$/;"	v	file:
S	makefile	/^S=\/$/;"	m
SATOC	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
SATWC	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
SCALE_1NC	ecompute.f	/^      SUBROUTINE SCALE_1NC(/;"	s
SCALE_2NC	ecompute.f	/^      SUBROUTINE SCALE_2NC(/;"	s
SCLARYR8N	initial.f	/^      SUBROUTINE SCLARYR8N /;"	s
SCOF	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
SCONS	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
SDPM	emodel.h	/^      LOGICAL  SDPM,PLOT_PERM_CHANGE$/;"	v
SDPM	emodel.h	/^     &         SDPM,PLOT_PERM_CHANGE,TYPESDP,MECH_BC_NCASE,                    &$/;"	v
SDPWELL	elastic.f	/^      SUBROUTINE SDPWELL(/;"	s
SEISMIC	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
SETARYI4	initial.f	/^      SUBROUTINE SETARYI4 /;"	s
SETARYI4N	ecompute.f	/^      SUBROUTINE SETARYI4N /;"	s
SETARYI4P	initial.f	/^      SUBROUTINE SETARYI4P /;"	s
SETARYR4	initial.f	/^      SUBROUTINE SETARYR4 /;"	s
SETARYR4N	initial.f	/^      SUBROUTINE SETARYR4N /;"	s
SETARYR8	initial.f	/^      SUBROUTINE SETARYR8 /;"	s
SETARYR8N	initial.f	/^      SUBROUTINE SETARYR8N /;"	s
SETBLKS	idata.f	/^      SUBROUTINE SETBLKS(/;"	s
SETCVF	units.f	/^      ENTRY SETCVF(/;"	e	subroutine:MAKESI
SETEXU	tdata.f	/^      SUBROUTINE SETEXU /;"	s
SETGEOM	idata.f	/^      SUBROUTINE SETGEOM /;"	s
SETGEOMNEW	idata.f	/^      SUBROUTINE SETGEOMNEW /;"	s
SETMODEL	idata.f	/^      SUBROUTINE SETMODEL(/;"	s
SETMPFAARYR8N	initial.f	/^      SUBROUTINE SETMPFAARYR8N /;"	s
SETNBG	read1.f	/^      SUBROUTINE SETNBG /;"	s
SETPRCS	many.f	/^      SUBROUTINE SETPRCS /;"	s
SETREL3	prop.f	/^      SUBROUTINE SETREL3 /;"	s
SETSIZE	makefile	/^SETSIZE=echo $(SIZDAT) $@ > ech$/;"	m
SETSIZE1	makefile	/^SETSIZE1=echo $(SIZDAT) $< $@ > ech$/;"	m
SETSTEP	ipars.f	/^      SUBROUTINE SETSTEP /;"	s
SETTAGS	putil.f	/^      SUBROUTINE SETTAGS /;"	s
SETUP_TYPE	hypre.h	/^     &   COARSEN_TYPE,MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                &$/;"	v
SETUP_TYPE	hypre.h	/^     &   MEASURE_TYPE,SETUP_TYPE,PRECOND_ID,K_DIM,                             &$/;"	v
SET_MFMFE_BRICKS	impfa.f	/^      SUBROUTINE SET_MFMFE_BRICKS(/;"	s
SGHIGH	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
SGI64	cputime.c	11;"	d	file:
SGI64	ctypes.h	16;"	d
SGIC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SGIT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SGLOW	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
SGPC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SGPT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SGRES	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
SHAREEDGE	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	e	enum:tetgenmesh::interresult
SHAREFACE	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	e	enum:tetgenmesh::interresult
SHAREVARFROMZONE	visual9.f	/^      INTEGER*4, ALLOCATABLE :: PASSIVEVARLIST(:),VALUELOCATION(:),$/;"	v	module:tecbinmod
SHAREVERT	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	e	enum:tetgenmesh::interresult
SIGNAL_HANDLER	ipars.f	/^      SUBROUTINE SIGNAL_HANDLER(/;"	s
SIMFMFE	moddefs.h	/^     &	TRCHEM,POROHEX,CMFMFE,SIMFMFE,HIMFMFE,AHYDROI$/;"	v
SINGLEE	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
SINGLEI	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
SIZDAT	makefile	/^SIZDAT=.$(S)ipars.siz$/;"	m
SIZE	makefile	/^SIZE=.$(S)size$/;"	m
SIZEIT	makefile	/^SIZEIT=$(SIZE) < ech$/;"	m
SKEMPTON	emodel.h	/^     &       SKEMPTON,MANDEL_FORCE,MANDEL_NUU,MANDEL_NU,MANDEL_E,              &$/;"	v
SKIP	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL1(:),VAL3(:),SKIP(/;"	v	module:eprojmod
SLICE	visualc.h	/^} SLICE;$/;"	t	typeref:struct:slicelist
SNDABUF	many.f	/^      SUBROUTINE SNDABUF /;"	s
SNOD	scrat2.h	/^      REAL*8    W,BB,BBB,BCF,DATS,SCOF,SCONS,SNOD,FACMU,FACAU$/;"	v
SOIC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SOIT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SOLVEOBJ	makefile	/^SOLVEOBJ = $(LSOROBJ) $(BCGSOBJ) $(MULGRDOBJ) $(GMRESOBJ) $(PCGBJ) \\$/;"	m
SOPC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SOPT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SORES	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
SOURCE	terrcalc.f	/^      REAL*8 FUNCTION SOURCE(/;"	f
SPLINE	table.f	/^      SUBROUTINE SPLINE(/;"	s
SPLNOUT	control.h	/^      LOGICAL LEVELA,LEVELB,LEVELC,LEVELD,LEVELE,SPLNOUT,GEOMOUT,              &$/;"	v
SPLNOUT	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
SPQ	wells.h	/^     & SPQ,PLIMIT,$/;"	v
SPREAD	putil.f	/^      SUBROUTINE SPREAD /;"	s
SPREAD4	putil.f	/^      SUBROUTINE SPREAD4 /;"	s
SPREAD8	putil.f	/^      SUBROUTINE SPREAD8 /;"	s
SPREADC	putil.f	/^      SUBROUTINE SPREADC /;"	s
STAG	compc.h	/^      CHARACTER*1 A(NSTML),TAG,STAG,SUB2(9),OPPS(16)$/;"	v
STAG	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
START1	blkary.h	/^     &   NPAY,START1,GLOBAL,FLAGBLK,NONMATCHING,HETEROGENEOUS$/;"	v
STARTMODACT	visual.h	/^     &    VIS_SCL_POROHEX,VIS_SCL_FLOW(MAXMODELS),STARTMODACT,$/;"	v
STARTMODACT	visual.h	/^     &    VIS_SCL_POROHEX,VIS_SCL_FLOW,STARTMODACT,$/;"	v
STBEXT	unitsex.h	/^      LOGICAL STBEXT,SCFEXT$/;"	v
STBEXT	unitsex.h	/^     & INTDENS,INTCONC,INTCOMP,STBEXT,SCFEXT$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ALCGEA$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ALCIBUF$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ALCMGA$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ALLBLOCKS$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ARYDAT$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: ARYTYPE$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: BLKDIM$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: BLKNAME$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: BLKOFF$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: CALLFACE$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: CALLWORK$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: CLEAREV$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: DEFBLK$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: DEFGRD$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTDEF$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTDEL$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTGET$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTNAM$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTNUM$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: EXTPUT$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: FREARY$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: FREEALL$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: GEAOUT$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: GETANAM$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: KILARY$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: MGWORK1$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: MGWORK2$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: MGWORK3$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: MGWORK4$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: PNTMMOD$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: PNTVAR$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: PNTVARR4$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: PNTVARR8$/;"	v
STDCALL	msjunk.h	/^      !MS$ATTRIBUTES STDCALL, REFERENCE :: RALCGEA$/;"	v
STDENG	unitsex.h	/^      COMMON \/UNITSEX\/STDENO,STDENW,STDENG,$/;"	v
STDENG	unitsex.h	/^      REAL*8 STDENO,STDENW,STDENG,$/;"	v
STDENO	unitsex.h	/^      REAL*8 STDENO,STDENW,STDENG,$/;"	v
STDENW	unitsex.h	/^      COMMON \/UNITSEX\/STDENO,STDENW,STDENG,$/;"	v
STDENW	unitsex.h	/^      REAL*8 STDENO,STDENW,STDENG,$/;"	v
STDOUT	stdout.f	/^      SUBROUTINE STDOUT /;"	s
STEP	ipars.f	/^      SUBROUTINE STEP /;"	s
STEPMULT	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
STFLDEN	tfluidsc.h	/^      COMMON \/TFLUIDS\/FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
STFLDEN	tfluidsc.h	/^      REAL*4 FLCMP,STFLDEN,FLVIS,DINIT,PINIT$/;"	v
STFLDEN	tfluidsc.h	/^C  STFLDEN = FLUID DENSITY AT 0 PRESSURE, lb\/cu-ft(STANDARD FLUID DENSITY)$/;"	v
STL	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
STOREMATRIX	mpfa_tran.f	/^      SUBROUTINE STOREMATRIX(/;"	s
STORERHS	mpfa_tran.f	/^      SUBROUTINE STORERHS(/;"	s
STOREVEL	buildmpfa.f	/^      SUBROUTINE STOREVEL(/;"	s
STRNOUT	emodel.h	/^      LOGICAL  PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
STRNOUT	emodel.h	/^     &         PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
STRONG_THRES	hypre.h	/^      COMMON \/HYPRE\/ LSOL_TOL,STRONG_THRES,TRUNC_FACTOR,                       &$/;"	v
STRONG_THRES	hypre.h	/^      REAL*8 LSOL_TOL,STRONG_THRES,TRUNC_FACTOR$/;"	v
STRSOUT	emodel.h	/^      LOGICAL  PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
STRSOUT	emodel.h	/^     &         PROPOUT,STRSOUT,STRNOUT,ESTRSOUT,BODYFORCE_INPUT,               &$/;"	v
STRSSYY	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
STRSSYY	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
SUB2	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
SUMIT	putil.f	/^      SUBROUTINE SUMIT /;"	s
SWHIGH	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
SWIC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SWIT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SWLOW	rock.h	/^     &       SGLOW,SGHIGH,SWLOW,SWHIGH,KGLOW,KGHIGH,KWLOW,KWHIGH,$/;"	v
SWPC	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SWPT	wells.h	/^     & SWIC,SWPC,SGIC,SGPC,SOPC,SOIC,SWIT,SWPT,SGIT,SGPT,SOPT,SOIT,$/;"	v
SWRES	rock.h	/^      REAL*8 SATWC,SATOC,SWRES,SORES,SGRES,KRNW0,RPLMDA,ENTRYP,$/;"	v
SXC	wells.h	/^C     & SXC,$/;"	v
SXT	wells.h	/^C     & SXT,$/;"	v
ScaMulMat	fcns.f	/^      SUBROUTINE ScaMulMat(/;"	s
Slice	visual4.c	/^SLICE   Slice [MAXSLI];$/;"	v
TABLE	table.f	/^      SUBROUTINE TABLE(/;"	s
TABUNT	table.f	/^      SUBROUTINE TABUNT /;"	s
TABX	utldat.h	/^      COMMON \/TABLES\/ TABX,TABY,DYDX,TRANC1(76),VALUES(20000),$/;"	v
TABY	utldat.h	/^      COMMON \/TABLES\/ TABX,TABY,DYDX,TRANC1(76),VALUES(20000),$/;"	v
TABY	utldat.h	/^      REAL*8 TABX,TABY,DYDX,TRANC1,VALUES,XYZERO$/;"	v
TAG	compc.h	/^      CHARACTER*1 A(NSTML),TAG,STAG,SUB2(9),OPPS(16)$/;"	v
TAG	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
TARRAY	tarray.f	/^      SUBROUTINE TARRAY /;"	s
TAUG	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
TAUW	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
TBDBAL	tbdary.f	/^      SUBROUTINE TBDBAL(/;"	s
TBDINTAB	tbdary.f	/^      SUBROUTINE TBDINTAB(/;"	s
TBDPROP	tbdary.f	/^      SUBROUTINE TBDPROP(/;"	s
TBDPROPW	tbdary.f	/^      SUBROUTINE TBDPROPW(/;"	s
TBDTRAN	tbdary.f	/^      subroutine TBDTRAN$/;"	s
TBLKOUT	read1.f	/^      SUBROUTINE TBLKOUT /;"	s
TBUGOUT	tprop.f	/^      SUBROUTINE TBUGOUT /;"	s
TECBIN	visual9.f	/^      LOGICAL :: TECBIN$/;"	v	module:tecbinmod
TECBLK	visual9.f	/^      TYPE (tecbinblk), ALLOCATABLE :: TECBLK(/;"	v	module:tecbinmod
TECDBG	visual9.f	/^      LOGICAL :: TECDBG /;"	v	module:tecbinmod
TECEXISTS	visual.h	/^      LOGICAL   VIS_BINARY,TECEXISTS,ALLZONES$/;"	v
TECEXISTS	visual.h	/^     &    VIS_BINARY, TECEXISTS, ALLZONES, N_VIS_BINARY,$/;"	v
TECGRID	visgrid.f	/^      SUBROUTINE TECGRID(/;"	s
TECLAY	vistabc.h	/^      COMMON \/VISTABC\/ TECPLT,TECLAY,HAVBAS,NFTABPLT,NFTABLAY,$/;"	v
TECPLT	vistabc.h	/^      LOGICAL TECPLT,TECLAY$/;"	v
TECPLT	vistabc.h	/^C  TECPLT = TECPLOT PLOT OUTPUT CONTROL (.TRUE. ==> DO IT)$/;"	v
TECUNIT	visual9.f	/^      INTEGER :: TECUNIT /;"	v	module:tecbinmod
TERRCALC	terrcalc.f	/^      SUBROUTINE TERRCALC(/;"	s
TERRCALC_FINAL	terrcalc.f	/^      SUBROUTINE TERRCALC_FINAL(/;"	s
TETLIBRARY	tetgen.h	23;"	d
TGL	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
TGL	rock.h	/^C  TWL,TGL      = FITTING PARAMETERS FOR WATER AND GAS USING TRAPPING MODEL$/;"	v
TIADAT	tisdat.f	/^      SUBROUTINE TIADAT /;"	s
TIM	control.h	/^      COMMON\/CONTROL\/TIM,DELTIM,RTIMIN,ACTTIM,DTIMOUT,DTIMRES,STEPMULT,        &$/;"	v
TIM	control.h	/^      REAL*8 TIM,DELTIM,RTIMIN,ACTTIM(10),DTIMOUT,DTIMRES,STEPMULT,            &$/;"	v
TIMES	cputime.c	58;"	d	file:
TIMGET	timer.f	/^      SUBROUTINE TIMGET /;"	s
TIMOFF	timer.f	/^      SUBROUTINE TIMOFF /;"	s
TIMON	timer.f	/^      SUBROUTINE TIMON /;"	s
TIMOUT	timer.f	/^      SUBROUTINE TIMOUT /;"	s
TIMRUN	times.h	/^      LOGICAL TIMRUN,ALLTIMES$/;"	v
TIMSET	timer.f	/^      SUBROUTINE TIMSET /;"	s
TIMTOT	times.h	/^      REAL*8 TIMTOT,TIMIN$/;"	v
TINIT	tivdat.f	/^      SUBROUTINE TINIT /;"	s
TINIT2	tivdat.f	/^      SUBROUTINE TINIT2 /;"	s
TISDAT	tisdat.f	/^      SUBROUTINE TISDAT /;"	s
TIVDAT	tivdat.f	/^      SUBROUTINE TIVDAT /;"	s
TMAXRESID	tprop.f	/^      SUBROUTINE TMAXRESID /;"	s
TMODEL	tbaldat.h	/^C  TMODEL = DENSITY TYPE (Affects TPROP, TBDPROP, TIVDAT, TWELL)$/;"	v
TOLY	model_module0.f90	/^   real(kind=double), parameter :: TOLY /;"	v	module:control
TOTAL_CRACKED_FACE	emodel.h	/^     &    TOTAL_CRACKED_FACE,                                                  &$/;"	v
TOTAL_CRAC_FACE	model_module0.f90	/^        TOTAL_PRES_LOAD_BC,TOTAL_PRES_LOAD_FBC,&$/;"	v	module:system
TOTAL_DISP_BC	model_module0.f90	/^INTEGER TOTAL_DISP_BC,/;"	v	module:system
TOTAL_DISP_FBC	model_module0.f90	/^INTEGER TOTAL_DISP_BC, TOTAL_DISP_FBC,/;"	v	module:system
TOTAL_FACE_LOAD_BC	model_module0.f90	/^        TOTAL_TRAC_BC, TOTAL_TRAC_FBC,&$/;"	v	module:system
TOTAL_NR_NUMBER	model_module0.f90	/^integer ele_tl,node_tl,dof_tl,number_node_out,TOTAL_NR_NUMBER$/;"	v	module:system
TOTAL_NUM_LIN_ITER_F	control.h	/^      INTEGER TOTAL_NUM_LIN_ITER_M,TOTAL_NUM_LIN_ITER_F, MC_SKIPPED,           &$/;"	v
TOTAL_NUM_LIN_ITER_F	control.h	/^     &   TOTAL_NUM_LIN_ITER_F,MC_SKIPPED,MULTIRATE_FLAG,Q_MULTIRATE,           &$/;"	v
TOTAL_NUM_LIN_ITER_M	control.h	/^      COMMON\/MRATECOM\/GAMMA_C,TOTAL_NUM_LIN_ITER_M,                            &$/;"	v
TOTAL_NUM_LIN_ITER_M	control.h	/^      INTEGER TOTAL_NUM_LIN_ITER_M,TOTAL_NUM_LIN_ITER_F, MC_SKIPPED,           &$/;"	v
TOTAL_PRES_LOAD_BC	model_module0.f90	/^        TOTAL_FACE_LOAD_BC,&$/;"	v	module:system
TOTAL_PRES_LOAD_FBC	model_module0.f90	/^        TOTAL_PRES_LOAD_BC,TOTAL_PRES_LOAD_FBC,/;"	v	module:system
TOTAL_TRAC_BC	model_module0.f90	/^INTEGER TOTAL_DISP_BC, TOTAL_DISP_FBC,&$/;"	v	module:system
TOTAL_TRAC_FBC	model_module0.f90	/^        TOTAL_TRAC_BC, TOTAL_TRAC_FBC,/;"	v	module:system
TOUCHEDGE	tetgen.h	/^                    TOUCHEDGE, TOUCHFACE, ACROSSVERT, ACROSSEDGE, ACROSSFACE, $/;"	e	enum:tetgenmesh::interresult
TOUCHFACE	tetgen.h	/^                    TOUCHEDGE, TOUCHFACE, ACROSSVERT, ACROSSEDGE, ACROSSFACE, $/;"	e	enum:tetgenmesh::interresult
TPBASE	vistabc.h	/^      CHARACTER*50 TPPLT,TPBASE,TPLAY$/;"	v
TPBASE	vistabc.h	/^     & TPPLT,TPBASE,TPLAY$/;"	v
TPORE	tstep.f	/^      SUBROUTINE TPORE(/;"	s
TPPLT	vistabc.h	/^      CHARACTER*50 TPPLT,TPBASE,TPLAY$/;"	v
TPPLT	vistabc.h	/^     & TPPLT,TPBASE,TPLAY$/;"	v
TPROP	tprop.f	/^      SUBROUTINE TPROP /;"	s
TQUIT	ttdata.f	/^      SUBROUTINE TQUIT /;"	s
TRAC_BC	model_module0.f90	/^REAL(KIND=DOUBLE),ALLOCATABLE:: TRAC_BC(/;"	v	module:system
TRAC_FBC	model_module0.f90	/^REAL(KIND=DOUBLE),ALLOCATABLE:: TRAC_BC(:,:),TRAC_FBC(/;"	v	module:system
TRANC1	initial.f	/^      SUBROUTINE TRANC1 /;"	s
TRANC1	utldat.h	/^      REAL*8 TABX,TABY,DYDX,TRANC1,VALUES,XYZERO$/;"	v
TRANC2	impfa.f	/^      SUBROUTINE TRANC2 /;"	s
TRCHEM	moddefs.h	/^     &	TRCHEM,POROHEX,CMFMFE,SIMFMFE,HIMFMFE,AHYDROI$/;"	v
TREADIN	tbaldat.h	/^     & CVTOL, IRM1, JRM1, KRM1, TREADIN, COMPUTE_NORM, TMODEL$/;"	v
TRESTI	trest.f	/^      SUBROUTINE TRESTI(/;"	s
TRESTO	trest.f	/^      SUBROUTINE TRESTO /;"	s
TRUNC_FACTOR	hypre.h	/^      COMMON \/HYPRE\/ LSOL_TOL,STRONG_THRES,TRUNC_FACTOR,                       &$/;"	v
TSETARYR4	tstep.f	/^      SUBROUTINE TSETARYR4(/;"	s
TSETARYR8	tstep.f	/^      SUBROUTINE TSETARYR8(/;"	s
TSOURCE	terrcalc.f	/^      SUBROUTINE TSOURCE(/;"	s
TSTDOUTA	tstdout.f	/^      SUBROUTINE TSTDOUTA(/;"	s
TSTDOUTS	tstdout.f	/^      SUBROUTINE TSTDOUTS(/;"	s
TSTEP1	tstep.f	/^        SUBROUTINE TSTEP1 /;"	s
TSTEP2	tstep.f	/^        SUBROUTINE TSTEP2 /;"	s
TSTEP3	tstep.f	/^        SUBROUTINE TSTEP3 /;"	s
TTDATA	ttdata.f	/^      SUBROUTINE TTDATA /;"	s
TTRAN	tprop.f	/^      SUBROUTINE TTRAN /;"	s
TUPPRES	tprop.f	/^      SUBROUTINE TUPPRES(/;"	s
TVELCOMP	tprop.f	/^      SUBROUTINE TVELCOMP /;"	s
TVEL_EX	tprop.f	/^      SUBROUTINE TVEL_EX(/;"	s
TVIS	tvisual.f	165;"	c	subroutine:TVIS_OUTPUT
TVIS	tvisual.f	270;"	c	subroutine:COMP_HEADW
TVIS_INIT	tvisual.f	/^      SUBROUTINE TVIS_INIT /;"	s
TVIS_OUTPUT	tvisual.f	/^      SUBROUTINE TVIS_OUTPUT /;"	s
TVIS_TRANSL	tvisual.f	/^      SUBROUTINE TVIS_TRANSL(/;"	s
TWDATA	twell.f	/^      SUBROUTINE TWDATA /;"	s
TWELL	twell.f	/^      SUBROUTINE TWELL(/;"	s
TWELLOUTPUT	twell.f	/^      SUBROUTINE TWELLOUTPUT(/;"	s
TWELSUMS	twell.f	/^      SUBROUTINE TWELSUMS(/;"	s
TWL	rock.h	/^     &       EGLOW,EGHIGH,EWLOW,EWHIGH,TWL,TGL,TAUG,TAUW,$/;"	v
TYPEOUT	putil.f	/^      SUBROUTINE TYPEOUT /;"	s
TYPESDP	emodel.h	/^     &         SDPM,PLOT_PERM_CHANGE,TYPESDP,MECH_BC_NCASE,                    &$/;"	v
TetSizeFunc	tetgen.h	/^  typedef bool (* TetSizeFunc)(REAL*, REAL*, REAL*, REAL*, REAL*, REAL);$/;"	t	class:tetgenio
Tri_AREA	fcns.f	/^      real*8 function Tri_AREA(/;"	f
UNDEF	read1.f	/^      SUBROUTINE UNDEF /;"	s
UNKNOWN	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	e	enum:tetgenmesh::locateresult
UNPACK_MPFAVOLNEW	mpfa_tran.f	/^      SUBROUTINE UNPACK_MPFAVOLNEW(/;"	s
UNPACK_VOL	bdaryin.f	/^      SUBROUTINE UNPACK_VOL(/;"	s
UNTDEF	readdat.h	/^      CHARACTER*1 UNTSTD,UNTDEF,VNAMGA$/;"	v
UNTS	scrat2.h	/^      CHARACTER*60 UNTS,UNTI$/;"	v
UNTSTD	readdat.h	/^      CHARACTER*1 UNTSTD,UNTDEF,VNAMGA$/;"	v
UNUSEDVERTEX	tetgen.h	/^  enum verttype {UNUSEDVERTEX, DUPLICATEDVERTEX, RIDGEVERTEX, ACUTEVERTEX,$/;"	e	enum:tetgenmesh::verttype
UPDATE_MPFA_FRAMEWORK	buildmpfa.f	/^      SUBROUTINE UPDATE_MPFA_FRAMEWORK /;"	s
UXVAL	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
UXVAL	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
UYVAL	emodel.h	/^      COMMON \/MANDEL\/PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,           &$/;"	v
UYVAL	emodel.h	/^      REAL*8 PRESVAL,STRSSYY,UXVAL,UYVAL,EPSXX,EPSYY,FINERR,                   &$/;"	v
VAL1	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL1(/;"	v	module:eprojmod
VAL2	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL2(/;"	v	module:eprojmod
VAL3	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL1(:),VAL3(/;"	v	module:eprojmod
VAL4	eprojections.f	/^      INTEGER, ALLOCATABLE :: VAL2(:,:),VAL4(/;"	v	module:eprojmod
VALUELOCATION	visual9.f	/^      INTEGER*4, ALLOCATABLE :: PASSIVEVARLIST(:),VALUELOCATION(/;"	v	module:tecbinmod
VALUES	utldat.h	/^      REAL*8 TABX,TABY,DYDX,TRANC1,VALUES,XYZERO$/;"	v
VCOFD	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
VCOFQ	wells.h	/^      REAL*8 ELELEN,DEPBOT,DEPTOP,QCOFW,VCOFQ,VCOFD,DCOFW,QCOFN,$/;"	v
VELEXACT	terrcalc.f	/^      REAL*8 FUNCTION VELEXACT(/;"	f
VELLOCALUPDATE	buildmpfa.f	/^      SUBROUTINE VELLOCALUPDATE(/;"	s
VERR_L2L2	terrcalc.h	/^     &                VERR_SUB,VERR_LinftyL2,VERR_L2L2,$/;"	v
VERR_LinftyL2	terrcalc.h	/^     &                VERR_SUB,VERR_LinftyL2,VERR_L2L2,$/;"	v
VERR_SUB	terrcalc.h	/^     &                VERR_SUB,VERR_LinftyL2,VERR_L2L2,$/;"	v
VISALL	control.h	/^     & BUGOPEN,SPLNOUT,GEOMOUT,LEVERR,BUGKEY,VISALL,FLOWMODEL,MODACT,          &$/;"	v
VISFLAG	visual.h	/^      COMMON \/visualc\/ VIS_VAL_NODAL, VISFLAG, N_VISFLAG,$/;"	v
VISFLAG	visual.h	/^      INTEGER	VISFLAG, N_VISFLAG,N_VIS_BINARY,$/;"	v
VISGRID	visgrid.f	/^      SUBROUTINE VISGRID(/;"	s
VISIC	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	t	typeref:struct:visicells
VISINITOUT	visout.f	/^      SUBROUTINE VISINITOUT(/;"	s
VISJC	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	t	typeref:struct:visjcells
VISOUT	visout.f	/^      SUBROUTINE VISOUT /;"	s
VISQUIT	visout.f	/^      SUBROUTINE VISQUIT /;"	s
VIS_ARYNUM	visout.f	/^      SUBROUTINE VIS_ARYNUM /;"	s
VIS_ARYNUMMB	visout.f	/^      SUBROUTINE VIS_ARYNUMMB /;"	s
VIS_BINARY	visual.h	/^      LOGICAL   VIS_BINARY,TECEXISTS,ALLZONES$/;"	v
VIS_BINARY	visual.h	/^     &    VIS_BINARY, TECEXISTS, ALLZONES, N_VIS_BINARY,$/;"	v
VIS_FNAME	visual.h	/^     &    VIS_FNAME,VIS_FSTYLE,VIS_IPARS_NAMES,VIS_DIR$/;"	v
VIS_FSTYLE	visual.h	/^     &    VIS_FNAME,VIS_FSTYLE,VIS_IPARS_NAMES,VIS_DIR$/;"	v
VIS_HVTK_	visvtk.h	2;"	d
VIS_INFO	visualc.h	/^typedef struct vis_inform {int ldim; char *name; int vnodal;} VIS_INFO ;$/;"	t	typeref:struct:vis_inform
VIS_INIT	visout.f	/^      SUBROUTINE VIS_INIT /;"	s
VIS_IPARS_NAMES	visual.h	/^     &    VIS_FNAME,VIS_FSTYLE,VIS_IPARS_NAMES,VIS_DIR$/;"	v
VIS_NAMELEN	visual.h	/^     &    N_VIS_dXREC,N_VIS_dYREC,N_VIS_dZREC,VIS_NAMELEN,$/;"	v
VIS_NAMELEN	visual.h	/^     &    VIS_NAMELEN, N_VIS_VARNAMES,$/;"	v
VIS_NVARS	visual.h	/^     &    N_VISDUM,VIS_NVARS,N_VIS_NVARS,$/;"	v
VIS_NVARS	visual.h	/^     &    VIS_NVARS,N_VIS_NVARS,$/;"	v
VIS_NVARS	visual.h	/^c VIS_NVARS, N_VIS_NVARS: number of variables to be visualized - it really$/;"	v
VIS_NVARS	visual.h	/^c and so the VIS_NVARS=2 not 1$/;"	v
VIS_NVEC	visual.h	/^     &    N_VIS_VEC,VIS_NVEC,N_VIS_XREC,N_VIS_YREC,N_VIS_ZREC,$/;"	v
VIS_NVEC	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,N_VIS_VEC,VIS_NVEC,$/;"	v
VIS_OFFSETS	visual.h	/^     &    N_VIS_VARNAMES,N_VIS_VARS,VIS_OFFSETS,VIS_VARNAMES,$/;"	v
VIS_OUTPUT	visout.f	/^      SUBROUTINE VIS_OUTPUT /;"	s
VIS_SCL	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,$/;"	v
VIS_SCL	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,N_VIS_VEC,VIS_NVEC,$/;"	v
VIS_SCL_FLOW	visual.h	/^     &    VIS_SCL_POROHEX,VIS_SCL_FLOW,STARTMODACT,$/;"	v
VIS_SCL_POROHEX	visual.h	/^     &    VIS_SCL_POROHEX,VIS_SCL_FLOW(MAXMODELS),STARTMODACT,$/;"	v
VIS_SCL_POROHEX	visual.h	/^     &    VIS_SCL_POROHEX,VIS_SCL_FLOW,STARTMODACT,$/;"	v
VIS_TEC_ARRAY	visual9.f	/^      SUBROUTINE VIS_TEC_ARRAY(/;"	s
VIS_TEC_ARRAY_R4	visual9.f	/^      SUBROUTINE VIS_TEC_ARRAY_R4(/;"	s
VIS_TEC_CLOSE	visual9.f	/^      SUBROUTINE VIS_TEC_CLOSE(/;"	s
VIS_TEC_DEALLOC	visual9.f	/^      SUBROUTINE VIS_TEC_DEALLOC(/;"	s
VIS_TEC_GRID1	visual9.f	/^      SUBROUTINE VIS_TEC_GRID1(/;"	s
VIS_TEC_GRID2	visual9.f	/^      SUBROUTINE VIS_TEC_GRID2(/;"	s
VIS_TIME	visout.f	/^      SUBROUTINE VIS_TIME /;"	s
VIS_VAL_NODAL	visual.h	/^      COMMON \/visualc\/ VIS_VAL_NODAL, VISFLAG, N_VISFLAG,$/;"	v
VIS_VARNAMES	visual.h	/^     &    N_VIS_VARNAMES,N_VIS_VARS,VIS_OFFSETS,VIS_VARNAMES,$/;"	v
VIS_VARNAMES	visual.h	/^c VIS_VARNAMES = (character) array of variable names for output$/;"	v
VIS_VEC	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,$/;"	v
VIS_VEC	visual.h	/^     &    VIS_SCL,VIS_VEC,N_VIS_SCL,N_VIS_VEC,VIS_NVEC,$/;"	v
VMDEBUG	control.h	/^     & BATCH,SEISMIC,PHYMOD,VMDEBUG,MBPOROE,KSTDO,DATTL,INCLUDE_BINARY$/;"	v
VOL1	eprojections.f	/^      REAL*8, ALLOCATABLE :: VOL1(/;"	v	module:eprojmod
VOL2	eprojections.f	/^      REAL*8, ALLOCATABLE :: VOL1(:,:),VOL2(/;"	v	module:eprojmod
VOLVERTEX	tetgen.h	/^                 FACETVERTEX, VOLVERTEX, FREESEGVERTEX, FREEFACETVERTEX, $/;"	e	enum:tetgenmesh::verttype
VREGR	compc.h	/^     & IREG,NUMVAL,NUMLOC,VREGR,NUMDO,LOCDO,TAG,STAG,SUB2,OPPS,A$/;"	v
VTABDAT	vistab.f	/^      SUBROUTINE VTABDAT(/;"	s
VTABFIT	vistab.f	/^      SUBROUTINE VTABFIT(/;"	s
VTABINIT	vistab.f	/^      SUBROUTINE VTABINIT(/;"	s
VTK	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	e	enum:tetgenbehavior::objecttype
VolH	fcns.f	/^      real*8 function VolH(/;"	f
WAITALL	putil.f	/^      SUBROUTINE WAITALL /;"	s
WBDSP	twell.f	/^      SUBROUTINE WBDSP /;"	s
WELBHP	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
WELDEN	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
WELDIAM	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
WELDIST	putil.f	/^      SUBROUTINE WELDIST /;"	s
WELDUMP	owell.f	/^      SUBROUTINE WELDUMP /;"	s
WELGEOM	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
WELGET	putil.f	/^      SUBROUTINE WELGET /;"	s
WELHIS	wells.h	/^      REAL*8 WELHIS,WELDEN,WELBHP,DWELBHP,DWELDEN,QRESID,DRESID,ELEDUM,$/;"	v
WELI	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
WELIPC	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
WELIS	tbaldat.h	/^      COMMON \/TBALDAT\/ CURRENT, RESIDM, RESIDT, FLUXOM, FLITNP, WELIS,$/;"	v
WELIS	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
WELLBOT	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
WELLCHECK	iwell.f	/^      SUBROUTINE WELLCHECK /;"	s
WELLDSK	owell.f	/^      SUBROUTINE WELLDSK /;"	s
WELLIJK1	iwell.f	/^      SUBROUTINE WELLIJK1 /;"	s
WELLIJK2	impfa.f	/^      SUBROUTINE WELLIJK2 /;"	s
WELLIJK3	impfa.f	/^      SUBROUTINE WELLIJK3 /;"	s
WELLOUT	owell.f	/^      SUBROUTINE WELLOUT /;"	s
WELLPRT	owell.f	/^      SUBROUTINE WELLPRT /;"	s
WELLPRTC	owell.f	/^      SUBROUTINE WELLPRTC /;"	s
WELLSDP	elastic.f	/^      SUBROUTINE WELLSDP /;"	s
WELLSHR	putil.f	/^      SUBROUTINE WELLSHR /;"	s
WELLTOP	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
WELLVIS	wellvis.f	/^      SUBROUTINE WELLVIS(/;"	s
WELOWN	putil.f	/^      SUBROUTINE WELOWN /;"	s
WELP	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
WELPUT	putil.f	/^      SUBROUTINE WELPUT /;"	s
WELSKIN	wells.h	/^      REAL*4 WELLTOP,WELLBOT,WELSKIN,WELDIAM,ELECONS,WELGEOM,ELEPERM,$/;"	v
WELSND	putil.f	1085;"	c	subroutine:WELLSHR
WELSUM	putil.f	/^      SUBROUTINE WELSUM /;"	s
WELVEC	tbaldat.h	/^      REAL*8 CURRENT,WELI,WELP,WELIPC,WELVEC,CVTOL1,CVTOL2,CVTOL,WELIS,$/;"	v
WORK	makefile	/^WORK=.$/;"	m
WRITE_GEA	ipars.f	/^      SUBROUTINE WRITE_GEA(/;"	s
WRITE_GEA_MPFA	ipars.f	/^      SUBROUTINE WRITE_GEA_MPFA(/;"	s
X	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
X	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
XPERMP	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
XPERMP	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
XREC	layout.h	/^      REAL*8 GRAV,GMAG,DOWN,XREC,YREC,ZREC,CONV_FACTOR$/;"	v
Y	blkary.h	/^C              THREE VALUES FOR X, Y, Z DIRECTION RESPECTIVELY.$/;"	v
Y	layout.h	/^C  XYZ111(i,n) = X, Y, AND Z VALUES OF OUTSIDE CORNER OF GRID BLOCK 1,1,1$/;"	v
Y	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
Y	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
Y	rockpg.h	/^C  X,Y,Z                                    LOCATION$/;"	v
Y	wells.h	/^C  ELEXYZ(,n,t) = X,Y,Z OF ELEMENT n OF WELL t (FEET)$/;"	v
Y	wells.h	/^C  WELLBOT(,s,t) = X,Y,Z OF BOTTOM OF INTERVAL s FOR WELL t (FEET)$/;"	v
Y	wells.h	/^C  WELLTOP(,s,t) = X,Y,Z OF TOP OF INTERVAL s FOR WELL t (FEET)$/;"	v
YPERMP	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
YPERMP	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
YREC	layout.h	/^      REAL*8 GRAV,GMAG,DOWN,XREC,YREC,ZREC,CONV_FACTOR$/;"	v
Z	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
Z	rockpg.h	/^      REAL*8 RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP$/;"	v
ZPERMP	rockpg.h	/^      COMMON \/ROCKPG\/ RNBLK,X,Y,Z,DEP,PORP,XPERMP,YPERMP,ZPERMP,$/;"	v
ZREC	layout.h	/^      REAL*8 GRAV,GMAG,DOWN,XREC,YREC,ZREC,CONV_FACTOR$/;"	v
_Alcga_Unpack	memman3.c	/^void _Alcga_Unpack(_F_INTEGER * arynum,$/;"	f
_Alcga_Unpack	memman3.c	78;"	d	file:
_F_CHARACTER	cfsimple.h	43;"	d
_F_COMPLEX	cfsimple.h	114;"	d
_F_COMPLEX	cfsimple.h	119;"	d
_F_COMPLEX	cfsimple.h	52;"	d
_F_DOUBLE_COMPLEX	cfsimple.h	116;"	d
_F_DOUBLE_COMPLEX	cfsimple.h	53;"	d
_F_DOUBLE_PRECISION	cfsimple.h	115;"	d
_F_DOUBLE_PRECISION	cfsimple.h	51;"	d
_F_EXTERN_	cfsimple.h	126;"	d
_F_EXTERN_	cfsimple.h	128;"	d
_F_EXTERN_	cfsimple.h	130;"	d
_F_EXTERN_	cfsimple.h	59;"	d
_F_EXTERN_	cfsimple.h	61;"	d
_F_INTEGER	cfsimple.h	47;"	d
_F_INTEGER_1	cfsimple.h	110;"	d
_F_INTEGER_1	cfsimple.h	44;"	d
_F_INTEGER_2	cfsimple.h	111;"	d
_F_INTEGER_2	cfsimple.h	45;"	d
_F_INTEGER_4	cfsimple.h	112;"	d
_F_INTEGER_4	cfsimple.h	117;"	d
_F_INTEGER_4	cfsimple.h	46;"	d
_F_NAME_	cfsimple.h	178;"	d
_F_NAME_	cfsimple.h	182;"	d
_F_NAME_	cfsimple.h	186;"	d
_F_NAME_LOWER_CASE_	cfsimple.h	18;"	d
_F_NAME_LOWER_CASE_TRAILING_UNDERSCORE_	cfsimple.h	22;"	d
_F_NAME_OPTION_	cfsimple.h	101;"	d
_F_NAME_OPTION_	cfsimple.h	107;"	d
_F_NAME_OPTION_	cfsimple.h	123;"	d
_F_NAME_OPTION_	cfsimple.h	136;"	d
_F_NAME_OPTION_	cfsimple.h	142;"	d
_F_NAME_OPTION_	cfsimple.h	148;"	d
_F_NAME_OPTION_	cfsimple.h	153;"	d
_F_NAME_OPTION_	cfsimple.h	70;"	d
_F_NAME_OPTION_	cfsimple.h	76;"	d
_F_NAME_OPTION_	cfsimple.h	83;"	d
_F_NAME_OPTION_	cfsimple.h	89;"	d
_F_NAME_OPTION_	cfsimple.h	95;"	d
_F_NAME_UPPER_CASE_	cfsimple.h	14;"	d
_F_REAL	cfsimple.h	113;"	d
_F_REAL	cfsimple.h	118;"	d
_F_REAL	cfsimple.h	48;"	d
_F_REAL_4	cfsimple.h	49;"	d
_F_REAL_8	cfsimple.h	50;"	d
_F_STRING_HIDE_ADJACENT_INT_	cfsimple.h	33;"	d
_F_STRING_HIDE_TRAILING_INT_	cfsimple.h	29;"	d
_F_STRING_OPTION_	cfsimple.h	102;"	d
_F_STRING_OPTION_	cfsimple.h	108;"	d
_F_STRING_OPTION_	cfsimple.h	124;"	d
_F_STRING_OPTION_	cfsimple.h	137;"	d
_F_STRING_OPTION_	cfsimple.h	143;"	d
_F_STRING_OPTION_	cfsimple.h	149;"	d
_F_STRING_OPTION_	cfsimple.h	154;"	d
_F_STRING_OPTION_	cfsimple.h	71;"	d
_F_STRING_OPTION_	cfsimple.h	77;"	d
_F_STRING_OPTION_	cfsimple.h	84;"	d
_F_STRING_OPTION_	cfsimple.h	90;"	d
_F_STRING_OPTION_	cfsimple.h	96;"	d
_F_STRING_VMS_STRUCTURE_	cfsimple.h	37;"	d
_Filestyle	visual.c	/^int _Filestyle; \/\/ style of the file name, see vis_fname_set$/;"	v
_IMPES	moddefs.h	/^     &     'HYDROLOGY_IMPES',                                                  &$/;"	v
_INFO_print	vistec.c	/^void  _INFO_print(int info_flag,char *filename,int myblk)$/;"	f
_Ifnew	visualc.h	/^static int _Ifnew=1;$/;"	v
_Mblk	readdatc.c	/^static _F_INTEGER _Mblk=0;   \/\/ max number of blocks$/;"	v	file:
_Mblk	visual.c	/^_F_INTEGER _Mxrecxp,_Myrecyp,_Mzreczp,_Mblk,_Nprocs;$/;"	v
_Mxrecxp	visual.c	/^_F_INTEGER _Mxrecxp,_Myrecyp,_Mzreczp,_Mblk,_Nprocs;$/;"	v
_Myprc	readdatc.c	/^static _F_INTEGER _Myprc=0;  \/\/ processor number, set by vis_fname_set$/;"	v	file:
_Myprc	visual.c	/^int _Myprc; \/\/ processor number, set by vis_fname_set$/;"	v
_Myrecyp	visual.c	/^_F_INTEGER _Mxrecxp,_Myrecyp,_Mzreczp,_Mblk,_Nprocs;$/;"	v
_Mzreczp	visual.c	/^_F_INTEGER _Mxrecxp,_Myrecyp,_Mzreczp,_Mblk,_Nprocs;$/;"	v
_Ngblk	visual.c	/^int _Ngblk[MAXBLK]; \/\/ global cnter of # of gridbcks for the block$/;"	v
_Nnod	visual.c	/^int _Nnod[MAXBLK]; \/\/global counter of the number of nodes for the block$/;"	v
_Nodes	visual.c	/^NODE * _Nodes[MAXBLK]; \/\/ structure holding info about the nodes$/;"	v
_Nprocs	visual.c	/^_F_INTEGER _Mxrecxp,_Myrecyp,_Mzreczp,_Mblk,_Nprocs;$/;"	v
_Nstep	visual.c	/^_F_INTEGER _Nstep; \/\/ time step setup externally from Fortran$/;"	v
_OIL_IMPLICIT	moddefs.h	/^     &     'BLACK_OIL_IMPLICIT',                                               &$/;"	v
_Order	readdatc.c	/^static _F_INTEGER _Order=0;  \/\/ flag which determines order in file$/;"	v	file:
_PASTE_	cfsimple.h	8;"	d
_PASTE__	cfsimple.h	7;"	d
_Time	visual.c	/^_F_REAL_8   _Time; \/\/ time step value set externally from Fortran$/;"	v
_Vis_cnt	visual.c	/^int _Vis_cnt[MAXBLK];  \/\/ counts if init file for the block exists$/;"	v
_Vis_flag	visual.c	/^int _Vis_flag;         \/\/ visual flag C-global$/;"	v
_Vis_init	visual.c	/^int _Vis_init;         \/\/ counts if some initialization has been made$/;"	v
_Vis_newtimestep	visual.c	/^int _Vis_newtimestep;  \/\/ counts if we need to output tstep info to Vis.inf$/;"	v
_Vis_pars	visual.c	/^VIS_INFO _Vis_pars[MAXVISVARS];$/;"	v
_Vis_vecnam	visual.c	/^char* _Vis_vecnam[MAXVISVARS];$/;"	v
__F_NAMES_AND_TYPES__	cfsimple.h	2;"	d
_aryinfo	meminfo.c	/^void _aryinfo($/;"	f
_aryinfo	meminfo.c	8;"	d	file:
_aryptr	meminfo.c	/^void _aryptr( _F_INTEGER * NB , _F_INTEGER * NA ,$/;"	f
_aryptr	meminfo.c	9;"	d	file:
_blklocal	meminfo.c	/^void _blklocal($/;"	f
_blklocal	meminfo.c	7;"	d	file:
_c_setblks	memman3.c	/^_F_EXTERN_(void) _c_setblks(_F_INTEGER *model_array, _F_INTEGER *nproc)$/;"	f
_c_setblks	memman3.c	22;"	d	file:
_c_setmodel	memman3.c	/^_F_EXTERN_(void) _c_setmodel(_F_INTEGER *nmodel)$/;"	f
_c_setmodel	memman3.c	34;"	d	file:
_chg_aname	memman3.c	/^void _chg_aname (_F_INTEGER *arynum,char *varynam, _F_INTEGER varlen) {$/;"	f
_chg_aname	memman3.c	49;"	d	file:
_cr_INIT_fname	vistec.c	/^void _cr_INIT_fname(char *filename,int flag,int myblk){$/;"	f
_cr_ZONE_fname	vistec.c	/^void _cr_ZONE_fname(char *filename,int flag,int myblk){$/;"	f
_cr_ZONE_fname_bin	vistec.c	/^void _cr_ZONE_fname_bin(char *filename,int flag,int myblk,int lvar){$/;"	f
_find_segment	bdutil.c	/^void _find_segment (_F_REAL_4 *aa,_F_REAL_4 *bb, _F_REAL_4 *cc, _F_REAL_4 *dd,$/;"	f
_find_segment	bdutil.c	12;"	d	file:
_get_arydat	meminfo.c	/^_F_EXTERN_(void) _get_arydat($/;"	v
_get_arydat	meminfo.c	/^void _get_arydat ($/;"	f
_get_arydat	meminfo.c	12;"	d	file:
_get_arymodel	memman3.c	/^int _get_arymodel(int narr) {$/;"	f
_get_arymodel	memman3.c	42;"	d	file:
_get_arynum	meminfo.c	/^void _get_arynum ($/;"	f
_get_arynum	memman3.c	/^void __attribute__((optimize("O0"))) _get_arynum ($/;"	f
_get_arynum	memman3.c	175;"	d	file:
_get_currentmodel	memman3.c	249;"	d	file:
_get_maxanam	meminfo.c	/^void _get_maxanam ($/;"	f
_get_maxanam	meminfo.c	13;"	d	file:
_ismyblk	meminfo.c	/^_F_INTEGER _ismyblk(_F_INTEGER *numblk)$/;"	f
_ismyblk	meminfo.c	11;"	d	file:
_ismyblk	visualc.h	53;"	d
_ismyslice	visual4.c	/^_F_INTEGER _ismyslice (_F_INTEGER *sli) {$/;"	f
_ismyslice	visualc.h	56;"	d
_layers	meminfo.c	/^void _layers( _F_INTEGER * lay0 , _F_INTEGER * lay1, _F_INTEGER * lay2 )$/;"	f
_layers	meminfo.c	10;"	d	file:
_linux	visual3.c	299;"	d	file:
_linux	visual7.cpp	305;"	d	file:
_linux	visual8.cpp	325;"	d	file:
_nblkary	meminfo.c	/^void _nblkary( _F_INTEGER * NUMBLK , _F_INTEGER * NUMARY )$/;"	f
_nblkary	meminfo.c	6;"	d	file:
_readdat_file	readdatc.c	/^void _readdat_file$/;"	f
_readdat_file	readdatc.c	23;"	d	file:
_update_Visinf	visualc.h	/^inline static void _update_Visinf()$/;"	f
_vis_const_unstruct	visual2.c	/^void _vis_const_unstruct$/;"	f
_vis_corner_point	visual6.c	/^void _vis_corner_point$/;"	f
_vis_fname_set	vistec.c	/^void _vis_fname_set($/;"	f
_vis_fname_set	visualc.h	38;"	d
_vis_full_unstruct	visual3.c	/^void _vis_full_unstruct$/;"	f
_vis_full_unstruct_bin	visual5.c	/^void _vis_full_unstruct_bin$/;"	f
_vis_info_set	visual.c	/^void _vis_info_set($/;"	f
_vis_info_set	visualc.h	39;"	d
_vis_name_set	visual.c	/^void _vis_name_set($/;"	f
_vis_name_set	visualc.h	37;"	d
_vis_off_set	visual.c	/^void _vis_off_set($/;"	f
_vis_off_set	visualc.h	35;"	d
_vis_pvtu_quit	visualc.h	42;"	d
_vis_pvtu_quit	visvtk.c	/^void _vis_pvtu_quit()$/;"	f
_vis_pvtu_set	visualc.h	41;"	d
_vis_pvtu_set	visvtk.c	/^void _vis_pvtu_set(const int* nscal, const int* nvecs)$/;"	f
_vis_rectangle	visual4.c	/^void _vis_rectangle$/;"	f
_vis_reset	visual.c	/^static void _vis_reset()$/;"	f	file:
_vis_setvec_nam	visual.c	/^void _vis_setvec_nam(_F_INTEGER* n, _F_CHARACTER* vnam)$/;"	f
_vis_setvec_nam	visualc.h	44;"	d
_vis_struct	visual1.c	/^void _vis_struct$/;"	f
_vis_tecoutput	vistec.c	/^void _vis_tecoutput ($/;"	f
_vis_tecoutput	visualc.h	32;"	d
_vis_tstep_set	visual.c	/^void _vis_tstep_set(_F_INTEGER *ntstep, _F_REAL_8 *time)$/;"	f
_vis_tstep_set	visualc.h	40;"	d
_vis_vnodal_set	visual.c	/^void _vis_vnodal_set($/;"	f
_vis_vnodal_set	visualc.h	36;"	d
_vis_vtk_unstruct	visual7.cpp	/^void _vis_vtk_unstruct$/;"	f
_vis_vtkcorner_point	visual8.cpp	/^void _vis_vtkcorner_point$/;"	f
_vis_vtkoutput	visualc.h	33;"	d
_vis_vtkoutput	visvtk.c	/^void _vis_vtkoutput ($/;"	f
_vis_vtkoutput_mpfa	visualc.h	34;"	d
_vis_vtkoutput_mpfa	visvtk.c	/^void _vis_vtkoutput_mpfa ($/;"	f
_visual_init	visual.c	/^void _visual_init()$/;"	f
_visual_init	visualc.h	43;"	d
addin	tetgen.h	/^  tetgenio *in, *addin;$/;"	m	class:tetgenmesh
addinfilename	tetgen.h	/^  char addinfilename[1024];$/;"	m	class:tetgenbehavior
addsteiner_algo	tetgen.h	/^  int addsteiner_algo;                                            \/\/ '-Y\/', 1.$/;"	m	class:tetgenbehavior
adjtetlist	tetgen.h	/^  int *adjtetlist;$/;"	m	class:tetgenio
affine	model_module0.f90	/^    integer affine(/;"	k	type:node_obj
alcbea_	memman1.c	/^FORTSUB alcbea_ (PCHAR varynam, PINT4 kind, PINT4 ndim4,$/;"	f
alcfea_	memman1.c	/^FORTSUB alcfea_ (PCHAR varynam, PINT4 kind, PINT4 ndim,$/;"	f
alcgea_	memman1.c	/^FORTSUB alcgea_ (PCHAR varynam, PINT4 kind, PINT4 ndim4, PINT4 arynum,$/;"	f
alcmpfagea1_	memman1.c	/^FORTSUB alcmpfagea1_ (PCHAR varynam, PINT4 kind, PINT4 ndim4,$/;"	f
alcmpfagea2_	memman1.c	/^FORTSUB alcmpfagea2_ (PCHAR varynam, PINT4 kind, PINT4 ndim4,$/;"	f
alcmpfagea_	memman1.c	/^FORTSUB alcmpfagea_ (PCHAR varynam, PINT4 kind, PINT4 ndim4,$/;"	f
alignbytes	tetgen.h	/^    int  alignbytes;$/;"	m	class:tetgenmesh::memorypool
allblk	memory.h	/^MEX int  allblk;           \/\/ = 0 ==> Call work routine even if processor$/;"	v
allblocks_	memman1.c	/^FORTSUB allblocks_ ()$/;"	f
apex	tetgen.h	/^inline tetgenmesh::point tetgenmesh:: apex(triface& t) {$/;"	f	class:tetgenmesh
apexpivot	tetgen.h	/^  static int orgpivot[12], destpivot[12], apexpivot[12], oppopivot[12];$/;"	m	class:tetgenmesh
areabound	tetgen.h	/^inline REAL tetgenmesh::areabound(face& s) $/;"	f	class:tetgenmesh
areaboundindex	tetgen.h	/^  int areaboundindex;               \/\/ Index to find area bound of a subface.$/;"	m	class:tetgenmesh
arraypool	tetgen.h	/^  class arraypool {$/;"	c	class:tetgenmesh
aryadd	memory.h	/^MEX PADD  aryadd[MAXBLK][MAXARY];  \/\/ Array addresses$/;"	v
arydat_	memman1.c	/^FORTSUB arydat_ (PCHAR varynam, PINT4 kind, PINT4 ndim4, PINT4 arynum,$/;"	f
aryfrm	memory.h	/^MEX int   aryfrm[MAXARY];  \/\/ = 1 ==> REAL*4$/;"	v
arymodel	memory.h	/^MEX int   arymodel[MAXARY];	\/\/ which model this array is allocated for$/;"	v
arynam	memory.h	/^MEX CHAR  arynam[MAXARY][MAXANAM+1]; \/\/ Array names$/;"	v
arypmod	memory.h	/^MEX int  arypmod[MAXARY];  \/\/ Array physical model (0 ==> framework)$/;"	v
arytyp	memory.h	/^MEX int  arytyp[MAXARY];   \/\/ 0 ==> number not used$/;"	v
arytype_	memman1.c	/^FORTSUB arytype_ (PINT4 arynum, PINT4 kind, PINT4 ndim4,$/;"	f
assignmeshsize	tetgen.h	/^    int assignmeshsize;$/;"	m	class:tetgenmesh::insertvertexflags
assoc_model	model_module0.f90	/^    integer assoc_model /;"	k	type:material
autofliplinklevel	tetgen.h	/^  int autofliplinklevel;        \/\/ The increase of link levels, default is 1.$/;"	m	class:tetgenmesh
average_delta_u	utility0.f90	/^subroutine  average_delta_u$/;"	s
average_residue	utility0.f90	/^subroutine  average_residue$/;"	s
b	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
b	tetgen.h	/^  tetgenbehavior *b;$/;"	m	class:tetgenmesh
b_dof	model_module0.f90	/^integer node_dof,b_dof,/;"	v	module:model_type
b_dof_L	model_module0.f90	/^integer ele_node,ele_dof_1,ele_dof_2,ngauss_face,b_dof_L,/;"	v	module:model_type
b_dof_R	model_module0.f90	/^integer ele_node,ele_dof_1,ele_dof_2,ngauss_face,b_dof_L,b_dof_R$/;"	v	module:model_type
b_face	model_module0.f90	/^type (bnd_face), allocatable :: b_face(/;"	v	module:system
b_face_load	hexa_NB0.f90	/^subroutine b_face_load(/;"	s
badface	tetgen.h	/^    badface() : key(0), forg(0), fdest(0), fapex(0), foppo(0), noppo(0),$/;"	f	class:tetgenmesh::badface
badface	tetgen.h	/^  class badface {$/;"	c	class:tetgenmesh
badsubfacs	tetgen.h	/^  memorypool *badtetrahedrons, *badsubfacs, *badsubsegs;$/;"	m	class:tetgenmesh
badsubsegs	tetgen.h	/^  memorypool *badtetrahedrons, *badsubfacs, *badsubsegs;$/;"	m	class:tetgenmesh
badtetrahedrons	tetgen.h	/^  memorypool *badtetrahedrons, *badsubfacs, *badsubsegs;$/;"	m	class:tetgenmesh
bak_tetprism_vol	tetgen.h	/^    REAL bak_tetprism_vol; \/\/ The value to be minimized.$/;"	m	class:tetgenmesh::flipconstraints
bandL	model_module0.f90	/^integer bandL,/;"	v	module:system
bc	bc0.f90	/^subroutine bc(/;"	s
bc_flux	model_module0.f90	/^real(kind=double) wght_8(8),face_wght_4(4),flux,flux_fld,p0,bc_flux$/;"	v	module:model_type
beta_zero	model_module0.f90	/^integer tl_0_dch,dirnode,beta_zero,/;"	v	module:system
bgm	tetgen.h	/^  tetgenmesh *bgm;$/;"	m	class:tetgenmesh
bgmeshfilename	tetgen.h	/^  char bgmeshfilename[1024];$/;"	m	class:tetgenbehavior
biglist	visual4.c	384;"	d	file:
biglist	visualc.h	831;"	d
blkdim_	memman1.c	/^FORTSUB blkdim_ (PINT4 blknum, PINT4 vnxg, PINT4 vnyg, PINT4 vnzg, PINT4 err)$/;"	f
blkmodel_c	memory.h	/^MEX int   blkmodel_c[MAXBLK];   \/\/ which model executes in the current block$/;"	v
blkname_	memman1.c	/^FORTSUB blkname_ (PINT4 blknum, PCHAR vblknam, PINT4 err)$/;"	f
blknams	memory.h	/^MEX CHAR  blknams[MAXBLK][MAXBNAM]; \/\/ Block names$/;"	v
blkoff_	memman1.c	/^FORTSUB blkoff_ (PINT4 blknum, PINT4 ioff, PINT4 joff, PINT4 koff, PINT4 err)$/;"	f
bmatx_L	model_module0.f90	/^real(kind=double), allocatable:: bmatx_L(/;"	v	module:model_type
bmatx_R	model_module0.f90	/^real(kind=double), allocatable:: bmatx_L(:,:),bmatx_R(/;"	v	module:model_type
bnd_face	model_module0.f90	/^type bnd_face$/;"	t	module:boundary_face
bond	tetgen.h	/^inline void tetgenmesh::bond(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
bondtbl	tetgen.h	/^  static int bondtbl[12][12], fsymtbl[12][12];$/;"	m	class:tetgenmesh
boundary_face	model_module0.f90	/^module boundary_face$/;"	m
bowywat	tetgen.h	/^    int bowywat, lawson;$/;"	m	class:tetgenmesh::insertvertexflags
brio_hilbert	tetgen.h	/^  int brio_hilbert;                                                \/\/ '-b', 1.$/;"	m	class:tetgenbehavior
brio_ratio	tetgen.h	/^  REAL brio_ratio;                                             \/\/ '-b\/' 0.125.$/;"	m	class:tetgenbehavior
brio_threshold	tetgen.h	/^  int brio_threshold;                                              \/\/ '-b' 64.$/;"	m	class:tetgenbehavior
buildF1Neum	tbdary.f	/^      SUBROUTINE buildF1Neum(/;"	s
buildF2Neum	tbdary.f	/^      SUBROUTINE buildF2Neum(/;"	s
buildFDIR	tbdary.f	/^      SUBROUTINE buildFDIR(/;"	s
byte	model_module0.f90	/^   integer, parameter :: byte /;"	v	module:truth
c	vis_sli.h	/^c  ,vyc,vzc$/;"	v
c	visual.h	/^c          = 0     no visualization output$/;"	v
c	visual.h	/^c          = 5     binary unstructured output, brick models$/;"	v
c1	tetgen.h	/^    int c1, c2;$/;"	m	struct:tetgenio::__anon4
c2	tetgen.h	/^    int c1, c2;$/;"	m	struct:tetgenio::__anon4
c_setslice	visual4.c	/^void c_setslice($/;"	f
c_setslice	visual4.c	517;"	d	file:
calcArea	impfa.f	/^      subroutine calcArea(/;"	s
calcEVOL	impfa.f	/^      subroutine calcEVOL(/;"	s
calcF1Neum	tbdary.f	/^      subroutine calcF1Neum(/;"	s
calcFaces	impfa.f	/^      subroutine calcFaces(/;"	s
calcMPFAcrProp	impfa.f	/^      subroutine calcMPFAcrProp(/;"	s
calcVOLFACEdim	impfa.f	/^      subroutine calcVOLFACEdim(/;"	s
calcbdry	tbdary.f	/^      subroutine calcbdry(/;"	s
callwork_	memman2.c	/^FORTSUB callwork_ (FORTSUB (*subadd) (), PINT4 d)$/;"	f
callwork_cofout_	memman2.c	/^FORTSUB callwork_cofout_(PINT4 nstep,PINT4 newt,PINT4 stcof,$/;"	f
cavebdrylist	tetgen.h	/^  arraypool *cavetetlist, *cavebdrylist, *caveoldtetlist;$/;"	m	class:tetgenmesh
caveencseglist	tetgen.h	/^  arraypool *caveencshlist, *caveencseglist;$/;"	m	class:tetgenmesh
caveencshlist	tetgen.h	/^  arraypool *caveencshlist, *caveencseglist;$/;"	m	class:tetgenmesh
caveoldtetlist	tetgen.h	/^  arraypool *cavetetlist, *cavebdrylist, *caveoldtetlist;$/;"	m	class:tetgenmesh
cavesegshlist	tetgen.h	/^  arraypool *caveshlist, *caveshbdlist, *cavesegshlist;$/;"	m	class:tetgenmesh
caveshbdlist	tetgen.h	/^  arraypool *caveshlist, *caveshbdlist, *cavesegshlist;$/;"	m	class:tetgenmesh
caveshlist	tetgen.h	/^  arraypool *caveshlist, *caveshbdlist, *cavesegshlist;$/;"	m	class:tetgenmesh
cavetetlist	tetgen.h	/^  arraypool *cavetetlist, *cavebdrylist, *caveoldtetlist;$/;"	m	class:tetgenmesh
cavetetseglist	tetgen.h	/^  arraypool *cavetetshlist, *cavetetseglist, *cavetetvertlist;$/;"	m	class:tetgenmesh
cavetetshlist	tetgen.h	/^  arraypool *cavetetshlist, *cavetetseglist, *cavetetvertlist;$/;"	m	class:tetgenmesh
cavetetvertlist	tetgen.h	/^  arraypool *cavetetshlist, *cavetetseglist, *cavetetvertlist;$/;"	m	class:tetgenmesh
cavitycount	tetgen.h	/^  long fillregioncount, cavitycount, cavityexpcount;$/;"	m	class:tetgenmesh
cavityexpcount	tetgen.h	/^  long fillregioncount, cavitycount, cavityexpcount;$/;"	m	class:tetgenmesh
cdtflag	tetgen.h	/^    int rejflag, chkencflag, cdtflag;$/;"	m	class:tetgenmesh::insertvertexflags
cell	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	s	file:
cells	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	m	struct:rectlist
cent	tetgen.h	/^    REAL key, cent[6];  \/\/ circumcenter or cos(dihedral angles) at 6 edges.$/;"	m	class:tetgenmesh::badface
center	model_module0.f90	/^    real(kind=double) center(/;"	k	type:element
cg_node	model_module0.f90	/^integer, allocatable:: node_out(:),cg_node(/;"	v	module:system
cg_tl_node	model_module0.f90	/^integer prpty_grp_sld,tl_load_point,cg_tl_node,/;"	v	module:system
checkconstraints	tetgen.h	/^  int checkconstraints;  \/\/ Are there variant (node, seg, facet) constraints?$/;"	m	class:tetgenmesh
checkflipeligibility	tetgen.h	/^    int checkflipeligibility;$/;"	m	class:tetgenmesh::flipconstraints
checksubfaceflag	tetgen.h	/^  int checksubfaceflag;  \/\/ Are there subfaces in the tetrahedralization yet?$/;"	m	class:tetgenmesh
checksubsegflag	tetgen.h	/^  int checksubsegflag;   \/\/ Are there segments in the tetrahedralization yet?$/;"	m	class:tetgenmesh
chkencflag	tetgen.h	/^    int chkencflag;$/;"	m	class:tetgenmesh::flipconstraints
chkencflag	tetgen.h	/^    int rejflag, chkencflag, cdtflag;$/;"	m	class:tetgenmesh::insertvertexflags
clearev_	extvar.c	/^FORTSUB clearev_ ()$/;"	f
cmfmfevisvar	memory.h	/^MEX PINT4 cmfmfevisvar;    \/\/ Pointer to # of compositional flow vis. variables$/;"	v
cnode_p	model_module0.f90	/^integer, allocatable:: zero_dch(:),node_st_dof(:),indx(:),dirbcnode(:),pnode_cn(:),cnode_p(/;"	v	module:system
coarsen	tetgen.h	/^  int coarsen;                                                     \/\/ '-R', 0.$/;"	m	class:tetgenbehavior
coarsen_param	tetgen.h	/^  int coarsen_param;                                               \/\/ '-R', 0.$/;"	m	class:tetgenbehavior
coarsen_percent	tetgen.h	/^  REAL coarsen_percent;                                         \/\/ -R1\/#, 1.0.$/;"	m	class:tetgenbehavior
collectencsegflag	tetgen.h	/^    int collectencsegflag;$/;"	m	class:tetgenmesh::flipconstraints
collectnewtets	tetgen.h	/^    int collectnewtets; \/\/ Collect the new tets created by flips.$/;"	m	class:tetgenmesh::flipconstraints
commandline	tetgen.h	/^  char commandline[1024];$/;"	m	class:tetgenbehavior
conforming	tetgen.h	/^  int conforming;                                                  \/\/ '-D', 0.$/;"	m	class:tetgenbehavior
control	model_module0.f90	/^module control /;"	m
convex	tetgen.h	/^  int convex;                                                      \/\/ '-c', 0.$/;"	m	class:tetgenbehavior
coord	model_module0.f90	/^real(kind=double), allocatable:: coord(/;"	v	module:system
coord_n	model_module0.f90	/^real(kind=double), allocatable:: coord(:,:),coord_n(/;"	v	module:system
cosdihed_in	tetgen.h	/^    REAL cosdihed_in; \/\/ The input cosine of the dihedral angle (> 0).$/;"	m	class:tetgenmesh::flipconstraints
cosdihed_out	tetgen.h	/^    REAL cosdihed_out; \/\/ The improved cosine of the dihedral angle.$/;"	m	class:tetgenmesh::flipconstraints
cosmaxdihed	tetgen.h	/^  REAL cosmaxdihed, cosmindihed;    \/\/ The cosine values of max\/min dihedral.$/;"	m	class:tetgenmesh
cosmindihed	tetgen.h	/^  REAL cosmaxdihed, cosmindihed;    \/\/ The cosine values of max\/min dihedral.$/;"	m	class:tetgenmesh
cosslidihed	tetgen.h	/^  REAL cosslidihed;      \/\/ The cosine value of the max dihedral of a sliver.$/;"	m	class:tetgenmesh
cossmtdihed	tetgen.h	/^  REAL cossmtdihed;     \/\/ The cosine value of a bad dihedral to be smoothed.$/;"	m	class:tetgenmesh
cpu_commu	model_module0.f90	/^type cpu_commu$/;"	t	module:my_cpu_commu
cpu_id_to_recv	model_module0.f90	/^    integer, pointer :: cpu_id_to_recv(/;"	k	type:cpu_commu
cpu_id_to_send	model_module0.f90	/^    integer, pointer :: cpu_id_to_send(/;"	k	type:cpu_commu
cputime_	cputime.c	/^FORTSUB cputime_ (PREAL8 sec)$/;"	f
crack_profile_setup	crack_profile_setup.f90	/^subroutine crack_profile_setup(/;"	s
cross	tetgen.h	/^inline void tetgenmesh::cross(REAL* v1, REAL* v2, REAL* n) $/;"	f	class:tetgenmesh
cut	model_module0.f90	/^integer bandL,load_only,NO_LU,NR_NUMBER,cut,/;"	v	module:system
cut_back_flag	model_module0.f90	/^   integer cut_back_flag$/;"	v	module:control
day	unitsex.h	/^C         for internal masses and corespondingly stbo\/day, stbw\/day, and$/;"	v
deaditemstack	tetgen.h	/^    void *deaditemstack;$/;"	m	class:tetgenmesh::memorypool
decode	tetgen.h	/^inline void tetgenmesh::decode(tetrahedron ptr, triface& t) {$/;"	f	class:tetgenmesh
decreaseelemcounter	tetgen.h	/^inline void tetgenmesh::decreaseelemcounter(triface& t) {$/;"	f	class:tetgenmesh
defblk_	memman1.c	/^FORTSUB defblk_ (PINT4 vnxg, PINT4 vnyg, PINT4 vnzg, PCHAR vblknam,$/;"	f
defgrd_	memman1.c	/^FORTSUB defgrd_ (PINT4 myprc, PINT4 nxc, PINT4 nyc, PINT4 nzc,$/;"	f
deinitialize	tetgen.h	/^  void deinitialize()$/;"	f	class:tetgenio
delmaxfliplevel	tetgen.h	/^  int delmaxfliplevel;                                                   \/\/ 1.$/;"	m	class:tetgenbehavior
deltaT	model_module0.f90	/^real load_scale,load_factor,deltaT,/;"	v	module:system
delta_load	model_module0.f90	/^real(kind=double), allocatable:: delta_load(/;"	v	module:system
delta_load_naut	model_module0.f90	/^real(kind=double), allocatable:: load_cnst(:),delta_load_naut(/;"	v	module:system
delta_load_save	model_module0.f90	/^real(kind=double), allocatable:: delta_load(:),delta_load_save(/;"	v	module:system
delta_p	model_module0.f90	/^real(kind=double) gauss_coord_8(8,3),gauss_coord_27(27,3),delta_p$/;"	v	module:model_type
delta_u	model_module0.f90	/^real(kind=double), allocatable:: u_n(:),u(:),delta_u(/;"	v	module:system
dest	tetgen.h	/^inline tetgenmesh::point tetgenmesh:: dest(triface& t) {$/;"	f	class:tetgenmesh
destpivot	tetgen.h	/^  static int orgpivot[12], destpivot[12], apexpivot[12], oppopivot[12];$/;"	m	class:tetgenmesh
detMat	fcns.f	/^      subroutine detMat(/;"	s
diagnose	tetgen.h	/^  int diagnose;                                                    \/\/ '-d', 0.$/;"	m	class:tetgenbehavior
dim	extvar.c	/^int  dim[MAXEXT][3];        \/\/ External variable dimensions$/;"	v
dimext	memory.h	/^MEX int  dimext[MAXARY];   \/\/ Product of extra dimensions (min = 1)$/;"	v
dimr	memory.h	/^MEX int  dimr;             \/\/ Grid-refinement array 1st dimension (min 1)$/;"	v
dirbcnode	model_module0.f90	/^integer, allocatable:: zero_dch(:),node_st_dof(:),indx(:),dirbcnode(/;"	v	module:system
dirnode	model_module0.f90	/^integer tl_0_dch,dirnode,/;"	v	module:system
dissolve	tetgen.h	/^inline void tetgenmesh::dissolve(triface& t) {$/;"	f	class:tetgenmesh
distance	tetgen.h	/^inline REAL tetgenmesh::distance(REAL* p1, REAL* p2)$/;"	f	class:tetgenmesh
docheck	tetgen.h	/^  int docheck;                                                     \/\/ '-C', 0.$/;"	m	class:tetgenbehavior
dof	model_module0.f90	/^    integer dof$/;"	k	type:node_obj
dof_dt	model_module0.f90	/^integer ele_node_L,ele_node_R,ele_dof_L,ele_dof_R,dof_dt$/;"	v	module:model_type
dof_st	model_module0.f90	/^integer node_dof,b_dof,ele_dof,sc,ngauss,strss_dof,dof_st$/;"	v	module:model_type
dof_tl	model_module0.f90	/^integer ele_tl,node_tl,dof_tl,/;"	v	module:system
dot	tetgen.h	/^inline REAL tetgenmesh::dot(REAL* v1, REAL* v2) $/;"	f	class:tetgenmesh
double	model_module0.f90	/^   integer, parameter :: double /;"	v	module:truth
drucker_itm	model_module0.f90	/^integer plastic_model,drucker_itm /;"	v	module:system
dummypoint	tetgen.h	/^  point dummypoint;$/;"	m	class:tetgenmesh
dupverts	tetgen.h	/^  long dupverts;                            \/\/ Are there duplicated vertices?$/;"	m	class:tetgenmesh
e_id_1	model_module0.f90	/^integer e_id_1,/;"	v	module:model_type
e_id_2	model_module0.f90	/^integer e_id_1,e_id_2,/;"	v	module:model_type
ealcbea_	ebdarym.c	/^FORTSUB ealcbea_ (PCHAR varynam, PINT4 kind, PINT4 ndim4,$/;"	f
edestoppo	tetgen.h	/^inline void tetgenmesh::edestoppo(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
edestoppoself	tetgen.h	/^inline void tetgenmesh::edestoppoself(triface& t) {$/;"	f	class:tetgenmesh
edestoppotbl	tetgen.h	/^  static int eorgoppotbl[12], edestoppotbl[12];$/;"	m	class:tetgenmesh
edge2ver	tetgen.h	/^  static int ver2edge[12], edge2ver[6], epivot[12];$/;"	m	class:tetgenmesh
edgeadjtetlist	tetgen.h	/^  int *edgeadjtetlist;$/;"	m	class:tetgenio
edgelist	tetgen.h	/^  int *edgelist;$/;"	m	class:tetgenio
edgemarked	tetgen.h	/^inline bool tetgenmesh::edgemarked(triface& t) {$/;"	f	class:tetgenmesh
edgemarkerlist	tetgen.h	/^  int *edgemarkerlist;$/;"	m	class:tetgenio
edgesout	tetgen.h	/^  int edgesout;                                                    \/\/ '-e', 0.$/;"	m	class:tetgenbehavior
ele_L	model_module0.f90	/^integer ele_node_1,ele_node_2,ele_node_3,ele_node_4,ele_L,/;"	v	module:model_type
ele_R	model_module0.f90	/^integer ele_node_1,ele_node_2,ele_node_3,ele_node_4,ele_L,ele_R$/;"	v	module:model_type
ele_dof	model_module0.f90	/^integer node_dof,b_dof,ele_dof,/;"	v	module:model_type
ele_dof_1	model_module0.f90	/^integer ele_node,ele_dof_1,/;"	v	module:model_type
ele_dof_2	model_module0.f90	/^integer ele_node,ele_dof_1,ele_dof_2,/;"	v	module:model_type
ele_dof_3	model_module0.f90	/^integer model,ele_type,ele_dof_3,/;"	v	module:model_type
ele_dof_4	model_module0.f90	/^integer model,ele_type,ele_dof_3,ele_dof_4,/;"	v	module:model_type
ele_dof_L	model_module0.f90	/^integer ele_node_L,ele_node_R,ele_dof_L,/;"	v	module:model_type
ele_dof_R	model_module0.f90	/^integer ele_node_L,ele_node_R,ele_dof_L,ele_dof_R,/;"	v	module:model_type
ele_node	model_module0.f90	/^integer ele_node,/;"	v	module:model_type
ele_node_1	model_module0.f90	/^integer ele_node_1,/;"	v	module:model_type
ele_node_2	model_module0.f90	/^integer ele_node_1,ele_node_2,/;"	v	module:model_type
ele_node_3	model_module0.f90	/^integer ele_node_1,ele_node_2,ele_node_3,/;"	v	module:model_type
ele_node_4	model_module0.f90	/^integer ele_node_1,ele_node_2,ele_node_3,ele_node_4,/;"	v	module:model_type
ele_node_L	model_module0.f90	/^integer ele_node_L,/;"	v	module:model_type
ele_node_R	model_module0.f90	/^integer ele_node_L,ele_node_R,/;"	v	module:model_type
ele_stiff_ep	gstiff0.f90	/^subroutine ele_stiff_ep(/;"	s
ele_strct	model_module0.f90	/^module ele_strct$/;"	m
ele_tl	model_module0.f90	/^integer ele_tl,/;"	v	module:system
ele_type	model_module0.f90	/^    integer ele_type$/;"	k	type:element
ele_type	model_module0.f90	/^integer model,ele_type,/;"	v	module:model_type
elem_shared_face	crack_profile_setup.f90	/^subroutine elem_shared_face(/;"	s
elemattribindex	tetgen.h	/^  int elemattribindex;          \/\/ Index to find attributes of a tetrahedron.$/;"	m	class:tetgenmesh
elemattribute	tetgen.h	/^inline REAL tetgenmesh::elemattribute(tetrahedron* ptr, int attnum) {$/;"	f	class:tetgenmesh
elemcounter	tetgen.h	/^inline int tetgenmesh::elemcounter(triface& t) {$/;"	f	class:tetgenmesh
element	model_module0.f90	/^    integer element$/;"	k	type:bnd_face
element	model_module0.f90	/^type element$/;"	t	module:ele_strct
elemindex	tetgen.h	/^inline int tetgenmesh::elemindex(tetrahedron* ptr) {$/;"	f	class:tetgenmesh
elemmarker	tetgen.h	/^inline int tetgenmesh::elemmarker(tetrahedron* ptr) {$/;"	f	class:tetgenmesh
elemmarkerindex	tetgen.h	/^  int elemmarkerindex;              \/\/ Index to find marker of a tetrahedron.$/;"	m	class:tetgenmesh
elist	tetgen.h	/^    int *elist;$/;"	m	struct:tetgenio::__anon4
encode	tetgen.h	/^inline tetgenmesh::tetrahedron tetgenmesh::encode(triface& t) {$/;"	f	class:tetgenmesh
encode2	tetgen.h	/^inline tetgenmesh::tetrahedron tetgenmesh::encode2(tetrahedron* ptr, int ver) {$/;"	f	class:tetgenmesh
encseglist	tetgen.h	/^  arraypool *encseglist, *encshlist;$/;"	m	class:tetgenmesh
encshlist	tetgen.h	/^  arraypool *encseglist, *encshlist;$/;"	m	class:tetgenmesh
enext	tetgen.h	/^inline void tetgenmesh::enext(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
enextesym	tetgen.h	/^inline void tetgenmesh::enextesym(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
enextesymself	tetgen.h	/^inline void tetgenmesh::enextesymself(triface& t) {$/;"	f	class:tetgenmesh
enextesymtbl	tetgen.h	/^  static int enextesymtbl[12], eprevesymtbl[12]; $/;"	m	class:tetgenmesh
enextself	tetgen.h	/^inline void tetgenmesh::enextself(triface& t) {$/;"	f	class:tetgenmesh
enexttbl	tetgen.h	/^  static int esymtbl[12], enexttbl[12], eprevtbl[12];$/;"	m	class:tetgenmesh
enqflag	tetgen.h	/^    int enqflag; \/\/ (= flipflag)$/;"	m	class:tetgenmesh::flipconstraints
eorgoppo	tetgen.h	/^inline void tetgenmesh::eorgoppo(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
eorgoppoself	tetgen.h	/^inline void tetgenmesh::eorgoppoself(triface& t) {$/;"	f	class:tetgenmesh
eorgoppotbl	tetgen.h	/^  static int eorgoppotbl[12], edestoppotbl[12];$/;"	m	class:tetgenmesh
epivot	tetgen.h	/^  static int ver2edge[12], edge2ver[6], epivot[12];$/;"	m	class:tetgenmesh
eprev	tetgen.h	/^inline void tetgenmesh::eprev(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
eprevesym	tetgen.h	/^inline void tetgenmesh::eprevesym(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
eprevesymself	tetgen.h	/^inline void tetgenmesh::eprevesymself(triface& t) {$/;"	f	class:tetgenmesh
eprevesymtbl	tetgen.h	/^  static int enextesymtbl[12], eprevesymtbl[12]; $/;"	m	class:tetgenmesh
eprevself	tetgen.h	/^inline void tetgenmesh::eprevself(triface& t) {$/;"	f	class:tetgenmesh
eprevtbl	tetgen.h	/^  static int esymtbl[12], enexttbl[12], eprevtbl[12];$/;"	m	class:tetgenmesh
eprojmod	eprojections.f	/^      MODULE eprojmod$/;"	m
epsilon	tetgen.h	/^  REAL epsilon;                                               \/\/ '-T', 1.0e-8.$/;"	m	class:tetgenbehavior
eqv_strain	utility0.f90	/^subroutine eqv_strain(/;"	s
eqv_svect	utility0.f90	/^subroutine eqv_svect(/;"	s
error_control	model_module0.f90	/^   real(kind=double), parameter :: error_control /;"	v	module:control
esym	tetgen.h	/^inline void tetgenmesh::esym(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
esymself	tetgen.h	/^inline void tetgenmesh::esymself(triface& t) {$/;"	f	class:tetgenmesh
esymtbl	tetgen.h	/^  static int esymtbl[12], enexttbl[12], eprevtbl[12];$/;"	m	class:tetgenmesh
extdef_	extvar.c	/^FORTSUB extdef_ (PADD vext, PINT4 vtyp, PCHAR vnam, PINT4 vdim1,$/;"	f
extdel_	extvar.c	/^FORTSUB extdel_ (PINT4 vnum1, PINT4 vnum2)$/;"	f
extget_	extvar.c	/^FORTSUB extget_ (PREAL8 varb, PINT4 vnum, PINT4 vind1, PINT4 vind2,$/;"	f
extnam_	extvar.c	/^FORTSUB extnam_ (PINT4 vnum, PCHAR vnam)$/;"	f
extnum_	extvar.c	/^FORTSUB extnum_ (PCHAR vnam, PINT4 vnum, PINT4 vdim1, PINT4 vdim2,$/;"	f
extput_	extvar.c	/^FORTSUB extput_ (PREAL8 varb, PINT4 vnum, PINT4 vind1, PINT4 vind2,$/;"	f
fac	tetgen.h	/^    point fac[3];  \/\/ A constraining face to be recovered.$/;"	m	class:tetgenmesh::flipconstraints
face	tetgen.h	/^    face() : sh(0), shver(0) {}$/;"	f	class:tetgenmesh::face
face	tetgen.h	/^  class face {$/;"	c	class:tetgenmesh
face_NB_mat	hexa_NB0.f90	/^subroutine face_NB_mat(/;"	s
face_gauss	hexa_NB0.f90	/^subroutine face_gauss(/;"	s
face_normal	hexa_NB0.f90	/^subroutine face_normal(/;"	s
face_wght_4	model_module0.f90	/^real(kind=double) wght_8(8),face_wght_4(/;"	v	module:model_type
face_wght_9	model_module0.f90	/^real(kind=double) wght_27(27),face_wght_9(/;"	v	module:model_type
facemarked	tetgen.h	/^inline bool tetgenmesh::facemarked(triface& t) {$/;"	f	class:tetgenmesh
facepivot1	tetgen.h	/^  static int facepivot1[12], facepivot2[12][12];$/;"	m	class:tetgenmesh
facepivot2	tetgen.h	/^  static int facepivot1[12], facepivot2[12][12];$/;"	m	class:tetgenmesh
facesout	tetgen.h	/^  int facesout;                                                    \/\/ '-f', 0.$/;"	m	class:tetgenbehavior
facet	tetgen.h	/^  } facet;$/;"	t	class:tetgenio	typeref:struct:tetgenio::__anon2
facet_ang_tol	tetgen.h	/^  REAL facet_ang_tol;                                          \/\/ '-p', 179.9.$/;"	m	class:tetgenbehavior
facetconstraintlist	tetgen.h	/^  REAL *facetconstraintlist;$/;"	m	class:tetgenio
facetlist	tetgen.h	/^  facet *facetlist;$/;"	m	class:tetgenio
facetmarkerlist	tetgen.h	/^  int *facetmarkerlist;$/;"	m	class:tetgenio
facetverticeslist	tetgen.h	/^  point *facetverticeslist;$/;"	m	class:tetgenmesh
fapex	tetgen.h	/^    point forg, fdest, fapex, foppo, noppo;$/;"	m	class:tetgenmesh::badface
farsdest	tetgen.h	/^inline tetgenmesh::point tetgenmesh::farsdest(face& s) $/;"	f	class:tetgenmesh
farsorg	tetgen.h	/^inline tetgenmesh::point tetgenmesh::farsorg(face& s)$/;"	f	class:tetgenmesh
fastlookup	tetgen.h	1007;"	d
fdest	tetgen.h	/^    point forg, fdest, fapex, foppo, noppo;$/;"	m	class:tetgenmesh::badface
fem_parallel	master-big0.f90	/^subroutine fem_parallel(/;"	s
fem_update_ghost_node_solution	master-big0.f90	/^subroutine fem_update_ghost_node_solution(/;"	s
file	tvisual.h	/^c name in input file,  in TEC file, IPARS name$/;"	v
fillregioncount	tetgen.h	/^  long fillregioncount, cavitycount, cavityexpcount;$/;"	m	class:tetgenmesh
find_ind	visual4.c	/^int find_ind(_F_REAL_8 y,$/;"	f
first_time_step	model_module0.f90	/^integer model,ele_type,ele_dof_3,ele_dof_4,first_time_step$/;"	v	module:model_type
firstblock	tetgen.h	/^    void **firstblock, **nowblock;$/;"	m	class:tetgenmesh::memorypool
firstnumber	tetgen.h	/^  int firstnumber; $/;"	m	class:tetgenio
fixedvolume	tetgen.h	/^  int fixedvolume;                                                 \/\/ '-a', 0.$/;"	m	class:tetgenbehavior
flag_cpl	model_module0.f90	/^integer flag_cpl,/;"	v	module:system
flag_gravity	model_module0.f90	/^integer flag_cpl,flag_gravity,/;"	v	module:system
flag_initial	model_module0.f90	/^integer flag_cpl,flag_gravity,flag_initial,/;"	v	module:system
flag_solve	model_module0.f90	/^integer flag_cpl,flag_gravity,flag_initial,flag_solve,/;"	v	module:system
fld_tmp_prp_itm	model_module0.f90	/^integer fld_tmp_prp_itm$/;"	v	module:system
flip14count	tetgen.h	/^  long flip14count, flip26count, flipn2ncount;$/;"	m	class:tetgenmesh
flip22count	tetgen.h	/^  long flip31count, flip22count;$/;"	m	class:tetgenmesh
flip23count	tetgen.h	/^  long flip23count, flip32count, flip44count, flip41count;$/;"	m	class:tetgenmesh
flip26count	tetgen.h	/^  long flip14count, flip26count, flipn2ncount;$/;"	m	class:tetgenmesh
flip31count	tetgen.h	/^  long flip31count, flip22count;$/;"	m	class:tetgenmesh
flip32count	tetgen.h	/^  long flip23count, flip32count, flip44count, flip41count;$/;"	m	class:tetgenmesh
flip41count	tetgen.h	/^  long flip23count, flip32count, flip44count, flip41count;$/;"	m	class:tetgenmesh
flip44count	tetgen.h	/^  long flip23count, flip32count, flip44count, flip41count;$/;"	m	class:tetgenmesh
flipconstraints	tetgen.h	/^    flipconstraints() {$/;"	f	class:tetgenmesh::flipconstraints
flipconstraints	tetgen.h	/^  class flipconstraints {$/;"	c	class:tetgenmesh
flipinsert	tetgen.h	/^  int flipinsert;                                                  \/\/ '-L', 0.$/;"	m	class:tetgenbehavior
fliplinklevel	tetgen.h	/^  int fliplinklevel;                                                    \/\/ -1.$/;"	m	class:tetgenbehavior
fliplinklevelinc	tetgen.h	/^  int fliplinklevelinc;                                                 \/\/  1.$/;"	m	class:tetgenbehavior
flipn2ncount	tetgen.h	/^  long flip14count, flip26count, flipn2ncount;$/;"	m	class:tetgenmesh
flippool	tetgen.h	/^  memorypool *flippool;$/;"	m	class:tetgenmesh
flipstack	tetgen.h	/^  badface *flipstack; $/;"	m	class:tetgenmesh
flipstarsize	tetgen.h	/^  int flipstarsize;                                                     \/\/ -1.$/;"	m	class:tetgenbehavior
flow_para	model_module0.f90	/^    real(kind=double), pointer :: flow_para(/;"	k	type:material
flow_prp_itm	model_module0.f90	/^    integer flow_prp_itm$/;"	k	type:material
flux	model_module0.f90	/^real(kind=double) wght_8(8),face_wght_4(4),flux,/;"	v	module:model_type
flux_fld	model_module0.f90	/^real(kind=double) wght_8(8),face_wght_4(4),flux,flux_fld,/;"	v	module:model_type
flux_sld	model_module0.f90	/^real(kind=double) wght_27(27),face_wght_9(9),flux_sld,/;"	v	module:model_type
flux_tmp	model_module0.f90	/^real(kind=double) wght_27(27),face_wght_9(9),flux_sld,flux_tmp$/;"	v	module:model_type
fmodblk	memory.h	/^MEX PINT4 fmodblk;         \/\/ Pointer to FMODBLK(nb) in CONTROL.H$/;"	v
fnext	tetgen.h	/^inline void tetgenmesh::fnext(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
fnextself	tetgen.h	2432;"	d
foppo	tetgen.h	/^    point forg, fdest, fapex, foppo, noppo;$/;"	m	class:tetgenmesh::badface
forg	tetgen.h	/^    point forg, fdest, fapex, foppo, noppo;$/;"	m	class:tetgenmesh::badface
frac_elem_connect	model_module0.f90	/^integer, allocatable:: frac_elem_connect(/;"	v	module:system
frac_interior_node_affine	model_module0.f90	/^integer, allocatable:: frac_interior_node_affine(/;"	v	module:system
frac_interior_node_id	model_module0.f90	/^integer, allocatable:: frac_elem_connect(:,:),frac_node_global_id(:),frac_interior_node_id(/;"	v	module:system
frac_node_coord	model_module0.f90	/^real(kind=double), allocatable:: frac_node_coord(/;"	v	module:system
frac_node_global_id	model_module0.f90	/^integer, allocatable:: frac_elem_connect(:,:),frac_node_global_id(/;"	v	module:system
frac_node_width	model_module0.f90	/^real(kind=double), allocatable:: frac_node_coord(:,:),frac_node_width(/;"	v	module:system
frac_tecplot	post_prcss0.f90	/^subroutine frac_tecplot(/;"	s
free_memory	master-big0.f90	/^subroutine free_memory$/;"	s
freeall_	memman1.c	/^FORTSUB freeall_ ()$/;"	f
freememory	tetgen.h	/^  void freememory()$/;"	f	class:tetgenmesh
fsym	tetgen.h	/^inline void tetgenmesh::fsym(triface& t1, triface& t2) {$/;"	f	class:tetgenmesh
fsymself	tetgen.h	2417;"	d
fsymtbl	tetgen.h	/^  static int bondtbl[12][12], fsymtbl[12][12];$/;"	m	class:tetgenmesh
function	terrcalc.h	/^! terrcalc.dh - Common block for manufactured solution, source function,$/;"	v
fvdebug	visual.c	/^FILE *fvdebug;$/;"	v
g_stiff	gstiff0.f90	/^subroutine g_stiff(/;"	s
gauss_coord_27	model_module0.f90	/^real(kind=double) gauss_coord_8(8,3),gauss_coord_27(/;"	v	module:model_type
gauss_coord_8	model_module0.f90	/^real(kind=double) gauss_coord_8(/;"	v	module:model_type
gcheck	visual3.c	392;"	d	file:
gcheck	visual3.c	399;"	d	file:
gcheck	visual3.c	470;"	d	file:
gcheck	visual3.c	477;"	d	file:
gcheck	visual5.c	362;"	d	file:
gcheck	visual5.c	369;"	d	file:
gcheck	visual5.c	440;"	d	file:
gcheck	visual5.c	447;"	d	file:
gcheck	visual7.cpp	373;"	d	file:
gcheck	visual7.cpp	380;"	d	file:
gcheck	visual7.cpp	461;"	d	file:
gcheck	visual7.cpp	468;"	d	file:
gcheck	visual8.cpp	441;"	d	file:
gcheck	visual8.cpp	448;"	d	file:
gcheck	visual8.cpp	531;"	d	file:
gcheck	visual8.cpp	538;"	d	file:
geamod	ipars.f	/^      MODULE geamod$/;"	m
geaout_	memman1.c	/^FORTSUB geaout_ (PINT4 arynum, PINT4 iex, PINT4 kcen)$/;"	f
geomhandle	tetgen.h	/^  void *geomhandle;$/;"	m	class:tetgenio
getArea	impfa.f	/^      subroutine getArea(/;"	s
getCornerHex	buildmpfa.f	/^      SUBROUTINE getCornerHex(/;"	s
getCornerPInv	buildmpfa.f	/^      SUBROUTINE getCornerPInv(/;"	s
getEYE	fcns.f	/^      SUBROUTINE getEYE(/;"	s
getF1Neum	tbdary.f	/^      subroutine getF1Neum(/;"	s
getF2Neum	tbdary.f	/^      subroutine getF2Neum(/;"	s
getFDir	tbdary.f	/^      subroutine getFDir(/;"	s
getFacePropVal	impfa.f	/^      subroutine getFacePropVal$/;"	s
getRHSbd	tbdary.f	/^      SUBROUTINE getRHSbd(/;"	s
getRHSbdAbove	tbdary.f	/^      subroutine getRHSbdAbove(/;"	s
get_gstiff_index	pre_prcss0.f90	/^subroutine get_gstiff_index$/;"	s
get_line	visual4.c	/^int get_line(_F_REAL_8 x1,_F_REAL_8 y1,_F_REAL_8 x2,_F_REAL_8 y2,$/;"	f
get_strain	utility0.f90	/^subroutine  get_strain(/;"	s
get_stress	utility0.f90	/^subroutine  get_stress(/;"	s
get_vstrain_at_element_centor	utility0.f90	/^subroutine  get_vstrain_at_element_centor$/;"	s
getanam_	memman1.c	/^FORTSUB getanam_ (PINT4 arynum, PCHAR varynam, PINT4 err)$/;"	f
getedgesteinerparamonface	tetgen.h	/^  GetEdgeSteinerParamOnFace getedgesteinerparamonface;$/;"	m	class:tetgenio
getfacetindex	tetgen.h	/^inline int tetgenmesh::getfacetindex(face& s)$/;"	f	class:tetgenmesh
getpointinsradius	tetgen.h	/^inline REAL tetgenmesh::getpointinsradius(point pt)$/;"	f	class:tetgenmesh
getsteineronedge	tetgen.h	/^  GetSteinerOnEdge getsteineronedge;$/;"	m	class:tetgenio
getsteineronface	tetgen.h	/^  GetSteinerOnFace getsteineronface;$/;"	m	class:tetgenio
getvertexparamonedge	tetgen.h	/^  GetVertexParamOnEdge getvertexparamonedge;$/;"	m	class:tetgenio
getvertexparamonface	tetgen.h	/^  GetVertexParamOnFace getvertexparamonface;$/;"	m	class:tetgenio
gindex	readdatc.c	191;"	d	file:
gindex	readdatc.c	193;"	d	file:
gindex	readdatc.c	222;"	d	file:
gindex	readdatc.c	224;"	d	file:
gindex	visual1.c	139;"	d	file:
gindex	visual1.c	141;"	d	file:
gindex	visual1.c	245;"	d	file:
gindex	visual1.c	251;"	d	file:
gindex	visual1.c	289;"	d	file:
gindex	visual1.c	301;"	d	file:
gindex	visual1.c	316;"	d	file:
gindex	visual2.c	146;"	d	file:
gindex	visual2.c	210;"	d	file:
gindex	visual2.c	218;"	d	file:
gindex	visual2.c	282;"	d	file:
gindex	visual2.c	284;"	d	file:
gindex	visual2.c	89;"	d	file:
gindex	visual2.c	91;"	d	file:
gindex	visual3.c	144;"	d	file:
gindex	visual3.c	208;"	d	file:
gindex	visual3.c	272;"	d	file:
gindex	visual3.c	290;"	d	file:
gindex	visual3.c	381;"	d	file:
gindex	visual3.c	391;"	d	file:
gindex	visual3.c	459;"	d	file:
gindex	visual3.c	469;"	d	file:
gindex	visual3.c	545;"	d	file:
gindex	visual4.c	207;"	d	file:
gindex	visual4.c	209;"	d	file:
gindex	visual5.c	133;"	d	file:
gindex	visual5.c	197;"	d	file:
gindex	visual5.c	260;"	d	file:
gindex	visual5.c	278;"	d	file:
gindex	visual5.c	351;"	d	file:
gindex	visual5.c	361;"	d	file:
gindex	visual5.c	429;"	d	file:
gindex	visual5.c	439;"	d	file:
gindex	visual5.c	511;"	d	file:
gindex	visual6.c	146;"	d	file:
gindex	visual6.c	197;"	d	file:
gindex	visual6.c	212;"	d	file:
gindex	visual6.c	220;"	d	file:
gindex	visual6.c	278;"	d	file:
gindex	visual6.c	280;"	d	file:
gindex	visual6.c	91;"	d	file:
gindex	visual6.c	93;"	d	file:
gindex	visual7.cpp	128;"	d	file:
gindex	visual7.cpp	191;"	d	file:
gindex	visual7.cpp	235;"	d	file:
gindex	visual7.cpp	256;"	d	file:
gindex	visual7.cpp	362;"	d	file:
gindex	visual7.cpp	372;"	d	file:
gindex	visual7.cpp	450;"	d	file:
gindex	visual7.cpp	460;"	d	file:
gindex	visual8.cpp	126;"	d	file:
gindex	visual8.cpp	189;"	d	file:
gindex	visual8.cpp	215;"	d	file:
gindex	visual8.cpp	220;"	d	file:
gindex	visual8.cpp	235;"	d	file:
gindex	visual8.cpp	256;"	d	file:
gindex	visual8.cpp	428;"	d	file:
gindex	visual8.cpp	440;"	d	file:
gindex	visual8.cpp	520;"	d	file:
gindex	visual8.cpp	530;"	d	file:
gmsh_order	model_module0.f90	/^integer gmsh_order(/;"	v	module:system
gpt_estrn	model_module0.f90	/^    real(kind=double), pointer :: gpt_estrn(/;"	k	type:element
gpt_estrn_t	model_module0.f90	/^    real(kind=double), pointer :: gpt_estrn_t(/;"	k	type:element
gpt_pstrn	model_module0.f90	/^    real(kind=double), pointer :: gpt_pstrn(/;"	k	type:element
gpt_pstrn_t	model_module0.f90	/^    real(kind=double), pointer :: gpt_pstrn_t(/;"	k	type:element
gpt_strn	model_module0.f90	/^    real(kind=double), pointer :: gpt_strn(/;"	k	type:element
gpt_strn_t	model_module0.f90	/^    real(kind=double), pointer :: gpt_strn_t(/;"	k	type:element
gpt_strss	model_module0.f90	/^    real(kind=double), pointer :: gpt_strss(/;"	k	type:element
gpt_strss_t	model_module0.f90	/^    real(kind=double), pointer :: gpt_strss_t(/;"	k	type:element
gpt_vstate	model_module0.f90	/^    real(kind=double), pointer :: gpt_vstate(/;"	k	type:element
gpt_vstate_t	model_module0.f90	/^    real(kind=double), pointer :: gpt_vstate_t(/;"	k	type:element
gpt_yield	model_module0.f90	/^    integer, pointer :: gpt_yield(/;"	k	type:element
gravity_vector	model_module0.f90	/^real(kind=double) gravity_vector(/;"	v	module:system
gstiff	model_module0.f90	/^real(kind=double), allocatable:: gstiff(/;"	v	module:system
gstiff_col_index	model_module0.f90	/^integer, allocatable:: node_out(:),cg_node(:,:),gstiff_row_index(:),gstiff_col_index(/;"	v	module:system
gstiff_row_index	model_module0.f90	/^integer, allocatable:: node_out(:),cg_node(:,:),gstiff_row_index(/;"	v	module:system
gstiff_save	model_module0.f90	/^real(kind=double), allocatable:: gstiff(:),residue(:),gstiff_save(/;"	v	module:system
half_d	model_module0.f90	/^   real(kind=double), parameter :: half_d /;"	v	module:truth
harden_id	model_module0.f90	/^    integer harden_id$/;"	k	type:material
hexa	model_module0.f90	/^type (element), allocatable :: hexa(/;"	v	module:model_type
hexa_bmat	hexa_NB0.f90	/^subroutine hexa_bmat(/;"	s
hexa_face_node	model_module0.f90	/^integer hexa_face_node(/;"	v	module:system
hexa_node_on_face	post_prcss0.f90	/^subroutine hexa_node_on_face$/;"	s
hexanb0	hexa_NB0.f90	/^subroutine  hexanb0(/;"	s
highordertable	tetgen.h	/^  point *highordertable;$/;"	m	class:tetgenmesh
hilbert_limit	tetgen.h	/^  int hilbert_limit;                                             \/\/ '-b\/\/'  8.$/;"	m	class:tetgenbehavior
hilbert_order	tetgen.h	/^  int hilbert_order;                                           \/\/ '-b\/\/\/', 52.$/;"	m	class:tetgenbehavior
holelist	tetgen.h	/^    REAL *holelist;$/;"	m	struct:tetgenio::__anon2
holelist	tetgen.h	/^  REAL *holelist;$/;"	m	class:tetgenio
hullsize	tetgen.h	/^  long hullsize;                        \/\/ Number of exterior boundary faces.$/;"	m	class:tetgenmesh
i	control.h	/^!  i = 3 ==> NET MASS TRANSFERRED TO OTHER PHYSICAL MODELS, LAST TIME STEP$/;"	v
i	control.h	/^!  i = 4 ==> INITIAL MASS$/;"	v
i	control.h	/^!  i = 8 ==> DIMENSIONLESS MASS BALANCE$/;"	v
i	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
i	visualc.h	/^typedef struct node { int i,j,k; } NODE;$/;"	m	struct:node
i	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
i	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	m	struct:rectcells
i	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	m	struct:visjcells
icheck	visual3.c	412;"	d	file:
icheck	visual3.c	419;"	d	file:
icheck	visual3.c	486;"	d	file:
icheck	visual3.c	493;"	d	file:
icheck	visual5.c	381;"	d	file:
icheck	visual5.c	388;"	d	file:
icheck	visual5.c	456;"	d	file:
icheck	visual5.c	463;"	d	file:
icheck	visual7.cpp	389;"	d	file:
icheck	visual7.cpp	396;"	d	file:
icheck	visual7.cpp	472;"	d	file:
icheck	visual7.cpp	479;"	d	file:
icheck	visual8.cpp	457;"	d	file:
icheck	visual8.cpp	464;"	d	file:
icheck	visual8.cpp	542;"	d	file:
icheck	visual8.cpp	549;"	d	file:
idim	memory.h	/^MEX int  idim[MAXBLK];    \/\/ Grid-element array dimensions (min 1) (local)$/;"	v
idim	visualc.h	/^  int nb,n,idim,jdim,ncurr;$/;"	m	struct:slicelist
idx2facetlist	tetgen.h	/^  int *idx2facetlist;$/;"	m	class:tetgenmesh
iffirst	readdatc.c	/^static int iffirst=1;$/;"	v	file:
iloc	tetgen.h	/^    int iloc;  \/\/ input\/output.$/;"	m	class:tetgenmesh::insertvertexflags
iloc1	memory.h	/^MEX int  iloc1[MAXBLK];   \/\/ I index limits (local)$/;"	v
iloc2	memory.h	/^MEX int  iloc2[MAXBLK];$/;"	v
imprval	tetgen.h	/^    REAL initval, imprval;$/;"	m	class:tetgenmesh::optparameters
in	tetgen.h	/^  tetgenio *in, *addin;$/;"	m	class:tetgenmesh
increaseelemcounter	tetgen.h	/^inline void tetgenmesh::increaseelemcounter(triface& t) {$/;"	f	class:tetgenmesh
incrflip	tetgen.h	/^  int incrflip;                                                    \/\/ '-l', 0.$/;"	m	class:tetgenbehavior
index	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
index	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	m	struct:rectcells
index	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	m	struct:visjcells
index_f	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
indx	model_module0.f90	/^integer, allocatable:: zero_dch(:),node_st_dof(:),indx(/;"	v	module:system
infect	tetgen.h	/^inline void tetgenmesh::infect(triface& t) {$/;"	f	class:tetgenmesh
infected	tetgen.h	/^inline bool tetgenmesh::infected(triface& t) {$/;"	f	class:tetgenmesh
infilename	tetgen.h	/^  char infilename[1024];$/;"	m	class:tetgenbehavior
init	tetgen.h	/^  static void init(facet* f) {$/;"	f	class:tetgenio
init	tetgen.h	/^  static void init(polygon* p) {$/;"	f	class:tetgenio
initial_pore_pressure	model_module0.f90	/^    real(kind=double) initial_pore_pressure$/;"	k	type:element
initial_stress	model_module0.f90	/^    real(kind=double) initial_stress(/;"	k	type:element
initialize	tetgen.h	/^  void initialize()$/;"	f	class:tetgenio
initval	tetgen.h	/^    REAL initval, imprval;$/;"	m	class:tetgenmesh::optparameters
insegments	tetgen.h	/^  long insegments;                               \/\/ Number of input segments.$/;"	m	class:tetgenmesh
insertaddpoints	tetgen.h	/^  int insertaddpoints;                                             \/\/ '-i', 0.$/;"	m	class:tetgenbehavior
insertvertexflags	tetgen.h	/^    insertvertexflags() {$/;"	f	class:tetgenmesh::insertvertexflags
insertvertexflags	tetgen.h	/^  class insertvertexflags {$/;"	c	class:tetgenmesh
int1D_edge	visualc.h	/^inline static void int1D_edge(int c1, int c2,$/;"	f
int_face_tl	model_module0.f90	/^integer int_face_tl,/;"	v	module:system
internal_force	model_module0.f90	/^real(kind=double), allocatable:: delta_load(:),delta_load_save(:),internal_force(/;"	v	module:system
internal_force_save	model_module0.f90	/^real(kind=double), allocatable:: delta_load(:),delta_load_save(:),internal_force(:),internal_force_save(/;"	v	module:system
interresult	tetgen.h	/^  enum interresult {DISJOINT, INTERSECT, SHAREVERT, SHAREEDGE, SHAREFACE,$/;"	g	class:tetgenmesh
intptr_t	tetgen.h	/^     typedef __int64 intptr_t;$/;"	t
intptr_t	tetgen.h	/^     typedef int intptr_t;$/;"	t
inverse	utility0.f90	/^ subroutine inverse(/;"	s
iofflg	memory.h	/^MEX int  iofflg[MAXBLK];   \/\/ Local to global offsets for myprc$/;"	v
isdeadtet	tetgen.h	/^inline bool tetgenmesh::isdeadtet(triface& t) {$/;"	f	class:tetgenmesh
ishulltet	tetgen.h	/^inline bool tetgenmesh::ishulltet(triface& t) {$/;"	f	class:tetgenmesh
iso_harden	model_module0.f90	/^    real(kind=double), pointer :: iso_harden(/;"	k	type:material
iso_prp_itm	model_module0.f90	/^    integer iso_prp_itm$/;"	k	type:material
isort	pre_prcss0.f90	/^subroutine isort(/;"	s
isshsubseg	tetgen.h	3030;"	d
isshtet	tetgen.h	2974;"	d
issubface	tetgen.h	2956;"	d
issubseg	tetgen.h	3080;"	d
itembytes	tetgen.h	/^    int  itembytes, itemwords;$/;"	m	class:tetgenmesh::memorypool
items	tetgen.h	/^    long items, maxitems;$/;"	m	class:tetgenmesh::memorypool
itemsperblock	tetgen.h	/^    int  itemsperblock;$/;"	m	class:tetgenmesh::memorypool
itemwords	tetgen.h	/^    int  itembytes, itemwords;$/;"	m	class:tetgenmesh::memorypool
j	boundary.h	/^c               a. i = 1 to 3 ==> i,j,k of the 3D element$/;"	v
j	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
j	visualc.h	/^typedef struct node { int i,j,k; } NODE;$/;"	m	struct:node
j	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
j	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	m	struct:rectcells
j	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
jacob3d	hexa_NB0.f90	/^subroutine jacob3d(/;"	s
jacob_face	hexa_NB0.f90	/^subroutine jacob_face(/;"	s
jdim	memory.h	/^MEX int  jdim[MAXBLK];$/;"	v
jdim	visualc.h	/^  int nb,n,idim,jdim,ncurr;$/;"	m	struct:slicelist
jloc1	memory.h	/^MEX PINT4 jloc1[MAXBLK];   \/\/ Pointers to J index limits (local)$/;"	v
jloc2	memory.h	/^MEX PINT4 jloc2[MAXBLK];$/;"	v
jofflg	memory.h	/^MEX int  jofflg[MAXBLK];$/;"	v
jtime	model_module0.f90	/^integer jtime,/;"	v	module:model_type
k	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
k	visualc.h	/^typedef struct node { int i,j,k; } NODE;$/;"	m	struct:node
k	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
k	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	m	struct:rectcells
k	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
kdim	memory.h	/^MEX int  kdim[MAXBLK];$/;"	v
key	tetgen.h	/^    REAL key, cent[6];  \/\/ circumcenter or cos(dihedral angles) at 6 edges.$/;"	m	class:tetgenmesh::badface
keyout	memory.h	/^MEX PINT4 keyout[MAXBLK];  \/\/ Pointers to KEYOUT arrays (local)$/;"	v
kilary_	memman2.c	/^FORTSUB kilary_ (void)$/;"	f
kin_harden	model_module0.f90	/^    real(kind=double), pointer :: kin_harden(/;"	k	type:material
kin_prp_itm	model_module0.f90	/^    integer kin_prp_itm$/;"	k	type:material
kloc1	memory.h	/^MEX int  kloc1[MAXBLK];   \/\/ K index limits (local)$/;"	v
kloc2	memory.h	/^MEX int  kloc2[MAXBLK];$/;"	v
kofflg	memory.h	/^MEX int  kofflg[MAXBLK];$/;"	v
lawson	tetgen.h	/^    int bowywat, lawson;$/;"	m	class:tetgenmesh::insertvertexflags
layer	memory.h	/^MEX int  layer[3];         \/\/ Number of communication layers$/;"	v
ldim	visualc.h	/^typedef struct vis_inform {int ldim; char *name; int vnodal;} VIS_INFO ;$/;"	m	struct:vis_inform
linear	model_module0.f90	/^integer int_face_tl,linear,/;"	v	module:system
load	load_vector0.f90	/^subroutine load$/;"	s
load_cnst	model_module0.f90	/^real(kind=double), allocatable:: load_cnst(/;"	v	module:system
load_factor	model_module0.f90	/^real load_scale,load_factor,/;"	v	module:system
load_factor_old	model_module0.f90	/^real load_scale,load_factor,deltaT,time_past,scale_point,load_factor_old$/;"	v	module:system
load_only	model_module0.f90	/^integer bandL,load_only,/;"	v	module:system
load_scale	model_module0.f90	/^real load_scale,/;"	v	module:system
load_scaling	model_module0.f90	/^real(kind=double) load_scaling$/;"	v	module:system
load_step	model_module0.f90	/^integer bandL,load_only,NO_LU,NR_NUMBER,cut,nload,load_step$/;"	v	module:system
load_tl_zero	model_module0.f90	/^real(kind=double), allocatable:: load_tl_zero(/;"	v	module:system
locateresult	tetgen.h	/^  enum locateresult {UNKNOWN, OUTSIDE, INTETRAHEDRON, ONFACE, ONEDGE, ONVERTEX,$/;"	g	class:tetgenmesh
log2objectsperblock	tetgen.h	/^    int log2objectsperblock;$/;"	m	class:tetgenmesh::arraypool
longest	tetgen.h	/^  REAL longest;                          \/\/ The longest possible edge length.$/;"	m	class:tetgenmesh
main	driver_f.f	/^      PROGRAM main$/;"	p
mapping_gij_to_compressed_index	pre_prcss0.f90	/^subroutine mapping_gij_to_compressed_index(/;"	s
markedge	tetgen.h	/^inline void tetgenmesh::markedge(triface& t) {$/;"	f	class:tetgenmesh
markface	tetgen.h	/^inline void tetgenmesh::markface(triface& t) {$/;"	f	class:tetgenmesh
marktest	tetgen.h	/^inline void tetgenmesh::marktest(triface& t) {$/;"	f	class:tetgenmesh
marktest2	tetgen.h	/^inline void tetgenmesh::marktest2(triface& t) {$/;"	f	class:tetgenmesh
marktest2ed	tetgen.h	/^inline bool tetgenmesh::marktest2ed(triface& t) {$/;"	f	class:tetgenmesh
marktested	tetgen.h	/^inline bool tetgenmesh::marktested(triface& t) {$/;"	f	class:tetgenmesh
mass	unitsex.h	/^C         lb and external stb.  Thus, to correct an input oil mass, the value$/;"	v
master_node	utility0.f90	/^subroutine  master_node$/;"	s
mat_L	model_module0.f90	/^real(kind=double), allocatable:: mat_L(/;"	v	module:model_type
mat_R	model_module0.f90	/^real(kind=double), allocatable:: mat_L(:,:),mat_R(/;"	v	module:model_type
mat_config	model_module0.f90	/^module mat_config /;"	m
mat_core_solver	dmat_ep.f90	/^subroutine mat_core_solver(/;"	s
mat_cstiff	dmat_ep.f90	/^subroutine mat_cstiff(/;"	s
mat_flow	dmat_ep.f90	/^subroutine mat_flow(/;"	s
mat_grp_tl	model_module0.f90	/^integer mat_grp_tl /;"	v	module:system
mat_harden	dmat_ep.f90	/^subroutine mat_harden(/;"	s
mat_no	model_module0.f90	/^    integer mat_no$/;"	k	type:element
mat_nprop_max	model_module0.f90	/^integer tl_0_dch,dirnode,beta_zero,tl_non_zeros,mat_nprop_max$/;"	v	module:system
mat_prpty	model_module0.f90	/^type (material), allocatable :: mat_prpty(/;"	v	module:system
mat_solver	dmat_ep.f90	/^      subroutine mat_solver(/;"	s
mat_solver_elastic	dmat_ep.f90	/^subroutine mat_solver_elastic(/;"	s
mat_stiff_load	dmat_ep.f90	/^subroutine mat_stiff_load(/;"	s
mat_update	dmat_ep.f90	/^subroutine mat_update(/;"	s
mat_yield	dmat_ep.f90	/^subroutine mat_yield(/;"	s
material	model_module0.f90	/^type material /;"	t	module:mat_config
max	memory.h	28;"	d
max_char	model_module0.f90	/^   integer, parameter :: max_char /;"	v	module:truth
max_iter	model_module0.f90	/^   integer, parameter :: max_iter /;"	v	module:control
max_min_aspectratio	tetgen.h	/^    int max_min_aspectratio; \/\/ Maximize the minimum aspect ratio.$/;"	m	class:tetgenmesh::optparameters
max_min_volume	tetgen.h	/^    int max_min_volume;      \/\/ Maximize the minimum volume.$/;"	m	class:tetgenmesh::optparameters
maxitems	tetgen.h	/^    long items, maxitems;$/;"	m	class:tetgenmesh::memorypool
maxiter	tetgen.h	/^    int maxiter;  \/\/ Maximum smoothing iterations (disabled by -1).$/;"	m	class:tetgenmesh::optparameters
maxvolume	tetgen.h	/^  REAL maxvolume;                                               \/\/ '-a', -1.0.$/;"	m	class:tetgenbehavior
mblock	memory.h	/^MEX PCHAR mblock;          \/\/ Pointer to flag MBPOROE$/;"	v
meditview	tetgen.h	/^  int meditview;                                                   \/\/ '-g', 0.$/;"	m	class:tetgenbehavior
memorypool	tetgen.h	/^  class memorypool {$/;"	c	class:tetgenmesh
mesh_dim	tetgen.h	/^  int mesh_dim;$/;"	m	class:tetgenio
meshedges	tetgen.h	/^  long meshedges;                                    \/\/ Number of mesh edges.$/;"	m	class:tetgenmesh
meshhulledges	tetgen.h	/^  long meshhulledges;                       \/\/ Number of boundary mesh edges.$/;"	m	class:tetgenmesh
metric	tetgen.h	/^  int metric;                                                      \/\/ '-m', 0.$/;"	m	class:tetgenbehavior
min	memory.h	27;"	d
min_max_dihedangle	tetgen.h	/^    int min_max_dihedangle;  \/\/ Minimize the maximum dihedral angle. $/;"	m	class:tetgenmesh::optparameters
mindihedral	tetgen.h	/^  REAL mindihedral;                                              \/\/ '-q', 5.0.$/;"	m	class:tetgenbehavior
minedgelength	tetgen.h	/^  REAL minedgelength;                                                  \/\/ 0.0.$/;"	m	class:tetgenbehavior
minfaceang	tetgen.h	/^  REAL minfaceang, minfacetdihed;     \/\/ The minimum input (dihedral) angles.$/;"	m	class:tetgenmesh
minfacetdihed	tetgen.h	/^  REAL minfaceang, minfacetdihed;     \/\/ The minimum input (dihedral) angles.$/;"	m	class:tetgenmesh
minratio	tetgen.h	/^  REAL minratio;                                                 \/\/ '-q', 0.0.$/;"	m	class:tetgenbehavior
modact	memory.h	/^MEX PINT4 modact;          \/\/ Pointer to currently active model number$/;"	v
modblk	memory.h	/^MEX PINT4 modblk;          \/\/ Pointer to MODBLK(nb) in CONTROL.H$/;"	v
model	model_module0.f90	/^integer model,/;"	v	module:model_type
model_id	model_module0.f90	/^    integer model_id$/;"	k	type:material
model_type	model_module0.f90	/^module model_type$/;"	m
module_elasticity2	master-big0.f90	/^subroutine module_elasticity2(/;"	s
mpi_comm	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
mstep	model_module0.f90	/^integer int_face_tl,linear,ynelem,mstep,/;"	v	module:system
my_cpu	model_module0.f90	/^type (cpu_commu) my_cpu$/;"	v	module:system
my_cpu_commu	model_module0.f90	/^module my_cpu_commu$/;"	m
myblkdim	ccallc.f	/^         subroutine myblkdim(/;"	s
myblkdim	readdatc.c	84;"	d	file:
myblkoff	ccallc.f	/^        subroutine myblkoff(/;"	s
myblkoff	readdatc.c	86;"	d	file:
myblkoff	visualc.h	49;"	d
mycallwork	ccallc.f	/^         subroutine mycallwork(/;"	s
myelem	memory.h	/^MEX int  myelem[MAXBLK];          \/\/ Proc local flag for ownership in block$/;"	v
myind	visual4.c	/^static int myind(int i,int j)$/;"	f	file:
mynblk	boundary.h	/^      common \/bdutil\/ nbel,mynblk,myreg,vvol$/;"	v
mynod	memory.h	/^MEX int  mynod;           \/\/ Active processor number (mod 0)$/;"	v
myread_fname_set	readdatc.c	/^void myread_fname_set($/;"	f
myread_fname_set	readdatc.c	44;"	d	file:
myreadpar_err	readdatc.c	/^void myreadpar_err( _F_INTEGER * kerr){$/;"	f
myreadpar_err	readdatc.c	40;"	d	file:
myreg	boundary.h	/^      common \/bdutil\/ nbel,mynblk,myreg,vvol$/;"	v
n	tbaldat.h	/^C  WELI(n) = TOTAL FLUID INJECTED TO WELL n, LB$/;"	v
n	tbaldat.h	/^C  WELP(n) = TOTAL FLUID PRODUCED FROM WELL n, LB$/;"	v
n	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	m	struct:rectlist
n	visualc.h	/^  int nb,n,idim,jdim,ncurr;$/;"	m	struct:slicelist
n0map	memory.h	/^MEX PINT4 n0map;          \/\/ Pointer to N0MAP() in LAYOUT.H$/;"	v
nam	extvar.c	/^CHAR  nam[MAXEXT][MAXNAM];  \/\/ External variable names$/;"	v
name	visualc.h	/^typedef struct vis_inform {int ldim; char *name; int vnodal;} VIS_INFO ;$/;"	m	struct:vis_inform
nb	visualc.h	/^  int nb,n,idim,jdim,ncurr;$/;"	m	struct:slicelist
nb	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
nb_elem_id	model_module0.f90	/^    integer nb_elem_id(/;"	k	type:node_obj
nb_node_id	model_module0.f90	/^    integer nb_node_id(/;"	k	type:node_obj
nbcw	memory.h	/^MEX int   nbcw;            \/\/ Current block number for CALLWORK (mod 0)$/;"	v
nbel	boundary.h	/^      common \/bdutil\/ nbel,mynblk,myreg,vvol$/;"	v
ncpus_to_recv	model_module0.f90	/^    integer ncpus_to_recv$/;"	k	type:cpu_commu
ncpus_to_send	model_module0.f90	/^    integer ncpus_to_send$/;"	k	type:cpu_commu
ncurr	visualc.h	/^  int nb,n,idim,jdim,ncurr;$/;"	m	struct:slicelist
ndatavals	vistab.h	/^     &	ndatavals, numrock, vis_tabotype,$/;"	v
neighborlist	tetgen.h	/^  int  *neighborlist;$/;"	m	class:tetgenio
neighout	tetgen.h	/^  int neighout;                                                    \/\/ '-n', 0.$/;"	m	class:tetgenbehavior
nextitem	tetgen.h	/^    badface *nextitem; $/;"	m	class:tetgenmesh::badface
nextitem	tetgen.h	/^    void *nextitem;$/;"	m	class:tetgenmesh::memorypool
ngauss	model_module0.f90	/^    integer ngauss$/;"	k	type:element
ngauss	model_module0.f90	/^integer node_dof,b_dof,ele_dof,sc,ngauss,/;"	v	module:model_type
ngauss_face	model_module0.f90	/^integer ele_node,ele_dof_1,ele_dof_2,ngauss_face,/;"	v	module:model_type
nload	model_module0.f90	/^integer bandL,load_only,NO_LU,NR_NUMBER,cut,nload,/;"	v	module:system
nmodel	memman3.c	/^_F_EXTERN_(void) _c_setmodel(_F_INTEGER *nmodel);$/;"	v
no_iteration	model_module0.f90	/^integer jtime,no_iteration$/;"	v	module:model_type
no_sort	tetgen.h	/^  int no_sort;                                                           \/\/ 0.$/;"	m	class:tetgenbehavior
nobisect	tetgen.h	/^  int nobisect;                                                    \/\/ '-Y', 0.$/;"	m	class:tetgenbehavior
nobisect_param	tetgen.h	/^  int nobisect_param;                                              \/\/ '-Y', 2.$/;"	m	class:tetgenbehavior
nobound	tetgen.h	/^  int nobound;                                                     \/\/ '-B', 0.$/;"	m	class:tetgenbehavior
node	model_module0.f90	/^    integer, pointer :: node(/;"	k	type:element
node	visualc.h	/^typedef struct node { int i,j,k; } NODE;$/;"	s
node_dof	model_module0.f90	/^integer node_dof,/;"	v	module:model_type
node_dof_L	model_module0.f90	/^integer e_id_1,e_id_2,node_dof_L,/;"	v	module:model_type
node_dof_R	model_module0.f90	/^integer e_id_1,e_id_2,node_dof_L,node_dof_R,/;"	v	module:model_type
node_lid_to_recv	model_module0.f90	/^    integer, pointer :: node_lid_to_recv(/;"	k	type:cpu_commu
node_lid_to_send	model_module0.f90	/^    integer, pointer :: node_lid_to_send(/;"	k	type:cpu_commu
node_nb	model_module0.f90	/^type (node_obj), allocatable :: node_nb(/;"	v	module:system
node_obj	model_module0.f90	/^type node_obj$/;"	t	module:sys_node
node_on_boundary_surface	crack_profile_setup.f90	/^subroutine node_on_boundary_surface(/;"	s
node_out	model_module0.f90	/^integer, allocatable:: node_out(/;"	v	module:system
node_share_coord	utility0.f90	/^subroutine node_share_coord /;"	s
node_st_dof	model_module0.f90	/^    integer, pointer :: node_st_dof(/;"	k	type:element
node_st_dof	model_module0.f90	/^integer, allocatable:: zero_dch(:),node_st_dof(/;"	v	module:system
node_tl	model_module0.f90	/^integer ele_tl,node_tl,/;"	v	module:system
node_tl_to_recv	model_module0.f90	/^    integer, pointer :: node_tl_to_recv(/;"	k	type:cpu_commu
node_tl_to_send	model_module0.f90	/^    integer, pointer :: node_tl_to_send(/;"	k	type:cpu_commu
noelewritten	tetgen.h	/^  int noelewritten;                                                \/\/ '-E', 0.$/;"	m	class:tetgenbehavior
noexact	tetgen.h	/^  int noexact;                                                     \/\/ '-X', 0.$/;"	m	class:tetgenbehavior
nofacewritten	tetgen.h	/^  int nofacewritten;                                               \/\/ '-F', 0.$/;"	m	class:tetgenbehavior
noiterationnum	tetgen.h	/^  int noiterationnum;                                              \/\/ '-I', 0.$/;"	m	class:tetgenbehavior
nojettison	tetgen.h	/^  int nojettison;                                                  \/\/ '-J', 0.$/;"	m	class:tetgenbehavior
nomergefacet	tetgen.h	/^  int nomergefacet;                                                \/\/ '-M', 0.$/;"	m	class:tetgenbehavior
nomergevertex	tetgen.h	/^  int nomergevertex;                                               \/\/ '-M', 0.$/;"	m	class:tetgenbehavior
nonconvex	tetgen.h	/^  int nonconvex;                               \/\/ Is current mesh non-convex?$/;"	m	class:tetgenmesh
nonodewritten	tetgen.h	/^  int nonodewritten;                                               \/\/ '-N', 0.$/;"	m	class:tetgenbehavior
nonregularcount	tetgen.h	/^  long nonregularcount;                    \/\/ Are there non-regular vertices?$/;"	m	class:tetgenmesh
noppo	tetgen.h	/^    point forg, fdest, fapex, foppo, noppo;$/;"	m	class:tetgenmesh::badface
norm2	tetgen.h	/^inline REAL tetgenmesh::norm2(REAL x, REAL y, REAL z)$/;"	f	class:tetgenmesh
nostaticfilter	tetgen.h	/^  int nostaticfilter;                                              \/\/ '-X', 0.$/;"	m	class:tetgenbehavior
nowblock	tetgen.h	/^    void **firstblock, **nowblock;$/;"	m	class:tetgenmesh::memorypool
ntime	model_module0.f90	/^integer ntime /;"	v	module:system
numarys	memman1.c	/^int numarys = 0;$/;"	v
numarys	memory.h	/^MEX int  numarys;          \/\/ Number of arrays defined$/;"	v
number_node_out	model_module0.f90	/^integer ele_tl,node_tl,dof_tl,number_node_out,/;"	v	module:system
numberofcorners	tetgen.h	/^  int numberofcorners;$/;"	m	class:tetgenio
numberofedges	tetgen.h	/^  int numberofedges;$/;"	m	class:tetgenio
numberoffacetconstraints	tetgen.h	/^  int numberoffacetconstraints;$/;"	m	class:tetgenio
numberoffacets	tetgen.h	/^  int numberoffacets;$/;"	m	class:tetgenio
numberofholes	tetgen.h	/^    int numberofholes;$/;"	m	struct:tetgenio::__anon2
numberofholes	tetgen.h	/^  int numberofholes;$/;"	m	class:tetgenio
numberofpointattributes	tetgen.h	/^  int numberofpointattributes;$/;"	m	class:tetgenio
numberofpointmtrs	tetgen.h	/^  int numberofpointmtrs;$/;"	m	class:tetgenio
numberofpoints	tetgen.h	/^  int numberofpoints;$/;"	m	class:tetgenio
numberofpolygons	tetgen.h	/^    int numberofpolygons;$/;"	m	struct:tetgenio::__anon2
numberofregions	tetgen.h	/^  int numberofregions;$/;"	m	class:tetgenio
numberofsegmentconstraints	tetgen.h	/^  int numberofsegmentconstraints;$/;"	m	class:tetgenio
numberoftetrahedra	tetgen.h	/^  int numberoftetrahedra;$/;"	m	class:tetgenio
numberoftetrahedronattributes	tetgen.h	/^  int numberoftetrahedronattributes;$/;"	m	class:tetgenio
numberoftrifaces	tetgen.h	/^  int numberoftrifaces;$/;"	m	class:tetgenio
numberofvcells	tetgen.h	/^  int numberofvcells;$/;"	m	class:tetgenio
numberofvedges	tetgen.h	/^  int numberofvedges;$/;"	m	class:tetgenio
numberofvertices	tetgen.h	/^    int numberofvertices;$/;"	m	struct:tetgenio::__anon1
numberofvfacets	tetgen.h	/^  int numberofvfacets;$/;"	m	class:tetgenio
numberofvpoints	tetgen.h	/^  int numberofvpoints;$/;"	m	class:tetgenio
numblk	visualc.h	/^_F_EXTERN_(_F_INTEGER) _ismyblk(_F_INTEGER *numblk);$/;"	v
numblks	memman1.c	/^int numblks = 0;$/;"	v
numblks	memory.h	/^MEX int  numblks;         \/\/ Global number of blocks defined$/;"	v
numdef	extvar.c	/^int   numdef = 0;           \/\/ Number of external variables defined$/;"	v
numelemattrib	tetgen.h	/^  int numelemattrib;                     \/\/ Number of tetrahedron attributes.$/;"	m	class:tetgenmesh
numofsearchdirs	tetgen.h	/^    int numofsearchdirs;$/;"	m	class:tetgenmesh::optparameters
numpointattrib	tetgen.h	/^  int numpointattrib;                          \/\/ Number of point attributes.$/;"	m	class:tetgenmesh
numprcs	memman1.c	/^int numprcs = 1;$/;"	v
numprcs	memory.h	/^MEX int  numprcs;         \/\/ Global number of processors defined$/;"	v
numrock	vistab.h	/^     &	ndatavals, numrock, vis_tabotype,$/;"	v
numsli	vis_sli.h	/^	common \/cvissli\/ numsli,vblk$/;"	v
numslice	visualc.h	/^_F_EXTERN_(_F_INTEGER) _ismyslice(_F_INTEGER *numslice);$/;"	v
nxg	memory.h	/^MEX int  nxg[MAXBLK];     \/\/ Global number of elements in the x direction$/;"	v
nyg	memory.h	/^MEX int  nyg[MAXBLK];     \/\/ Global number of elements in the y direction$/;"	v
nymap	memory.h	/^MEX PINT4 nymap;          \/\/ Pointer to NYMAP() in LAYOUT.H$/;"	v
nzg	memory.h	/^MEX int  nzg[MAXBLK];     \/\/ Global number of elements in the z direction$/;"	v
o2edgelist	tetgen.h	/^  int *o2edgelist;$/;"	m	class:tetgenio
o2facelist	tetgen.h	/^  int *o2facelist;$/;"	m	class:tetgenio
object	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	m	class:tetgenbehavior	typeref:enum:tetgenbehavior::objecttype
objectbytes	tetgen.h	/^    int objectbytes;$/;"	m	class:tetgenmesh::arraypool
objects	tetgen.h	/^    long objects;$/;"	m	class:tetgenmesh::arraypool
objectsperblock	tetgen.h	/^    int objectsperblock;$/;"	m	class:tetgenmesh::arraypool
objectsperblockmark	tetgen.h	/^    int objectsperblockmark;$/;"	m	class:tetgenmesh::arraypool
objecttype	tetgen.h	/^  enum objecttype {NODES, POLY, OFF, PLY, STL, MEDIT, VTK, MESH} object;$/;"	g	class:tetgenbehavior
one	model_module0.f90	/^   integer, parameter :: one /;"	v	module:truth
one_d	model_module0.f90	/^   real(kind=double), parameter :: one_d /;"	v	module:truth
operator =	tetgen.h	/^    face& operator=(const face& s) {$/;"	f	class:tetgenmesh::face
operator =	tetgen.h	/^    triface& operator=(const triface& t) {$/;"	f	class:tetgenmesh::triface
oppo	tetgen.h	/^inline tetgenmesh::point tetgenmesh:: oppo(triface& t) {$/;"	f	class:tetgenmesh
oppopivot	tetgen.h	/^  static int orgpivot[12], destpivot[12], apexpivot[12], oppopivot[12];$/;"	m	class:tetgenmesh
optlevel	tetgen.h	/^  int optlevel;                                                    \/\/ '-O', 2.$/;"	m	class:tetgenbehavior
optmaxdihedral	tetgen.h	/^  REAL optmaxdihedral;                                               \/\/ 165.0.$/;"	m	class:tetgenbehavior
optminslidihed	tetgen.h	/^  REAL optminslidihed;                                               \/\/ 179.0.  $/;"	m	class:tetgenbehavior
optminsmtdihed	tetgen.h	/^  REAL optminsmtdihed;                                               \/\/ 179.0.$/;"	m	class:tetgenbehavior
optparameters	tetgen.h	/^    optparameters() {$/;"	f	class:tetgenmesh::optparameters
optparameters	tetgen.h	/^  class optparameters {$/;"	c	class:tetgenmesh
optscheme	tetgen.h	/^  int optscheme;                                                   \/\/ '-O', 7.$/;"	m	class:tetgenbehavior
order	tetgen.h	/^  int order;                                                       \/\/ '-o', 1.$/;"	m	class:tetgenbehavior
org	tetgen.h	/^inline tetgenmesh::point tetgenmesh::org(triface& t) {$/;"	f	class:tetgenmesh
orgpivot	tetgen.h	/^  static int orgpivot[12], destpivot[12], apexpivot[12], oppopivot[12];$/;"	m	class:tetgenmesh
orien	model_module0.f90	/^    integer orien$/;"	k	type:bnd_face
outfilename	tetgen.h	/^  char outfilename[1024];$/;"	m	class:tetgenbehavior
p0	model_module0.f90	/^real(kind=double) wght_8(8),face_wght_4(4),flux,flux_fld,p0,/;"	v	module:model_type
par_b	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
par_x	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
parcsr_A	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
parentpt	tetgen.h	/^    point parentpt;$/;"	m	class:tetgenmesh::insertvertexflags
parse_commandline	tetgen.h	/^  bool parse_commandline(char *switches) {$/;"	f	class:tetgenbehavior
pathblock	tetgen.h	/^    void **pathblock;$/;"	m	class:tetgenmesh::memorypool
pathitem	tetgen.h	/^    void *pathitem;$/;"	m	class:tetgenmesh::memorypool
pathitemsleft	tetgen.h	/^    int  pathitemsleft;$/;"	m	class:tetgenmesh::memorypool
pinfect	tetgen.h	/^inline void tetgenmesh::pinfect(point pt) {$/;"	f	class:tetgenmesh
pinfected	tetgen.h	/^inline bool tetgenmesh::pinfected(point pt) {$/;"	f	class:tetgenmesh
plastic_model	model_module0.f90	/^integer plastic_model,/;"	v	module:system
plc	tetgen.h	/^  int plc;                                                         \/\/ '-p', 0.$/;"	m	class:tetgenbehavior
pmarktest	tetgen.h	/^inline void tetgenmesh::pmarktest(point pt) {$/;"	f	class:tetgenmesh
pmarktest2	tetgen.h	/^inline void tetgenmesh::pmarktest2(point pt) {$/;"	f	class:tetgenmesh
pmarktest2ed	tetgen.h	/^inline bool tetgenmesh::pmarktest2ed(point pt) {$/;"	f	class:tetgenmesh
pmarktest3	tetgen.h	/^inline void tetgenmesh::pmarktest3(point pt) {$/;"	f	class:tetgenmesh
pmarktest3ed	tetgen.h	/^inline bool tetgenmesh::pmarktest3ed(point pt) {$/;"	f	class:tetgenmesh
pmarktested	tetgen.h	/^inline bool tetgenmesh::pmarktested(point pt) {$/;"	f	class:tetgenmesh
pnode	model_module0.f90	/^integer prpty_grp_sld,tl_load_point,cg_tl_node,pnode$/;"	v	module:system
pnode_cn	model_module0.f90	/^integer, allocatable:: zero_dch(:),node_st_dof(:),indx(:),dirbcnode(:),pnode_cn(/;"	v	module:system
pnt	extvar.c	/^void  *pnt[MAXEXT];         \/\/ External variable base addresses$/;"	v
pntmmod_	memman1.c	/^FORTSUB  pntmmod_ (PINT4 modacta, PINT4 flomoda, PINT4 modblka)$/;"	f
pntmmodmb_	memman1.c	/^FORTSUB  pntmmodmb_ (PCHAR mb, PINT4 porohexvar,$/;"	f
pntvar_	memman1.c	/^FORTSUB pntvar_ (PADD varb, PINT4 arynum, PINT4 err)$/;"	f
pntvarr4_	memman1.c	/^FORTSUB pntvarr4_ (PADD varb, PINT4 arynum, PINT4 err)$/;"	f
pntvarr8_	memman1.c	/^FORTSUB pntvarr8_ (PADD varb, PINT4 arynum, PINT4 err)$/;"	f
point	tetgen.h	/^  typedef REAL *point;$/;"	t	class:tetgenmesh
point	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	s
point2bgmtet	tetgen.h	/^inline tetgenmesh::tetrahedron tetgenmesh::point2bgmtet(point pt) {$/;"	f	class:tetgenmesh
point2ppt	tetgen.h	/^inline tetgenmesh::point tetgenmesh::point2ppt(point pt) {$/;"	f	class:tetgenmesh
point2sh	tetgen.h	/^inline tetgenmesh::shellface tetgenmesh::point2sh(point pt) {$/;"	f	class:tetgenmesh
point2shorg	tetgen.h	/^inline void tetgenmesh::point2shorg(point pa, face& searchsh)$/;"	f	class:tetgenmesh
point2simindex	tetgen.h	/^  int point2simindex;         \/\/ Index to find a simplex adjacent to a point.$/;"	m	class:tetgenmesh
point2tet	tetgen.h	/^inline tetgenmesh::tetrahedron tetgenmesh::point2tet(point pt) {$/;"	f	class:tetgenmesh
point2tetorg	tetgen.h	/^inline void tetgenmesh::point2tetorg(point pa, triface& searchtet)$/;"	f	class:tetgenmesh
point_coord	utility0.f90	/^subroutine point_coord(/;"	s
pointattributelist	tetgen.h	/^  REAL *pointattributelist;$/;"	m	class:tetgenio
pointgeomtag	tetgen.h	/^inline int tetgenmesh::pointgeomtag(point pt) { $/;"	f	class:tetgenmesh
pointgeomuv	tetgen.h	/^inline REAL tetgenmesh::pointgeomuv(point pt, int i) {$/;"	f	class:tetgenmesh
pointlist	tetgen.h	/^  REAL *pointlist;$/;"	m	class:tetgenio
pointmark	tetgen.h	/^inline int tetgenmesh::pointmark(point pt) { $/;"	f	class:tetgenmesh
pointmarkerlist	tetgen.h	/^  int  *pointmarkerlist;$/;"	m	class:tetgenio
pointmarkindex	tetgen.h	/^  int pointmarkindex;            \/\/ Index to find boundary marker of a point.$/;"	m	class:tetgenmesh
pointmtrindex	tetgen.h	/^  int pointmtrindex;           \/\/ Index to find the metric tensor of a point.$/;"	m	class:tetgenmesh
pointmtrlist	tetgen.h	/^  REAL *pointmtrlist;$/;"	m	class:tetgenio
pointparam	tetgen.h	/^  } pointparam;$/;"	t	class:tetgenio	typeref:struct:tetgenio::__anon5
pointparamindex	tetgen.h	/^  int pointparamindex;       \/\/ Index to find the u,v coordinates of a point.$/;"	m	class:tetgenmesh
pointparamlist	tetgen.h	/^  pointparam *pointparamlist;$/;"	m	class:tetgenio
points	tetgen.h	/^  memorypool *tetrahedrons, *subfaces, *subsegs, *points;$/;"	m	class:tetgenmesh
points2grid	visual4.c	/^void points2grid($/;"	f
pointtype	tetgen.h	/^inline enum tetgenmesh::verttype tetgenmesh::pointtype(point pt) {$/;"	f	class:tetgenmesh
polygon	tetgen.h	/^  } polygon;$/;"	t	class:tetgenio	typeref:struct:tetgenio::__anon1
polygonlist	tetgen.h	/^    polygon *polygonlist;$/;"	m	struct:tetgenio::__anon2
pore_pressure	model_module0.f90	/^    real(kind=double) pore_pressure$/;"	k	type:element
porohexvisvar	memory.h	/^MEX PINT4 porohexvisvar;   \/\/ Pointer to # of porohex vis. variables$/;"	v
post_prcss2	post_prcss0.f90	/^subroutine post_prcss2(/;"	s
prcblk	memory.h	/^MEX int  prcblk[MAXBLK][MAXPRC];  \/\/ Proc global flag for ownership in block$/;"	v
prcmap	memory.h	/^MEX PINT2 prcmap;         \/\/ Pointer to PRCMAP() in LAYOUT.H$/;"	v
pressure	model_module0.f90	/^    integer pressure$/;"	k	type:bnd_face
pressure_value	model_module0.f90	/^    real(kind=double) pressure_value$/;"	k	type:bnd_face
projection	utility0.f90	/^subroutine projection(/;"	s
projections_	memman2.c	/^FORTSUB projections_ (FORTSUB (*subadd) (), PINT4 d)$/;"	f
prpty_grp_sld	model_module0.f90	/^integer prpty_grp_sld,/;"	v	module:system
prpty_sld	model_module0.f90	/^    real(kind=double), pointer :: prpty_sld(/;"	k	type:material
psc	tetgen.h	/^  int psc;                                                         \/\/ '-s', 0.$/;"	m	class:tetgenbehavior
pts	visualc.h	/^  RECT *pts ;$/;"	m	struct:slicelist
puninfect	tetgen.h	/^inline void tetgenmesh::puninfect(point pt) {$/;"	f	class:tetgenmesh
punmarktest	tetgen.h	/^inline void tetgenmesh::punmarktest(point pt) {$/;"	f	class:tetgenmesh
punmarktest2	tetgen.h	/^inline void tetgenmesh::punmarktest2(point pt) {$/;"	f	class:tetgenmesh
punmarktest3	tetgen.h	/^inline void tetgenmesh::punmarktest3(point pt) {$/;"	f	class:tetgenmesh
quality	tetgen.h	/^  int quality;                                                     \/\/ '-q', 0.$/;"	m	class:tetgenbehavior
quiet	tetgen.h	/^  int quiet;                                                       \/\/ '-Q', 0.$/;"	m	class:tetgenbehavior
ralcgea_	memman2.c	/^FORTSUB ralcgea_ (PINT4 blknum, PINT4 dnxh, PINT4 dnyh,$/;"	f
randomseed	tetgen.h	/^  unsigned long randomseed;                    \/\/ Current random number seed.$/;"	m	class:tetgenmesh
recentsh	tetgen.h	/^  face recentsh;$/;"	m	class:tetgenmesh
recenttet	tetgen.h	/^  triface recenttet;$/;"	m	class:tetgenmesh
rectcells	visualc.h	/^typedef struct rectcells { int i,j,k,index;} RECT ;$/;"	s
rectlist	visualc.h	/^typedef struct rectlist  {$/;"	s
refine	tetgen.h	/^  int refine;                                                      \/\/ '-r', 0.$/;"	m	class:tetgenbehavior
refineflag	tetgen.h	/^    int refineflag; \/\/ 0, 1, 2, 3$/;"	m	class:tetgenmesh::insertvertexflags
refinesh	tetgen.h	/^    face refinesh;$/;"	m	class:tetgenmesh::insertvertexflags
refinetet	tetgen.h	/^    triface refinetet;$/;"	m	class:tetgenmesh::insertvertexflags
reflevel	tetgen.h	/^  int reflevel;                                                    \/\/ '-D', 3.$/;"	m	class:tetgenbehavior
regionattrib	tetgen.h	/^  int regionattrib;                                                \/\/ '-A', 0.$/;"	m	class:tetgenbehavior
regionlist	tetgen.h	/^  REAL *regionlist;$/;"	m	class:tetgenio
rejflag	tetgen.h	/^    int rejflag, chkencflag, cdtflag;$/;"	m	class:tetgenmesh::insertvertexflags
remove_large_angle	tetgen.h	/^    int remove_large_angle; \/\/ Remove a large dihedral angle at edge.$/;"	m	class:tetgenmesh::flipconstraints
remove_ndelaunay_edge	tetgen.h	/^    int remove_ndelaunay_edge; \/\/ Remove a non-Delaunay edge.$/;"	m	class:tetgenmesh::flipconstraints
remvert	tetgen.h	/^    point remvert; \/\/ A vertex to be removed.$/;"	m	class:tetgenmesh::flipconstraints
required	unitsex.h	/^C         required, a correction similar to that in Note 1 must be made.  The$/;"	v
residue	model_module0.f90	/^real(kind=double), allocatable:: gstiff(:),residue(/;"	v	module:system
respectbdflag	tetgen.h	/^    int splitbdflag, validflag, respectbdflag;$/;"	m	class:tetgenmesh::insertvertexflags
reversetetori	tetgen.h	/^  int reversetetori;                                               \/\/ '-R', 0.$/;"	m	class:tetgenbehavior
rtol	model_module0.f90	/^   real(kind=double), parameter :: rtol /;"	v	module:control
samples	tetgen.h	/^  long samples;               \/\/ Number of random samples for point location.$/;"	m	class:tetgenmesh
sapex	tetgen.h	/^inline tetgenmesh::point tetgenmesh::sapex(face& s) $/;"	f	class:tetgenmesh
sapexpivot	tetgen.h	/^  static int sorgpivot [6], sdestpivot[6], sapexpivot[6];$/;"	m	class:tetgenmesh
sbond	tetgen.h	/^inline void tetgenmesh::sbond(face& s1, face& s2) $/;"	f	class:tetgenmesh
sbond1	tetgen.h	/^inline void tetgenmesh::sbond1(face& s1, face& s2) $/;"	f	class:tetgenmesh
sbowywat	tetgen.h	/^    int sloc, sbowywat;$/;"	m	class:tetgenmesh::insertvertexflags
sc	model_module0.f90	/^integer node_dof,b_dof,ele_dof,sc,/;"	v	module:model_type
scale_point	model_module0.f90	/^real load_scale,load_factor,deltaT,time_past,scale_point,/;"	v	module:system
scrat1mod	scrat1.f	/^      MODULE scrat1mod$/;"	m
sdecode	tetgen.h	/^inline void tetgenmesh::sdecode(shellface sptr, face& s) {$/;"	f	class:tetgenmesh
sdest	tetgen.h	/^inline tetgenmesh::point tetgenmesh::sdest(face& s) $/;"	f	class:tetgenmesh
sdestpivot	tetgen.h	/^  static int sorgpivot [6], sdestpivot[6], sapexpivot[6];$/;"	m	class:tetgenmesh
sdissolve	tetgen.h	/^inline void tetgenmesh::sdissolve(face& s)$/;"	f	class:tetgenmesh
searchstep	tetgen.h	/^    REAL searchstep;$/;"	m	class:tetgenmesh::optparameters
seg	tetgen.h	/^    point seg[2];  \/\/ A constraining edge to be recovered.$/;"	m	class:tetgenmesh::flipconstraints
segmentconstraintlist	tetgen.h	/^  REAL *segmentconstraintlist;$/;"	m	class:tetgenio
segmentendpointslist	tetgen.h	/^  point *segmentendpointslist;$/;"	m	class:tetgenmesh
sencode	tetgen.h	/^inline tetgenmesh::shellface tetgenmesh::sencode(face& s) {$/;"	f	class:tetgenmesh
sencode2	tetgen.h	/^inline tetgenmesh::shellface tetgenmesh::sencode2(shellface *sh, int shver) {$/;"	f	class:tetgenmesh
senext	tetgen.h	/^inline void tetgenmesh::senext(face& s1, face& s2) $/;"	f	class:tetgenmesh
senext2	tetgen.h	/^inline void tetgenmesh::senext2(face& s1, face& s2) $/;"	f	class:tetgenmesh
senext2self	tetgen.h	/^inline void tetgenmesh::senext2self(face& s) $/;"	f	class:tetgenmesh
senextself	tetgen.h	/^inline void tetgenmesh::senextself(face& s) $/;"	f	class:tetgenmesh
sesym	tetgen.h	/^inline void tetgenmesh::sesym(face& s1, face& s2) $/;"	f	class:tetgenmesh
sesymself	tetgen.h	/^inline void tetgenmesh::sesymself(face& s) $/;"	f	class:tetgenmesh
setapex	tetgen.h	/^inline void tetgenmesh:: setapex(triface& t, point p) {$/;"	f	class:tetgenmesh
setareabound	tetgen.h	/^inline void tetgenmesh::setareabound(face& s, REAL value) $/;"	f	class:tetgenmesh
setdest	tetgen.h	/^inline void tetgenmesh:: setdest(triface& t, point p) {$/;"	f	class:tetgenmesh
setelemattribute	tetgen.h	/^inline void tetgenmesh::setelemattribute(tetrahedron* ptr, int attnum, $/;"	f	class:tetgenmesh
setelemcounter	tetgen.h	/^inline void tetgenmesh::setelemcounter(triface& t, int value) {$/;"	f	class:tetgenmesh
setelemindex	tetgen.h	/^inline void tetgenmesh::setelemindex(tetrahedron* ptr, int value) {$/;"	f	class:tetgenmesh
setelemmarker	tetgen.h	/^inline void tetgenmesh::setelemmarker(tetrahedron* ptr, int value) {$/;"	f	class:tetgenmesh
setfacetindex	tetgen.h	/^inline void tetgenmesh::setfacetindex(face& s, int value)$/;"	f	class:tetgenmesh
setoppo	tetgen.h	/^inline void tetgenmesh:: setoppo(triface& t, point p) {$/;"	f	class:tetgenmesh
setorg	tetgen.h	/^inline void tetgenmesh:: setorg(triface& t, point p) {$/;"	f	class:tetgenmesh
setpoint2bgmtet	tetgen.h	/^inline void tetgenmesh::setpoint2bgmtet(point pt, tetrahedron value) {$/;"	f	class:tetgenmesh
setpoint2ppt	tetgen.h	/^inline void tetgenmesh::setpoint2ppt(point pt, point value) {$/;"	f	class:tetgenmesh
setpoint2sh	tetgen.h	/^inline void tetgenmesh::setpoint2sh(point pt, shellface value) {$/;"	f	class:tetgenmesh
setpoint2tet	tetgen.h	/^inline void tetgenmesh::setpoint2tet(point pt, tetrahedron value) {$/;"	f	class:tetgenmesh
setpointgeomtag	tetgen.h	/^inline void tetgenmesh::setpointgeomtag(point pt, int value) {$/;"	f	class:tetgenmesh
setpointgeomuv	tetgen.h	/^inline void tetgenmesh::setpointgeomuv(point pt, int i, REAL value) {$/;"	f	class:tetgenmesh
setpointinsradius	tetgen.h	/^inline void tetgenmesh::setpointinsradius(point pt, REAL value)$/;"	f	class:tetgenmesh
setpointmark	tetgen.h	/^inline void tetgenmesh::setpointmark(point pt, int value) {$/;"	f	class:tetgenmesh
setpointtype	tetgen.h	/^inline void tetgenmesh::setpointtype(point pt, enum verttype value) {$/;"	f	class:tetgenmesh
setsapex	tetgen.h	/^inline void tetgenmesh::setsapex(face& s, point pointptr) $/;"	f	class:tetgenmesh
setsdest	tetgen.h	/^inline void tetgenmesh::setsdest(face& s, point pointptr) $/;"	f	class:tetgenmesh
setshellmark	tetgen.h	/^inline void tetgenmesh::setshellmark(face& s, int value) $/;"	f	class:tetgenmesh
setshvertices	tetgen.h	2743;"	d
setslices	visslice.f	/^	subroutine setslices(/;"	s
setsorg	tetgen.h	/^inline void tetgenmesh::setsorg(face& s, point pointptr) $/;"	f	class:tetgenmesh
setup_gip	pre_prcss0.f90	/^subroutine setup_gip$/;"	s
setvertices	tetgen.h	2473;"	d
setvolumebound	tetgen.h	/^inline void tetgenmesh::setvolumebound(tetrahedron* ptr, REAL value) {$/;"	f	class:tetgenmesh
sh	tetgen.h	/^    shellface *sh;$/;"	m	class:tetgenmesh::face
shap_g	hexa_NB0.f90	/^subroutine shap_g(/;"	s
shellface	tetgen.h	/^  typedef REAL **shellface;$/;"	t	class:tetgenmesh
shellfaceperblock	tetgen.h	/^  int shellfaceperblock;                                        \/\/ '-x', 2044.$/;"	m	class:tetgenbehavior
shellmark	tetgen.h	/^inline int tetgenmesh::shellmark(face& s) $/;"	f	class:tetgenmesh
shmarkindex	tetgen.h	/^  int shmarkindex;             \/\/ Index to find boundary marker of a subface.$/;"	m	class:tetgenmesh
shver	tetgen.h	/^    int shver; \/\/ Range from 0 to 5.$/;"	m	class:tetgenmesh::face
simfmfevisvar	memory.h	/^MEX PINT4 simfmfevisvar;   \/\/ Pointer to # of single phase flow vis. variables$/;"	v
sinfect	tetgen.h	/^inline void tetgenmesh::sinfect(face& s) $/;"	f	class:tetgenmesh
sinfected	tetgen.h	/^inline bool tetgenmesh::sinfected(face& s) $/;"	f	class:tetgenmesh
single	model_module0.f90	/^   integer, parameter :: single /;"	v	module:truth
sint3D_with_ghosts	visualc.h	/^inline static _F_REAL_8 sint3D_with_ghosts(			$/;"	f
sint3D_without_ghosts	visualc.h	/^inline static _F_REAL_8 sint3D_without_ghosts($/;"	f
sint3Dnonuniform_with_ghosts	visualc.h	/^inline static _F_REAL_8 sint3Dnonuniform_with_ghosts(			$/;"	f
sizeoftensor	tetgen.h	/^  int sizeoftensor;                     \/\/ Number of REALs per metric tensor.$/;"	m	class:tetgenmesh
sld_fld_tmp	model_module0.f90	/^integer int_face_tl,linear,ynelem,mstep,sld_fld_tmp$/;"	v	module:system
sld_prp_itm	model_module0.f90	/^    integer sld_prp_itm$/;"	k	type:material
slicelist	visualc.h	/^typedef struct slicelist  {$/;"	s
sloc	tetgen.h	/^    int sloc, sbowywat;$/;"	m	class:tetgenmesh::insertvertexflags
smarktest	tetgen.h	/^inline void tetgenmesh::smarktest(face& s) $/;"	f	class:tetgenmesh
smarktest2	tetgen.h	/^inline void tetgenmesh::smarktest2(face& s) $/;"	f	class:tetgenmesh
smarktest2ed	tetgen.h	/^inline bool tetgenmesh::smarktest2ed(face& s) $/;"	f	class:tetgenmesh
smarktest3	tetgen.h	/^inline void tetgenmesh::smarktest3(face& s) $/;"	f	class:tetgenmesh
smarktest3ed	tetgen.h	/^inline bool tetgenmesh::smarktest3ed(face& s) $/;"	f	class:tetgenmesh
smarktested	tetgen.h	/^inline bool tetgenmesh::smarktested(face& s) $/;"	f	class:tetgenmesh
smlen	tetgen.h	/^    REAL smlen; \/\/ for useinsertradius.$/;"	m	class:tetgenmesh::insertvertexflags
smlenflag	tetgen.h	/^    int smlenflag; \/\/ for useinsertradius.$/;"	m	class:tetgenmesh::insertvertexflags
smthiter	tetgen.h	/^    int smthiter; \/\/ Performed iterations.$/;"	m	class:tetgenmesh::optparameters
snextpivot	tetgen.h	/^  static int snextpivot[6];$/;"	m	class:tetgenmesh
solver	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
sorg	tetgen.h	/^inline tetgenmesh::point tetgenmesh::sorg(face& s) $/;"	f	class:tetgenmesh
sorgpivot	tetgen.h	/^  static int sorgpivot [6], sdestpivot[6], sapexpivot[6];$/;"	m	class:tetgenmesh
spivot	tetgen.h	/^inline void tetgenmesh::spivot(face& s1, face& s2) $/;"	f	class:tetgenmesh
spivotself	tetgen.h	/^inline void tetgenmesh::spivotself(face& s) $/;"	f	class:tetgenmesh
splitbdflag	tetgen.h	/^    int splitbdflag, validflag, respectbdflag;$/;"	m	class:tetgenmesh::insertvertexflags
ss	tetgen.h	/^    face ss;$/;"	m	class:tetgenmesh::badface
ssbond	tetgen.h	/^inline void tetgenmesh::ssbond(face& s, face& edge) $/;"	f	class:tetgenmesh
ssbond1	tetgen.h	/^inline void tetgenmesh::ssbond1(face& s, face& edge) $/;"	f	class:tetgenmesh
ssdissolve	tetgen.h	/^inline void tetgenmesh::ssdissolve(face& s) $/;"	f	class:tetgenmesh
sspivot	tetgen.h	/^inline void tetgenmesh::sspivot(face& s, face& edge) $/;"	f	class:tetgenmesh
sstbond1	tetgen.h	/^inline void tetgenmesh::sstbond1(face& s, triface& t) $/;"	f	class:tetgenmesh
sstdissolve1	tetgen.h	/^inline void tetgenmesh::sstdissolve1(face& s) $/;"	f	class:tetgenmesh
sstol	model_module0.f90	/^   real(kind=double), parameter :: sstol /;"	v	module:control
sstpivot1	tetgen.h	/^inline void tetgenmesh::sstpivot1(face& s, triface& t) $/;"	f	class:tetgenmesh
st_facref_count	tetgen.h	/^  long st_segref_count, st_facref_count, st_volref_count;  \/\/ Steiner points.$/;"	m	class:tetgenmesh
st_segref_count	tetgen.h	/^  long st_segref_count, st_facref_count, st_volref_count;  \/\/ Steiner points.$/;"	m	class:tetgenmesh
st_volref_count	tetgen.h	/^  long st_segref_count, st_facref_count, st_volref_count;  \/\/ Steiner points.$/;"	m	class:tetgenmesh
stbo	unitsex.h	/^C Note 3: Some physical models (eg. black oil model) use stbo, stbw, and mscf$/;"	v
stbondtbl	tetgen.h	/^  static int tsbondtbl[12][6], stbondtbl[12][6];$/;"	m	class:tetgenmesh
stbw	unitsex.h	/^C Note 3: Some physical models (eg. black oil model) use stbo, stbw, and mscf$/;"	v
stdissolve	tetgen.h	/^inline void tetgenmesh::stdissolve(face& s) $/;"	f	class:tetgenmesh
steinerleft	tetgen.h	/^  int steinerleft;                                                 \/\/ '-S', 0.$/;"	m	class:tetgenbehavior
steinerleft	tetgen.h	/^  long steinerleft;                 \/\/ Number of Steiner points not yet used.$/;"	m	class:tetgenmesh
stpivot	tetgen.h	/^inline void tetgenmesh::stpivot(face& s, triface& t) $/;"	f	class:tetgenmesh
stpivottbl	tetgen.h	/^  static int tspivottbl[12][6], stpivottbl[12][6];$/;"	m	class:tetgenmesh
stress_invariants	utility0.f90	/^subroutine stress_invariants(/;"	s
stress_prediction	dmat_ep.f90	/^subroutine stress_prediction(/;"	s
strss_dof	model_module0.f90	/^integer node_dof,b_dof,ele_dof,sc,ngauss,strss_dof,/;"	v	module:model_type
subfaces	tetgen.h	/^  memorypool *tetrahedrons, *subfaces, *subsegs, *points;$/;"	m	class:tetgenmesh
subfacstack	tetgen.h	/^  arraypool *subsegstack, *subfacstack, *subvertstack;$/;"	m	class:tetgenmesh
subsegs	tetgen.h	/^  memorypool *tetrahedrons, *subfaces, *subsegs, *points;$/;"	m	class:tetgenmesh
subsegstack	tetgen.h	/^  arraypool *subsegstack, *subfacstack, *subvertstack;$/;"	m	class:tetgenmesh
subvertstack	tetgen.h	/^  arraypool *subsegstack, *subfacstack, *subvertstack;$/;"	m	class:tetgenmesh
suninfect	tetgen.h	/^inline void tetgenmesh::suninfect(face& s) $/;"	f	class:tetgenmesh
sunmarktest	tetgen.h	/^inline void tetgenmesh::sunmarktest(face& s) $/;"	f	class:tetgenmesh
sunmarktest2	tetgen.h	/^inline void tetgenmesh::sunmarktest2(face& s) $/;"	f	class:tetgenmesh
sunmarktest3	tetgen.h	/^inline void tetgenmesh::sunmarktest3(face& s) $/;"	f	class:tetgenmesh
sys_node	model_module0.f90	/^module sys_node$/;"	m
system	model_module0.f90	/^module system$/;"	m
t	wells.h	/^C  KWPERM(t)    = MINIMUM INJECTION RELATIVE PERMEABILITY KEY FOR WELL t$/;"	v
t	wells.h	/^C  QRESID(t) = RESIDUAL FOR RATE EQUATION OF WELL t$/;"	v
tabname	vistab.h	/^     &	tabname, tabx,taby$/;"	v
tabx	vistab.h	/^     &	tabname, tabx,taby$/;"	v
tag	tetgen.h	/^    int tag;$/;"	m	struct:tetgenio::__anon5
tecbinblk	visual9.f	/^      TYPE tecbinblk$/;"	t	module:tecbinmod
tecbinmod	visual9.f	/^      MODULE tecbinmod$/;"	m
tecexists	model_module0.f90	/^logical :: tecexists /;"	v	module:system
terminatetetgen	tetgen.h	/^inline void terminatetetgen(tetgenmesh *m, int x)$/;"	f
tet	tetgen.h	/^    tetrahedron *tet;$/;"	m	class:tetgenmesh::triface
tet2segpool	tetgen.h	/^  memorypool *tet2subpool, *tet2segpool;$/;"	m	class:tetgenmesh
tet2subpool	tetgen.h	/^  memorypool *tet2subpool, *tet2segpool;$/;"	m	class:tetgenmesh
tetgenH	tetgen.h	18;"	d
tetgenbehavior	tetgen.h	/^  tetgenbehavior()$/;"	f	class:tetgenbehavior
tetgenbehavior	tetgen.h	/^class tetgenbehavior {$/;"	c
tetgenio	tetgen.h	/^  tetgenio() {initialize();}$/;"	f	class:tetgenio
tetgenio	tetgen.h	/^class tetgenio {$/;"	c
tetgenmesh	tetgen.h	/^  tetgenmesh()$/;"	f	class:tetgenmesh
tetgenmesh	tetgen.h	/^class tetgenmesh {$/;"	c
tetprism_vol_sum	tetgen.h	/^    REAL tetprism_vol_sum;$/;"	m	class:tetgenmesh::flipconstraints
tetprism_vol_sum	tetgen.h	/^  REAL tetprism_vol_sum;   \/\/ The total volume of tetrahedral-prisms (in 4D).$/;"	m	class:tetgenmesh
tetraVol	fcns.f	/^      real*8 function tetraVol(/;"	f
tetrahedraperblock	tetgen.h	/^  int tetrahedraperblock;                                       \/\/ '-x', 8188.$/;"	m	class:tetgenbehavior
tetrahedron	tetgen.h	/^  typedef REAL **tetrahedron;$/;"	t	class:tetgenmesh
tetrahedronattributelist	tetgen.h	/^  REAL *tetrahedronattributelist;$/;"	m	class:tetgenio
tetrahedronlist	tetgen.h	/^  int  *tetrahedronlist;$/;"	m	class:tetgenio
tetrahedrons	tetgen.h	/^  memorypool *tetrahedrons, *subfaces, *subsegs, *points;$/;"	m	class:tetgenmesh
tetrahedronvolumelist	tetgen.h	/^  REAL *tetrahedronvolumelist;$/;"	m	class:tetgenio
tetunsuitable	tetgen.h	/^  TetSizeFunc tetunsuitable;$/;"	m	class:tetgenio
three	model_module0.f90	/^   integer, parameter :: three /;"	v	module:truth
three_d	model_module0.f90	/^   real(kind=double), parameter :: three_d /;"	v	module:truth
time_current	model_module0.f90	/^real(kind=double) L_2_u,L_2_delta_u,time_current$/;"	v	module:model_type
time_past	model_module0.f90	/^real load_scale,load_factor,deltaT,time_past,/;"	v	module:system
tiny_u	model_module0.f90	/^real(kind=double), allocatable:: u_n(:),u(:),delta_u(:),tiny_u(/;"	v	module:system
tl_0_dch	model_module0.f90	/^integer tl_0_dch,/;"	v	module:system
tl_crack_bdface	model_module0.f90	/^integer tl_cracked_face,tl_crack_bdface,/;"	v	module:system
tl_cracked_face	model_module0.f90	/^integer tl_cracked_face,/;"	v	module:system
tl_load	model_module0.f90	/^real(kind=double), allocatable:: load_cnst(:),delta_load_naut(:),tl_load(/;"	v	module:system
tl_load_point	model_module0.f90	/^integer prpty_grp_sld,tl_load_point,/;"	v	module:system
tl_nb_elem	model_module0.f90	/^    integer tl_nb_elem /;"	k	type:node_obj
tl_nb_node	model_module0.f90	/^    integer tl_nb_node /;"	k	type:node_obj
tl_node	model_module0.f90	/^    integer tl_node$/;"	k	type:element
tl_non_zeros	model_module0.f90	/^integer tl_0_dch,dirnode,beta_zero,tl_non_zeros,/;"	v	module:system
tl_pressured_face	model_module0.f90	/^integer flag_cpl,flag_gravity,flag_initial,flag_solve,tl_pressured_face,/;"	v	module:system
tl_traction_face	model_module0.f90	/^integer flag_cpl,flag_gravity,flag_initial,flag_solve,tl_pressured_face,tl_traction_face$/;"	v	module:system
toparray	tetgen.h	/^    char **toparray;$/;"	m	class:tetgenmesh::arraypool
toparraylen	tetgen.h	/^    int toparraylen;$/;"	m	class:tetgenmesh::arraypool
total_frac_elem	model_module0.f90	/^integer tl_cracked_face,tl_crack_bdface,total_frac_node,total_frac_elem$/;"	v	module:system
total_frac_interior_node	model_module0.f90	/^integer total_node_ipars,total_frac_interior_node$/;"	v	module:system
total_frac_node	model_module0.f90	/^integer tl_cracked_face,tl_crack_bdface,total_frac_node,/;"	v	module:system
total_node_ipars	model_module0.f90	/^integer total_node_ipars,/;"	v	module:system
totalmemory	tetgen.h	/^    unsigned long totalmemory;$/;"	m	class:tetgenmesh::arraypool
totalworkmemory	tetgen.h	/^  unsigned long totalworkmemory;      \/\/ Total memory used by working arrays.$/;"	m	class:tetgenmesh
traction	model_module0.f90	/^    real(kind=double) traction(/;"	k	type:bnd_face
transferdata_	memman2.c	/^FORTSUB transferdata_ (FORTSUB (*subadd) (), PINT4 d)$/;"	f
transferhetero_	memman2.c	/^FORTSUB transferhetero_ (FORTSUB (*subadd) (), PINT4 d)$/;"	f
transgc	tetgen.h	/^  int  transgc[8][3][8], tsb1mod3[8];$/;"	m	class:tetgenmesh
triface	tetgen.h	/^    triface() : tet(0), ver(0) {}$/;"	f	class:tetgenmesh::triface
triface	tetgen.h	/^  class triface {$/;"	c	class:tetgenmesh
trifacelist	tetgen.h	/^  int *trifacelist;$/;"	m	class:tetgenio
trifacemarkerlist	tetgen.h	/^  int *trifacemarkerlist;$/;"	m	class:tetgenio
trimblanks	readdatc.c	/^static void trimblanks (char *source)$/;"	f	file:
trimblanks	visualc.h	/^inline static void trimblanks( char *source )$/;"	f
truth	model_module0.f90	/^module truth /;"	m
tsb1mod3	tetgen.h	/^  int  transgc[8][3][8], tsb1mod3[8];$/;"	m	class:tetgenmesh
tsbond	tetgen.h	/^inline void tetgenmesh::tsbond(triface& t, face& s)$/;"	f	class:tetgenmesh
tsbondtbl	tetgen.h	/^  static int tsbondtbl[12][6], stbondtbl[12][6];$/;"	m	class:tetgenmesh
tsdissolve	tetgen.h	/^inline void tetgenmesh::tsdissolve(triface& t) $/;"	f	class:tetgenmesh
tspivot	tetgen.h	/^inline void tetgenmesh::tspivot(triface& t, face& s) $/;"	f	class:tetgenmesh
tspivottbl	tetgen.h	/^  static int tspivottbl[12][6], stpivottbl[12][6];$/;"	m	class:tetgenmesh
tssbond1	tetgen.h	/^inline void tetgenmesh::tssbond1(triface& t, face& s)$/;"	f	class:tetgenmesh
tssdissolve1	tetgen.h	/^inline void tetgenmesh::tssdissolve1(triface& t)$/;"	f	class:tetgenmesh
tsspivot1	tetgen.h	/^inline void tetgenmesh::tsspivot1(triface& t, face& s)$/;"	f	class:tetgenmesh
tt	tetgen.h	/^    triface tt; $/;"	m	class:tetgenmesh::badface
two	model_module0.f90	/^   integer, parameter :: two /;"	v	module:truth
two_d	model_module0.f90	/^   real(kind=double), parameter :: two_d /;"	v	module:truth
typ	extvar.c	/^int  typ[MAXEXT];           \/\/ External variable data types$/;"	v
type	tetgen.h	/^    int type; \/\/ 0, 1, or 2.$/;"	m	struct:tetgenio::__anon5
u	model_module0.f90	/^real(kind=doub/;"	v	module:system
u_0	model_module0.f90	/^real(kind=double), allocatable:: u_n(:),u(:),delta_u(:),tiny_u(:),u_0(/;"	v	module:system
u_n	model_module0.f90	/^real(kind=double), allocatable:: u_n(/;"	v	module:system
ugrid	visual7.cpp	/^static vtkUnstructuredGrid* ugrid[10]={};$/;"	v	file:
ugrid	visual8.cpp	/^static vtkUnstructuredGrid* ugrid[10]={};$/;"	v	file:
uintptr_t	tetgen.h	/^     typedef unsigned __int64 uintptr_t;$/;"	t
uintptr_t	tetgen.h	/^     typedef unsigned int uintptr_t;$/;"	t
unallocateditems	tetgen.h	/^    int  unallocateditems;$/;"	m	class:tetgenmesh::memorypool
unflip	tetgen.h	/^    int unflip;  \/\/ Undo the performed flips.$/;"	m	class:tetgenmesh::flipconstraints
unflipqueue	tetgen.h	/^  arraypool *unflipqueue;$/;"	m	class:tetgenmesh
uninfect	tetgen.h	/^inline void tetgenmesh::uninfect(triface& t) {$/;"	f	class:tetgenmesh
unknown10	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
unknown12	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
unknown8	moddefs.h	/^     &	unknown8, SINGLEE, unknown10, AIR, unknown12, SINGLEI,                 &$/;"	v
unmarkedge	tetgen.h	/^inline void tetgenmesh::unmarkedge(triface& t) {$/;"	f	class:tetgenmesh
unmarkface	tetgen.h	/^inline void tetgenmesh::unmarkface(triface& t) {$/;"	f	class:tetgenmesh
unmarktest	tetgen.h	/^inline void tetgenmesh::unmarktest(triface& t) {$/;"	f	class:tetgenmesh
unmarktest2	tetgen.h	/^inline void tetgenmesh::unmarktest2(triface& t) {$/;"	f	class:tetgenmesh
unuverts	tetgen.h	/^  long unuverts;                                \/\/ Are there unused vertices?$/;"	m	class:tetgenmesh
updateFaces	impfa.f	/^      subroutine updateFaces(/;"	s
update_	parall.c	/^FORTSUB update_ (PINT4 arynum, PINT4 ktmp)$/;"	f
update_1	utility0.f90	/^subroutine update_1$/;"	s
update_2	utility0.f90	/^subroutine update_2$/;"	s
update_width	elastic.f	/^      SUBROUTINE update_width(/;"	s
updater_	parall.c	/^FORTSUB updater_ (PINT4 arynum, PINT4 iv1, PINT4 iv2, PINT4 ktmp)$/;"	f
updating_after_coupled_field_converge	utility0.f90	/^subroutine updating_after_coupled_field_converge$/;"	s
useindex	tetgen.h	/^  int useindex;$/;"	m	class:tetgenio
useinsertradius	tetgen.h	/^  int useinsertradius;       \/\/ Save the insertion radius for Steiner points.$/;"	m	class:tetgenmesh
uv	tetgen.h	/^    REAL uv[2];$/;"	m	struct:tetgenio::__anon5
v1	tetgen.h	/^    int v1, v2;$/;"	m	struct:tetgenio::__anon3
v2	tetgen.h	/^    int v1, v2;$/;"	m	struct:tetgenio::__anon3
val	meminfo.c	/^		   _F_INTEGER *val$/;"	v
val	memman3.c	/^		   _F_INTEGER *val$/;"	v
val	readdatc.c	/^typedef struct cell { int index_f,index,i,j,k; float val;} CELL;$/;"	m	struct:cell	file:
validflag	tetgen.h	/^    int splitbdflag, validflag, respectbdflag;$/;"	m	class:tetgenmesh::insertvertexflags
varlen	memory.h	/^MEX int  varlen[MAXARY];   \/\/ Array word length$/;"	v
varvolume	tetgen.h	/^  int varvolume;                                                   \/\/ '-a', 0.$/;"	m	class:tetgenbehavior
vcelllist	tetgen.h	/^  int **vcelllist;$/;"	m	class:tetgenio
vedgelist	tetgen.h	/^  voroedge *vedgelist;$/;"	m	class:tetgenio
ver	tetgen.h	/^    int ver; \/\/ Range from 0 to 11.$/;"	m	class:tetgenmesh::triface
ver2edge	tetgen.h	/^  static int ver2edge[12], edge2ver[6], epivot[12];$/;"	m	class:tetgenmesh
verbose	tetgen.h	/^  int verbose;                                                     \/\/ '-V', 0.$/;"	m	class:tetgenbehavior
vertexlist	tetgen.h	/^    int *vertexlist;$/;"	m	struct:tetgenio::__anon1
vertexperblock	tetgen.h	/^  int vertexperblock;                                           \/\/ '-x', 4092.$/;"	m	class:tetgenbehavior
verttype	tetgen.h	/^  enum verttype {UNUSEDVERTEX, DUPLICATEDVERTEX, RIDGEVERTEX, ACUTEVERTEX,$/;"	g	class:tetgenmesh
vfacetlist	tetgen.h	/^  vorofacet *vfacetlist;$/;"	m	class:tetgenio
vint3D	visualc.h	/^inline _F_REAL_8 vint3D($/;"	f
vint3D_nonuniform	visualc.h	/^inline _F_REAL_8 vint3D_nonuniform($/;"	f
visI	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	m	struct:rectlist
visJ	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
vis_inform	visualc.h	/^typedef struct vis_inform {int ldim; char *name; int vnodal;} VIS_INFO ;$/;"	s
vis_tabotype	vistab.h	/^     &	ndatavals, numrock, vis_tabotype,$/;"	v
visdx	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	m	struct:visjcells
visdy	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	m	struct:visjcells
visicells	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	s
visjcells	visualc.h	/^typedef struct visjcells { int i,index;float visdx,visdy;} VISJC ;$/;"	s
visjmax	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	m	struct:rectlist
visjmax	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
visjmin	visualc.h	/^  int n,visI,visjmin,visjmax; RECT *cells;} RECTL;$/;"	m	struct:rectlist
visjmin	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
vjp	visualc.h	/^typedef struct visicells { int j,k,visJ,visjmin,visjmax; VISJC *vjp;} VISIC;$/;"	m	struct:visicells
vnodal	visualc.h	/^typedef struct vis_inform {int ldim; char *name; int vnodal;} VIS_INFO ;$/;"	m	struct:vis_inform
vnormal	tetgen.h	/^    REAL vnormal[3];$/;"	m	struct:tetgenio::__anon3
volumebound	tetgen.h	/^inline REAL tetgenmesh::volumebound(tetrahedron* ptr) {$/;"	f	class:tetgenmesh
volumeboundindex	tetgen.h	/^  int volumeboundindex;       \/\/ Index to find volume bound of a tetrahedron.$/;"	m	class:tetgenmesh
voroedge	tetgen.h	/^  } voroedge;$/;"	t	class:tetgenio	typeref:struct:tetgenio::__anon3
vorofacet	tetgen.h	/^  } vorofacet;$/;"	t	class:tetgenio	typeref:struct:tetgenio::__anon4
voroout	tetgen.h	/^  int voroout;                                                     \/\/ '-v', 0.$/;"	m	class:tetgenbehavior
vpointlist	tetgen.h	/^  REAL *vpointlist;$/;"	m	class:tetgenio
vstrain	model_module0.f90	/^    real(kind=double) vstrain$/;"	k	type:element
vtkcallwork_	vtkmem.c	/^FORTSUB vtkcallwork_ (FORTSUB (*subadd) (), PINT4 d)$/;"	f
vtkview	tetgen.h	/^  int vtkview;                                                     \/\/ '-k', 0.$/;"	m	class:tetgenbehavior
vyc	vis_sli.h	/^c  ,vyc,vzc$/;"	v
weighted	tetgen.h	/^  int weighted;                                                    \/\/ '-w', 0.$/;"	m	class:tetgenbehavior
weighted_param	tetgen.h	/^  int weighted_param;                                              \/\/ '-w', 0.$/;"	m	class:tetgenbehavior
well_geometry	utility0.f90	/^subroutine  well_geometry(/;"	s
wght_27	model_module0.f90	/^real(kind=double) wght_27(/;"	v	module:model_type
wght_8	model_module0.f90	/^real(kind=double) wght_8(/;"	v	module:model_type
wrM0	fcns.f	/^      subroutine wrM0(/;"	s
x	hypre.h	/^     &   mpi_comm,parcsr_A,A,b,x,par_b,par_x,solver,                           &$/;"	v
x	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
xdatavals	vistab.h	/^      common \/vistab\/ xmin, xmax, xdatavals,ydatavals,$/;"	v
xmax	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
xmax	vistab.h	/^      common \/vistab\/ xmin, xmax, xdatavals,ydatavals,$/;"	v
xmin	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
xmin	vistab.h	/^      common \/vistab\/ xmin, xmax, xdatavals,ydatavals,$/;"	v
y	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
ydatavals	vistab.h	/^      common \/vistab\/ xmin, xmax, xdatavals,ydatavals,$/;"	v
yield_para	model_module0.f90	/^    real(kind=double), pointer :: yield_para(/;"	k	type:material
yield_prp_itm	model_module0.f90	/^    integer yield_prp_itm$/;"	k	type:material
ymax	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
ymin	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
ynelem	model_module0.f90	/^integer int_face_tl,linear,ynelem,/;"	v	module:system
yrec	visual.h	/^c           the xrec,yrec,zrec data$/;"	v
ytol	model_module0.f90	/^   real(kind=double), parameter :: ytol /;"	v	module:control
z	visualc.h	/^typedef struct point {_F_REAL_8 x,y,z; int nb, i,j,k;} POINTS;$/;"	m	struct:point
zero	model_module0.f90	/^   integer, parameter :: zero /;"	v	module:truth
zero_d	model_module0.f90	/^   real(kind=double), parameter :: zero_d /;"	v	module:truth
zero_dch	model_module0.f90	/^integer, allocatable:: zero_dch(/;"	v	module:system
zero_value	model_module0.f90	/^real(kind=double), allocatable:: load_tl_zero(:),zero_value(/;"	v	module:system
zeroindex	tetgen.h	/^  int zeroindex;                                                   \/\/ '-z', 0.$/;"	m	class:tetgenbehavior
zmax	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
zmin	tetgen.h	/^  REAL xmax, xmin, ymax, ymin, zmax, zmin;         \/\/ Bounding box of points.$/;"	m	class:tetgenmesh
~tetgenio	tetgen.h	/^  ~tetgenio() {deinitialize();}$/;"	f	class:tetgenio
~tetgenmesh	tetgen.h	/^  ~tetgenmesh()$/;"	f	class:tetgenmesh
